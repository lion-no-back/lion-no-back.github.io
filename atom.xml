<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>松果会</title>
  
  <subtitle>勇敢追寻着，依然热爱着</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-10-14T08:57:07.540Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>松花鼠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Redis快速入门</title>
    <link href="http://example.com/posts/6721.html"/>
    <id>http://example.com/posts/6721.html</id>
    <published>2023-10-14T08:28:00.000Z</published>
    <updated>2023-10-14T08:57:07.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NoSQL介绍"><a href="#NoSQL介绍" class="headerlink" title="NoSQL介绍"></a>NoSQL介绍</h2><p>NoSQL（Not Only SQL）是一种<font color=#9932CD>非关系型数据库管理系统</font>，用于存储和检索大量<strong>非结构化和半结构化数据</strong></p><p>与传统关系型数据库不同，NoSQL数据库<strong>不依赖</strong>于<font color=#9932CD>固定的表结构和SQL查询语言</font></p><p>NoSQL数据库的<strong>设计目标</strong>是解决关系型数据库在处理大规模数据和高并发访问时遇到的一些限制和挑战。这些数据库通常采用键值存储、文档存储、列存储或图形数据库等<font color=#9932CD>不同的数据模型</font></p><p>以下是一些常见的NoSQL数据库类型：</p><ol><li>键值存储（Key-Value Stores）：这种类型的数据库使用键值对的方式存储数据。它们提供了简单且高效的数据访问，适用于需要快速存储和检索数据的场景。流行的键值存储数据库如Redis</li><li>文档数据库（Document Databases）：文档数据库以类似于JSON或XML的文档格式存储数据。每个文档可以包含不同字段和值，没有固定模式。这种数据模型适用于存储和查询半结构化数据。MongoDB是一种常见的文档数据库</li><li>列存储数据库（Columnar Databases）：列存储数据库以列的方式存储数据，而不是行。这种存储方式使得它们在需要查询特定列或进行大规模数据分析时非常高效。HBase和Apache Cassandra是常见的列存储数据库</li><li>图形数据库（Graph Databases）：图形数据库用于存储和查询图形结构数据，如节点和边。它们提供了高效的图形遍历和复杂的关系查询能力，适用于网络分析、社交网络和推荐系统等领域。Neo4j和Amazon Neptune是一些著名的图形数据库</li></ol><p>NoSQL最常见的解释是<code>&quot;non-relational&quot;</code>，也有很多说是”Not Only SQL”，这仅仅是一个概念，泛指非关系型数据库</p><h2 id="NoSQL-与-SQL-的差异"><a href="#NoSQL-与-SQL-的差异" class="headerlink" title="NoSQL 与 SQL 的差异"></a>NoSQL 与 SQL 的差异</h2><div class="table-container"><table><thead><tr><th>数据库类型</th><th>SQL</th><th>NoSQL</th></tr></thead><tbody><tr><td>数据结构</td><td>结构化</td><td>非结构化</td></tr><tr><td>数据关联</td><td>关联的</td><td>无关联的</td></tr><tr><td>查询方式</td><td>SQL查询</td><td>非SQL</td></tr><tr><td>事务特性</td><td>ACID</td><td>BASE</td></tr><tr><td>存储方式</td><td>磁盘</td><td>内存</td></tr><tr><td>扩展性</td><td>垂直</td><td>水平</td></tr><tr><td>使用场景</td><td>1. 数据结构固定 2. 相关业务对数据安全性、一致性要求较高</td><td>1. 数据结构不固定 2. 对一致性、安全性要求不高 3. 对性能要求</td></tr></tbody></table></div><h2 id="认识Redis"><a href="#认识Redis" class="headerlink" title="认识Redis"></a>认识Redis</h2><p>Redis诞生于2009年，全称是Remote Dictionary Server，远程词典服务器，是一个基于内存的键值型NoSQL数据库</p><p><strong>特征</strong></p><ul><li>键值型（<code>key-value</code>）型，value支持多种不同数据结构，功能丰富</li><li>单线程，每个命令具备原子性</li><li>低延迟，速度快（基于内存、IO多路复用、良好的编码）</li><li>支持数据持久化</li><li>支持主从集群、分片集群</li><li>支持多语言客户端</li></ul><p>Redis官网有一整套的命令详解，遇到需要或不会的地方可以查一下：<a href="http://doc.redisfans.com">http://doc.redisfans.com</a></p><h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><p><strong>第一步</strong> 使用虚拟机VMWare安装CentOS7，然后使用finalshell作为SSH连接工具，远程连接Linux服务器</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013093640680.png" alt="image-20231013093640680"></p><p><strong>第二步</strong> 将Redis安装包上传到虚拟机的<code>/usr/local/scr</code>目录下</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013094024803.png" alt="image-20231013094024803"></p><p><strong>第三步</strong> 解压并编译安装</p><p>进入安装包所在目录，然后运行<code>tar -zxvf redis-6.2.6.tar.gz</code>命令</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013094405030.png" alt="image-20231013094405030"></p><p>然后在进入解压后的redis目录<code>cd redis-6.2.6</code>，接着运行编译命令<code>make &amp;&amp; make install</code></p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013095302932.png" alt="image-20231013095302932"></p><p>默认的安装路径是在<code>/usr/local/bin</code>目录下</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013095455768.png" alt="image-20231013095455768"></p><p>该目录已经默认配置到环境变量，所以可以在任意目录下运行这些命令。其中：</p><ul><li>redis-cli：是redis提供的命令行客户端</li><li>redis-server：是redis的服务器启动脚本</li><li>redis-sentinel：是redis的哨兵启动脚本</li></ul><h2 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h2><p>Redis启动方式有很多种，如：前台启动、后台启动、开机启动</p><h3 id="前台启动（不推荐）"><a href="#前台启动（不推荐）" class="headerlink" title="前台启动（不推荐）"></a>前台启动（不推荐）</h3><blockquote><p>前台启动会阻塞整个会话窗口，窗口关闭或按下<code>CTRL+C</code>就会停止Redis，不推荐使用</p></blockquote><p>安装完成后，在任意目录输入<code>redis-server</code>命令即可启动Redis，启动界面如下</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013100259636.png" alt="image-20231013100259636"></p><h3 id="后台启动（不推荐）"><a href="#后台启动（不推荐）" class="headerlink" title="后台启动（不推荐）"></a>后台启动（不推荐）</h3><blockquote><p>要让Redis以后台方式启动，则必须修改Redis配置文件，配置文件所在目录就是之前解压的安装包目录</p></blockquote><p>要修改配置文件，那么首先对其备份一份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp redis.conf redis.conf.bck</span><br></pre></td></tr></table></figure><p>接着修改<code>redis.conf</code>文件中的一些配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听的地址，默认是127.0.0.1，会导致只能在本地访问。修改为0.0.0.0则可以在任意IP访问，生产环境不要设置为0.0.0.0</span></span><br><span class="line"><span class="attr">bind</span> <span class="string">0.0.0.0</span></span><br><span class="line"><span class="comment"># 守护进程，修改为yes后即可后台运行</span></span><br><span class="line"><span class="attr">daemonize</span> <span class="string">yes </span></span><br><span class="line"><span class="comment"># 密码，设置后访问Redis必须输入密码</span></span><br><span class="line"><span class="attr">requirepass</span> <span class="string">132</span></span><br></pre></td></tr></table></figure><p>在Linux中的vi编辑器分为三种模式，分别是命令行模式、插入模式和底行模式，这三种模式可以互相切换，使用vim时一定要注意当前所处模式</p><p><strong>命令模式</strong></p><ul><li>通过vim命令打开文件后默认进入命令行模式，<font color=#9932CD>另外两种模式需要先进入命令模式</font></li><li>命令模式下可以查看文件内容、移动光标</li></ul><p><strong>插入模式</strong></p><ul><li>插入模式下可以对文件内容进行编辑</li><li>在命令模式下按下[i,a,o]任意一个，就可以进入插入模式，进入插入模式后，下方会出现【insert】字样</li><li>在插入模式下按下<code>ESC</code>键即可回到命令行模式</li></ul><p><strong>底行模式</strong></p><ul><li>底行模式下可以通过命令对文件内容进行<font color=#9932CD>查找、显示行号、退出等操作</font></li><li>在命令行模式下按下[:,/]任意一个就可进入底行模式</li><li>通过/方式进入底行模式后，可以对文件内容进行查找</li><li>通过:方式进入底行模式后，可以输入wq（保存并退出）、q!（不保存退出）、set nu（显示行号）</li></ul><p>Redis的其他场景配置</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监听的端口</span></span><br><span class="line"><span class="attr">port</span> <span class="string">6379</span></span><br><span class="line"><span class="comment"># 工作目录，默认是当前目录，也就是运行redis-server时的命令，日志、持久化等文件会保存在这个目录</span></span><br><span class="line"><span class="attr">dir</span> <span class="string">.</span></span><br><span class="line"><span class="comment"># 数据库数量，设置为1，代表只使用1个库，默认有16个库，编号0~15</span></span><br><span class="line"><span class="attr">databases</span> <span class="string">1</span></span><br><span class="line"><span class="comment"># 设置redis能够使用的最大内存</span></span><br><span class="line"><span class="attr">maxmemory</span> <span class="string">512mb</span></span><br><span class="line"><span class="comment"># 日志文件，默认为空，不记录日志，可以指定日志文件名</span></span><br><span class="line"><span class="attr">logfile</span> <span class="string">&quot;redis.log&quot;</span></span><br></pre></td></tr></table></figure><p>启动Redis</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入redis安装目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/local/src/redis-6.2.6</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231013104209829.png" alt="image-20231013104209829"></p><h3 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h3><p>可以通过配置来实现开机自启</p><p>首先新建一个系统服务文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/systemd/system/redis.service</span><br></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=redis-server</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/usr/local/bin/redis-server /usr/local/src/redis-6.2.6/redis.conf</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后重载系统服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>接着就可以用下面这组命令来操作redis</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">systemctl stop redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status redis</span><br></pre></td></tr></table></figure><p>执行下面命令就可以让redis开机自启了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;NoSQL介绍&quot;&gt;&lt;a href=&quot;#NoSQL介绍&quot; class=&quot;headerlink&quot; title=&quot;NoSQL介绍&quot;&gt;&lt;/a&gt;NoSQL介绍&lt;/h2&gt;&lt;p&gt;NoSQL（Not Only SQL）是一种&lt;font color=#9932CD&gt;非关系型数据库管</summary>
      
    
    
    
    <category term="Redis" scheme="http://example.com/categories/Redis/"/>
    
    
  </entry>
  
  <entry>
    <title>视图/存储过程/触发器</title>
    <link href="http://example.com/posts/6642.html"/>
    <id>http://example.com/posts/6642.html</id>
    <published>2023-10-14T08:22:00.000Z</published>
    <updated>2023-10-14T08:23:55.863Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、视图"><a href="#一、视图" class="headerlink" title="一、视图"></a>一、视图</h2><p>视图(View)是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的</p><p>通俗地讲，视图只保存了查询的SQL逻辑，不保存查询结果。所以在创建视图时，主要工作就落到创建这条SQL查询语句上</p><p><strong>视图创建</strong></p><p><code>CREATE [OR REPLACE] VIEW 视图名称[(列名列表)] AS SELECT语句 [WITH[CASCADED|LOCAL] CHECK OPTION]</code></p><p><strong>视图查询</strong></p><p><code>SHOW CREATE VIEW 视图名称;</code>：查看插件视图语句</p><p><code>SELECT * FROM 视图名称 ......;</code>：查看视图数据</p><p><strong>修改视图</strong></p><p>方式一：<code>CREATE [OR REPLACE] VIEW 视图名称[(列名列表)] AS SELECT语句 [WITH[CASCADED|LOCAL] CHECK OPTION]</code></p><p>方式二：<code>ALTER VIEW 视图名称[(列名列表)] AS SELECT语句 [WITH[CACADED|LOCAL] CHECK OPTION]</code></p><p><strong>删除视图</strong></p><p><code>DROP VIEW [IF EXISTS] 视图名称 [,视图名称] ...</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询视图</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> stu_v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu_v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu_v <span class="keyword">where</span> id <span class="operator">&lt;</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改视图</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v <span class="keyword">as</span> <span class="keyword">select</span> id,name,<span class="keyword">no</span> <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> stu_v <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> student <span class="keyword">where</span>  id <span class="operator">&lt;=</span> <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> if <span class="keyword">exists</span> stu_v;</span><br></pre></td></tr></table></figure><h3 id="检查选项"><a href="#检查选项" class="headerlink" title="检查选项"></a>检查选项</h3><p>当使用WITH CHECK OPTION子句创建视图时，MySQL会通过视图检查正在更改的每个行，例如插入、更新、删除，以使其符合视图的定义。MySQL允许基于另一个视图创建视图，它还会检查依赖视图中的规则以保持一致性。为了确定检查的范围，mysql提供了两个选项：CASCADED 和 LOCAL，默认值为CASCADED</p><p>【实践】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">20</span> <span class="keyword">with</span> <span class="keyword">cascaded</span> <span class="keyword">check</span> option ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stu_v;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v <span class="keyword">values</span> (<span class="number">6</span>, <span class="string">&#x27;Tom&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v <span class="keyword">values</span> (<span class="number">30</span>, <span class="string">&#x27;Alice&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729103010506.png" alt="image-20230729103010506"></p><h4 id="cascaded"><a href="#cascaded" class="headerlink" title="cascaded"></a>cascaded</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v <span class="keyword">values</span>(<span class="number">5</span>, <span class="string">&#x27;Bob&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v_1 <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> stu_v <span class="keyword">where</span> id <span class="operator">&gt;=</span> <span class="number">10</span> <span class="keyword">with</span> <span class="keyword">cascaded</span> <span class="keyword">check</span> option ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_1 <span class="keyword">values</span> (<span class="number">7</span>, <span class="string">&#x27;Curiosity&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_1 <span class="keyword">values</span> (<span class="number">26</span>, <span class="string">&#x27;Curiosity&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_1 <span class="keyword">values</span> (<span class="number">15</span>, <span class="string">&#x27;Curiosity&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v_2 <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> stu_v_1 <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_2 <span class="keyword">values</span> (<span class="number">11</span>, <span class="string">&#x27;Saly&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_2 <span class="keyword">values</span> (<span class="number">17</span>, <span class="string">&#x27;Lily&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_2 <span class="keyword">values</span> (<span class="number">28</span>, <span class="string">&#x27;Jack&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729104839526.png" alt="image-20230729104839526"></p><h4 id="local"><a href="#local" class="headerlink" title="local"></a>local</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v_3 <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> student <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">15</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_3 <span class="keyword">values</span>(<span class="number">5</span>, <span class="string">&#x27;Bob&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_3 <span class="keyword">values</span>(<span class="number">16</span>, <span class="string">&#x27;Tom&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v_4 <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> stu_v_3 <span class="keyword">where</span> id <span class="operator">&gt;=</span> <span class="number">10</span> <span class="keyword">with</span> <span class="keyword">local</span> <span class="keyword">check</span> option ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_4 <span class="keyword">values</span> (<span class="number">13</span>, <span class="string">&#x27;Curiosity&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_4 <span class="keyword">values</span> (<span class="number">17</span>, <span class="string">&#x27;Curious&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> stu_v_5 <span class="keyword">as</span> <span class="keyword">select</span> id,name <span class="keyword">from</span> stu_v_4 <span class="keyword">where</span> id <span class="operator">&lt;</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> stu_v_5 <span class="keyword">values</span> (<span class="number">14</span>, <span class="string">&#x27;Saly&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729110122581.png" alt="image-20230729110122581"></p><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p>有检查选项就会校验条件，而cascaded检查选项会级联所依赖的基表或视图对条件进行校验，local检查选项只管本视图对条件的校验</p><h3 id="更新及作用"><a href="#更新及作用" class="headerlink" title="更新及作用"></a>更新及作用</h3><p>要使视图可更新，视图中的行与基础表中的行之间必须存在一对一的关系。如果视图包含以下任何一项，则该视图不可更新：</p><ol><li>聚合函数或窗口函数（SUM()、MIN()、MAX()、COUNT()等）</li><li>DISTINCT</li><li>GOURP BY</li><li>HAVING</li><li><p>UNION 或 UNION ALL</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729111048516.png" alt="image-20230729111048516"></p></li></ol><p><strong>简化</strong></p><p>视图不仅可以简化用户对数据的理解，也可以简化对数据的操作。那些经常被使用的查询可以被定义为视图，从而使得用户不必为以后的操作每次指定全部的条件</p><p><strong>敏感信息不可见</strong></p><p>数据库可以授权，但不能授权到数据库特定行和特定列上。通过视图，用户只能查询和修改所能见到的数据</p><p><strong>数据独立</strong></p><p>视图可帮助用户屏蔽真实表结构变化带来的影响</p><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><blockquote><h3 id="根据如下需求，定义视图"><a href="#根据如下需求，定义视图" class="headerlink" title="根据如下需求，定义视图"></a>根据如下需求，定义视图</h3><ol><li>为了保证数据库表的安全性，开发人员在操作tb_user表时，只能看到用户的基本字段，屏蔽手机号和邮箱两个字段</li><li>查询每个学生所选修的课程（三张表联查），这个功能在很多的业务中都有使用到，为了简化操作，定义一个视图</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 为了保证数据库表的安全性，开发人员在操作tb_user表时，只能看到用户的基本字段，屏蔽手机号和邮箱两个字段</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> tb_user_v <span class="keyword">as</span> <span class="keyword">select</span> id, name, profession, age, gender, status, createtime <span class="keyword">from</span> tb_user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_user_v;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个学生所选修的课程（三张表联查），这个功能在很多的业务中都有使用到，为了简化操作，定义一个视图</span></span><br><span class="line"><span class="keyword">select</span> s.name, s.no, c.name <span class="keyword">from</span> student s, student_course sc, course c <span class="keyword">where</span> s.id <span class="operator">=</span> sc.studentid <span class="keyword">and</span> c.id <span class="operator">=</span> sc.courseid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> tb_stu_course_v <span class="keyword">as</span> <span class="keyword">select</span> s.name student_name, s.no, c.name course_name <span class="keyword">from</span> student s, student_course sc, course c <span class="keyword">where</span> s.id <span class="operator">=</span> sc.studentid <span class="keyword">and</span> c.id <span class="operator">=</span> sc.courseid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tb_stu_course_v;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729112613694.png" alt="image-20230729112613694"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729113154975.png" alt="image-20230729113154975"></p><h2 id="二、存储过程"><a href="#二、存储过程" class="headerlink" title="二、存储过程"></a>二、存储过程</h2><p>存储过程是事先经过编译并存储在数据库中的一段SQL语句的集合，调用存储过程可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的</p><p>存储过程就是将数据库SQL语言层面的代码封装与重用</p><p><strong>特点</strong></p><ul><li>封装，复用</li><li>可以接收参数，也可以返回数据</li><li>减少网络交互，提升效率</li></ul><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程名称([参数列表])</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="comment">-- SQL语句</span></span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><p><strong>调用</strong><br><code>CALL 名称([参数]);</code></p><p><strong>查看</strong></p><p><code>SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_SCHEMA = &#39;xxx&#39;;</code>：查询指定数据库的存储过程及状态信息</p><p><code>SHOW CREATE PROCEDURE 存储过程名称;</code>：查询某个存储过程的定义</p><p><strong>删除</strong></p><p><code>DROP PROCEDURE [IF EXISTS] 存储过程名称;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 存储过程基本语法</span></span><br><span class="line"><span class="comment">-- 创建</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p1()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> student;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 调用</span></span><br><span class="line"><span class="keyword">call</span> p1();</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> information_schema.ROUTINES <span class="keyword">where</span> ROUTINE_SCHEMA <span class="operator">=</span> <span class="string">&#x27;itheima&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">procedure</span> p1;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> if <span class="keyword">exists</span> p1;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 在命令行中，执行创建存储过程的SQL时，需要<font color=#9932CD>通过关键字 delimiter 指定SQL语句的结束符</font></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h4><p>==系统变量== 是MySQL服务提供的，不是用户定义的，属于服务器层面。分为全局变量（GLOBAL）、会话变量（SESSION）</p><p><strong>查看系统变量</strong><br><code>SHOW [SESSION|GLOBAL] VARIABLES;</code>：查看所有系统变量</p><p><code>SHOW [SESSION|GLOBAL] VARIABLES LIKE &#39;......&#39;;</code>：可以通过LIKE模糊查询方式查找变量</p><p><code>SELECT @@[SESSION|GLOABL]系统变量名;</code>：查看指定变量的值</p><p><strong>设置系统变量</strong><br><code>SET [SESSION|GLOBAL] 系统变量名 = 值;</code></p><p><code>SET @@[SESSION|GLOBAL] 系统变量名 = 值;</code></p><p><strong>注意：</strong> 如果没有指定SESSION/GLOBAL，默认是SESSION即会话变量；MySQL服务重新启动后，所设置的全局参数会失效，要想不失效，可以在Linux下的 /etc/my.cnf中配置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看系统变量</span></span><br><span class="line"><span class="keyword">show</span> session variables ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> session variables <span class="keyword">like</span> <span class="string">&#x27;auto%&#x27;</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;auto%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@autocommit</span>;</span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@session</span>.autocommit;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 设置系统变量</span></span><br><span class="line"><span class="keyword">set</span> session autocommit <span class="operator">=</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h4 id="用户定义变量"><a href="#用户定义变量" class="headerlink" title="用户定义变量"></a>用户定义变量</h4><p>==用户定义变量== 是用户根据需要自己定义的变量，用户变量不用提前声明，在用的时候直接用“@变量名”使用即可，其作用域为当前连接</p><p><strong>赋值</strong></p><p><code>SET @var_name = expr [,@var_name=expr]...;</code></p><p><code>SET @var_name := expr [,@var_name:=expr]...;</code></p><p><code>SELECT @var_name :=expr [,@var_name:=expr]...;</code></p><p><code>SELECT 字段名 INTO @var_name FROM 表名;</code></p><p><strong>使用</strong></p><p><code>SELECT @var_name;</code></p><p><strong>注意：</strong> 用户定义的变量无需对其进行声明或初始化，只不过获取到的值为NULL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@myname</span> <span class="operator">=</span> <span class="string">&#x27;itheima&#x27;</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@myage</span> :<span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="variable">@mygender</span> :<span class="operator">=</span> <span class="string">&#x27;男&#x27;</span>,<span class="variable">@myhobby</span> :<span class="operator">=</span> <span class="string">&#x27;java&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@mycolor</span> :<span class="operator">=</span> <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">into</span> <span class="variable">@mycount</span> <span class="keyword">from</span> tb_user;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用</span></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@myname</span>,<span class="variable">@myage</span>,<span class="variable">@mygender</span>,<span class="variable">@myhobby</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@mycolor</span>,<span class="variable">@mycount</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="variable">@abc</span>;</span><br></pre></td></tr></table></figure><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><p>==局部变量== 是根据需要定义在局部生效的变量，访问之前，需要DECLARE声明。可用作存储过程内的局部变量和输入参数，局部变量的范围是在其内声明的BEGIN … END块</p><p><strong>声明</strong></p><p><code>DECLARE 变量名 变量类型[DEFAULT ...];</code></p><p>变量类型就是数据库字段类型：INT、BIGINT、CHAR、VARCHAR、DATE、TIME等</p><p><strong>赋值</strong></p><p><code>SET 变量名 = 值;</code></p><p><code>SET 变量名 := 值;</code></p><p><code>SELECT 字段名 INTO 变量名 FROM 表名...;</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 声明</span></span><br><span class="line"><span class="comment">-- 赋值</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p2()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> stu_count <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">into</span> stu_count <span class="keyword">from</span> student;</span><br><span class="line">    <span class="keyword">select</span> stu_count;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p2();</span><br></pre></td></tr></table></figure><h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IF 条件<span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">......</span><br><span class="line">ELSEIF 条件<span class="number">2</span> <span class="keyword">THEN</span><span class="comment">-- 可选</span></span><br><span class="line">......</span><br><span class="line"><span class="keyword">ELSE</span></span><br><span class="line">......</span><br><span class="line"><span class="keyword">END</span> IF;</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储过程，完成如下需求"><a href="#定义存储过程，完成如下需求" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>根据定义的分数score变量，判定当前分数对应的分数等级</p><ol><li>score &gt;= 85分，等级为优秀</li><li>score &gt;= 60分 且 score &lt; 85分，等级为及格</li><li>score &lt; 60分，等级为不及格</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p3()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> score <span class="type">int</span> <span class="keyword">default</span> <span class="number">58</span>;</span><br><span class="line">    <span class="keyword">declare</span> <span class="keyword">result</span> <span class="type">varchar</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    if score <span class="operator">&gt;=</span> <span class="number">85</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line">    elseif score <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">result</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p3();</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><div class="table-container"><table><thead><tr><th>类型</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>IN</td><td>该类参数作为输入，也就是需要调用时传入值</td><td>默认</td></tr><tr><td>OUT</td><td>该类参数作为输出，也就是该参数可以作为返回值</td><td></td></tr><tr><td>INOUT</td><td>既可以作为输入参数，也可以作为输出参数</td></tr></tbody></table></div><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> 存储过程名称([<span class="keyword">IN</span><span class="operator">|</span><span class="keyword">OUT</span><span class="operator">|</span><span class="keyword">INOUT</span> 参数名 参数类型])</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SQL语句</span></span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储过程，完成如下需求-1"><a href="#定义存储过程，完成如下需求-1" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>根据传入参数score判定当前分数对应的分数等级并返回</p><ol><li>score &gt;= 85分，等级为优秀</li><li>score &gt;= 65分 且 score &lt; 85 分，等级为及格</li><li>score &lt; 60分，等级为不及格</li></ol><p>将传入的200分制的分数换算成百分制，然后返回</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 根据传入参数score判定当前分数对应的分数等级并返回</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p4(<span class="keyword">in</span> score <span class="type">int</span>, <span class="keyword">out</span> <span class="keyword">result</span> <span class="type">varchar</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    if score <span class="operator">&gt;=</span> <span class="number">85</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line">    elseif score <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">    <span class="keyword">end</span> if;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p4(<span class="number">68</span>, <span class="variable">@result</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@result</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将传入的200分制的分数换算成百分制，然后返回</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p5(<span class="keyword">inout</span> scroe <span class="keyword">double</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">set</span> scroe :<span class="operator">=</span> scroe <span class="operator">*</span> <span class="number">0.5</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="variable">@score</span> :<span class="operator">=</span> <span class="number">78</span>;</span><br><span class="line"><span class="keyword">call</span> p5(<span class="variable">@score</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="variable">@score</span>;</span><br></pre></td></tr></table></figure><h3 id="case"><a href="#case" class="headerlink" title="case"></a>case</h3><p><strong>语法一</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> case_value</span><br><span class="line"><span class="keyword">WHEN</span> when_value1 <span class="keyword">THEN</span> statement_list1</span><br><span class="line">[<span class="keyword">WHEN</span> when_value2 <span class="keyword">THEN</span> statement_list2]...</span><br><span class="line">[<span class="keyword">ELSE</span> statement_list]</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br></pre></td></tr></table></figure><p><strong>语法二</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> search_condition1 <span class="keyword">THEN</span> statement_list1</span><br><span class="line">[<span class="keyword">WHEN</span> search_condition2 <span class="keyword">THEN</span> statement_list2]...</span><br><span class="line">[<span class="keyword">ELSE</span> statement_list]</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">CASE</span>;</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储过程，完成如下需求-2"><a href="#定义存储过程，完成如下需求-2" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>根据传入的月份，判定月份所属的季节（要求采用case结构）</p><ol><li>1-3月份为第一季度</li><li>4-6月份为第二季度</li><li>7-9月份为第三季度</li><li>10-12月份为第四季度</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p6(<span class="keyword">in</span> <span class="keyword">month</span> <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> <span class="keyword">result</span> <span class="type">varchar</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">case</span></span><br><span class="line">        <span class="keyword">when</span> <span class="keyword">month</span> <span class="operator">&gt;=</span> <span class="number">1</span> <span class="keyword">and</span> <span class="keyword">month</span> <span class="operator">&lt;=</span> <span class="number">3</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;第一季度&#x27;</span>;</span><br><span class="line">        <span class="keyword">when</span> <span class="keyword">month</span> <span class="operator">&gt;=</span> <span class="number">4</span> <span class="keyword">and</span> <span class="keyword">month</span> <span class="operator">&lt;=</span> <span class="number">6</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;第二季度&#x27;</span>;</span><br><span class="line">        <span class="keyword">when</span> <span class="keyword">month</span> <span class="operator">&gt;=</span> <span class="number">7</span> <span class="keyword">and</span> <span class="keyword">month</span> <span class="operator">&lt;=</span> <span class="number">9</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;第三季度&#x27;</span>;</span><br><span class="line">        <span class="keyword">when</span> <span class="keyword">month</span> <span class="operator">&gt;=</span> <span class="number">10</span> <span class="keyword">and</span> <span class="keyword">month</span> <span class="operator">&lt;=</span> <span class="number">12</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;第四季度&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">result</span> :<span class="operator">=</span> <span class="string">&#x27;非法参数&#x27;</span>;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">case</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> concat(<span class="string">&#x27;您输入的月份为: &#x27;</span>, <span class="keyword">month</span>, <span class="string">&#x27;,所属的季度为: &#x27;</span>,<span class="keyword">result</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p6(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p6(<span class="number">16</span>);</span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>while循环是有条件的循环控制语句。满足条件后，再执行循环体中的SQL语句</p><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHILE 条件 DO</span><br><span class="line"><span class="keyword">SQL</span>逻辑...</span><br><span class="line"><span class="keyword">END</span> WHILE;</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储过程，完成如下需求-3"><a href="#定义存储过程，完成如下需求-3" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>计算从1累加到n的值，n为传入的参数值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- while</span></span><br><span class="line"><span class="comment">-- A. 定义局部变量，记录累加之后的值</span></span><br><span class="line"><span class="comment">-- B。 每循环一次，就会对n进行减1，如果n减到0，则退出循环</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p7(<span class="keyword">in</span> n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> total <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    while n <span class="operator">&gt;</span> <span class="number">0</span> do</span><br><span class="line">        <span class="keyword">set</span> total :<span class="operator">=</span> total<span class="operator">+</span>n;</span><br><span class="line">        <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> while;</span><br><span class="line">    <span class="keyword">select</span> total;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p7(<span class="number">12</span>);</span><br></pre></td></tr></table></figure><h4 id="repeat"><a href="#repeat" class="headerlink" title="repeat"></a>repeat</h4><p>repeat循环是有条件的循环控制语句，当满足条件的时候就退出循环</p><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REPEAT</span><br><span class="line"><span class="keyword">SQL</span>逻辑...</span><br><span class="line">UNTIL 条件</span><br><span class="line"><span class="keyword">END</span> REPEAT;</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储过程，完成如下需求-4"><a href="#定义存储过程，完成如下需求-4" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>计算从1累加到n的值，n为传入的参数值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- repeat</span></span><br><span class="line"><span class="comment">-- a. 定义局部变量，记录累加之后的值</span></span><br><span class="line"><span class="comment">-- b. 每循环一次，就会对n进行减1，如果n减到0，则退出循环</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p8(<span class="keyword">in</span> n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> total <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    repeat</span><br><span class="line">        <span class="keyword">set</span> total :<span class="operator">=</span> total <span class="operator">+</span> n;</span><br><span class="line">        <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">    until n <span class="operator">&lt;=</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">end</span> repeat;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span> total;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p8(<span class="number">24</span>);</span><br><span class="line"><span class="keyword">call</span> p8(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>先执行循环内语句在判定是否满足条件，满足则退出</p><h4 id="loop"><a href="#loop" class="headerlink" title="loop"></a>loop</h4><p>loop实现简单的循环，如果不在SQL逻辑中增加退出循环的条件，可以用其来实现简单的死循环。loop可以配合两个语句使用</p><ul><li>leave：简单循环使用，退出循环</li><li>iterate：必须用在循环中，作用是跳过当前循环剩下的语句，直接进入下一次循环</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[begin_label:] LOOP</span><br><span class="line"><span class="keyword">SQL</span>逻辑...</span><br><span class="line"><span class="keyword">END</span> LOOP [end_lable];</span><br></pre></td></tr></table></figure><p><code>LEAVE label;</code>：退出指定标记的循环体</p><p><code>ITERATE lable;</code>：直接进入下一次循环</p><blockquote><h3 id="定义存储过程，完成如下需求-5"><a href="#定义存储过程，完成如下需求-5" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><ol><li>计算从1累加到n的值，n为传入的参数值</li><li>计算从1到n之间的偶数累加的值，n为传入的参数值</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 计算从1累加到n的值，n为传入的参数值</span></span><br><span class="line"><span class="comment">-- loop 计算从1累加到n的值，n为传入的参数值</span></span><br><span class="line"><span class="comment">-- a. 定义局部变量，记录累加之后的值</span></span><br><span class="line"><span class="comment">-- b. 每循环一次，就会对n进行减1，如果n减到0，则退出循环 ---&gt; leave xx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p9(<span class="keyword">in</span> n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> total <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    sum:loop</span><br><span class="line">        if n <span class="operator">&lt;=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            leave sum;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">set</span> total :<span class="operator">=</span> total <span class="operator">+</span> n;</span><br><span class="line">        <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> loop sum;</span><br><span class="line">    <span class="keyword">select</span> total;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p9(<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 计算从1到n之间的偶数累加的值，n为传入的参数值</span></span><br><span class="line"><span class="comment">-- a. 定义局部变量，记录累加之后的值</span></span><br><span class="line"><span class="comment">-- b. 每循环一次，就会对n进行-1，如果减到0，则退出循环 ---&gt; leave xx</span></span><br><span class="line"><span class="comment">-- c. 如果当次累加的数据是奇数，则直接进行下一次循环 ---&gt; iterate xx</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p10(<span class="keyword">in</span> n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> total <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    sum:loop</span><br><span class="line">        if n <span class="operator">&lt;=</span> <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            leave sum;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">        if n <span class="operator">%</span> <span class="number">2</span> <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">            iterate sum;</span><br><span class="line">        <span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">set</span> total :<span class="operator">=</span> total <span class="operator">+</span> n;</span><br><span class="line">        <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> loop sum;</span><br><span class="line">    <span class="keyword">select</span> total;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> p10(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><h3 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h3><p>游标（CURSOR）是用来存储查询结果集的数据类型，在存储过程和函数中可以使用游标对结果集进行循环的处理。游标的使用包括游标的声明、OPEN、FETCH和CLOSE，其语法分别如下：</p><p><strong>声明游标</strong></p><p><code>DECLARE 游标名称 CURSOR FOR 查询语句;</code></p><p><strong>打开游标</strong><br><code>OPEN 游标名称;</code></p><p><strong>获取游标记录</strong></p><p><code>FETCH 游标名称 INTO 变量[,变量];</code></p><p><strong>关闭游标</strong></p><p><code>CLOSE 游标名称;</code></p><blockquote><h3 id="定义存储过程，完成如下需求-6"><a href="#定义存储过程，完成如下需求-6" class="headerlink" title="定义存储过程，完成如下需求"></a>定义存储过程，完成如下需求</h3><p>根据传入的参数uage，来查询用户表tb_user中，所有的用户年龄小于等于uage的用户姓名（name）和专业（profession），并将用户的姓名和专业插入到所创建的一张新表（id,name,profession)中</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 逻辑</span></span><br><span class="line"><span class="comment">-- a. 声明游标，存储查询结果集</span></span><br><span class="line"><span class="comment">-- b. 准备：创建表结构</span></span><br><span class="line"><span class="comment">-- c. 开启游标</span></span><br><span class="line"><span class="comment">-- d. 获取游标中的记录</span></span><br><span class="line"><span class="comment">-- e. 插入数据到新表中</span></span><br><span class="line"><span class="comment">-- f. 关闭游标</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> p11(<span class="keyword">in</span> uage <span class="type">int</span>)</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> uname <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line">    <span class="keyword">declare</span> upro <span class="type">varchar</span>(<span class="number">100</span>) <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line">    <span class="keyword">declare</span> u_cursor <span class="keyword">cursor</span> <span class="keyword">for</span> <span class="keyword">select</span> name, profession <span class="keyword">from</span>  tb_user <span class="keyword">where</span> age <span class="operator">&lt;=</span> uage;</span><br><span class="line">    <span class="keyword">declare</span> exit handler <span class="keyword">for</span> <span class="keyword">SQLSTATE</span> <span class="string">&#x27;02000&#x27;</span> <span class="keyword">close</span> u_cursor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> tb_user_pro;</span><br><span class="line">    <span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> tb_user_pro(</span><br><span class="line">        id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment,</span><br><span class="line">        name <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">        profession <span class="type">varchar</span>(<span class="number">100</span>)</span><br><span class="line">    ) <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">open</span> u_cursor;</span><br><span class="line">    while <span class="literal">true</span> do</span><br><span class="line">        <span class="keyword">fetch</span> u_cursor <span class="keyword">into</span> uname,upro;</span><br><span class="line">        <span class="keyword">insert</span> <span class="keyword">into</span> tb_user_pro <span class="keyword">values</span> (<span class="keyword">null</span>, uname, upro);</span><br><span class="line">    <span class="keyword">end</span> while;</span><br><span class="line">    <span class="keyword">close</span> u_cursor;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">call</span> p11(<span class="number">30</span>);</span><br></pre></td></tr></table></figure><h4 id="条件处理程序"><a href="#条件处理程序" class="headerlink" title="条件处理程序"></a>条件处理程序</h4><p>条件处理程序（Handler）可用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤。具体语法为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> handler_action HANDLER <span class="keyword">FOR</span> condition_value [,condition_value] ... statement;</span><br><span class="line"></span><br><span class="line">handler_action</span><br><span class="line">CONTINUE:继续执行当前程序</span><br><span class="line">EXIT:终止执行当前程序</span><br><span class="line">condition_value</span><br><span class="line"><span class="keyword">SQLSTATE</span> sqlstate_value:状态码，如<span class="number">02000</span></span><br><span class="line"><span class="keyword">SQLWARNING</span>: 所有以<span class="number">01</span>开头的<span class="keyword">SQLSTATE</span>代码的简写</span><br><span class="line"><span class="keyword">NOT</span> FOUND: 所有以<span class="number">02</span>开头的<span class="keyword">SQLSTATE</span>代码的简写</span><br><span class="line"><span class="keyword">SQLEXCEPTION</span>: 所有没有被<span class="keyword">SQLWARNING</span> 或 <span class="keyword">NOT</span> FOUND 捕获的<span class="keyword">SQLSTATE</span>代码的简写</span><br></pre></td></tr></table></figure><p>官方文档：<a href="https://dev.mysql.com/doc/mysql-errors/8.0/en/server-error-reference.html">https://dev.mysql.com/doc/mysql-errors/8.0/en/server-error-reference.html</a></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729180651105.png" alt="image-20230729180651105"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729180955139.png" alt="image-20230729180955139"></p><h3 id="存储函数"><a href="#存储函数" class="headerlink" title="存储函数"></a>存储函数</h3><p>存储函数是有返回值的存储过程，存储函数的参数只能是IN类型。具体语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> FUCTION 存储函数名称([参数列表])</span><br><span class="line"><span class="keyword">RETURNS</span> type [characteristic ...]</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="comment">-- SQL语句</span></span><br><span class="line"><span class="keyword">RETURN</span> ...;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line">characteristic 说明:</span><br><span class="line"><span class="keyword">DETERMINISTIC</span>:相同的输入参数总是产生相同的结果</span><br><span class="line"><span class="keyword">NO</span> <span class="keyword">SQL</span>:不包含<span class="keyword">SQL</span>语句</span><br><span class="line"><span class="keyword">READS</span> <span class="keyword">SQL</span> DATA:包含读取数据的语句，但不包含写入数据的语句</span><br></pre></td></tr></table></figure><blockquote><h3 id="定义存储函数，完成如下需求"><a href="#定义存储函数，完成如下需求" class="headerlink" title="定义存储函数，完成如下需求"></a>定义存储函数，完成如下需求</h3><p>计算从1累加到n的值，n作为传入的参数值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> fun1(n <span class="type">int</span>)</span><br><span class="line"><span class="keyword">returns</span> <span class="type">int</span> <span class="keyword">deterministic</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">declare</span> total <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line">    while n <span class="operator">&gt;</span> <span class="number">0</span> do</span><br><span class="line">        <span class="keyword">set</span> total :<span class="operator">=</span> total <span class="operator">+</span> n;</span><br><span class="line">        <span class="keyword">set</span> n :<span class="operator">=</span> n <span class="operator">-</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">end</span> while;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> fun1(<span class="number">100</span>);</span><br></pre></td></tr></table></figure><h2 id="三、触发器"><a href="#三、触发器" class="headerlink" title="三、触发器"></a>三、触发器</h2><p>触发器是与表有关的数据库对象，指在insert/update/delete之前或之后，触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以协助应用在数据库端确保数据的完整性，日志记录，数据校验等操作</p><p>使用别名 OLD 和 NEW 来引用触发器中发生变化的记录内容，这与其他数据库是相似的。现在触发器还只支持行级触发，不支持语句级触发</p><div class="table-container"><table><thead><tr><th>触发器类型</th><th>NEW 和 OLD</th></tr></thead><tbody><tr><td>INSERT 型触发器</td><td>NEW 表示将要或者已经新增的数据</td></tr><tr><td>UPDATE 型触发器</td><td>OLD 表示修改之前的数据，NEW 表示将要或已经修改后的数据</td></tr><tr><td>DELETE 型触发器</td><td>OLD 表示将要或者已经删除的数据</td></tr></tbody></table></div><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name</span><br><span class="line">BEFORE<span class="operator">|</span>AFTER <span class="keyword">INSERT</span><span class="operator">|</span><span class="keyword">UPDATE</span><span class="operator">|</span><span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">ON</span> tbl_name <span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line">trigger_stmt;</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><p><strong>查看</strong></p><p><code>SHOW TRIGGERS;</code></p><p><strong>删除</strong></p><p><code>DROP TRIGGER [schema_name.]trigger_name;</code>：如果没有指定schema_name，默认为当前数据库</p><blockquote><h3 id="定义触发器，完成如下需求"><a href="#定义触发器，完成如下需求" class="headerlink" title="定义触发器，完成如下需求"></a>定义触发器，完成如下需求</h3><p>通过触发器记录tb_user表的数据变更日志，将变更日志插入到日志表user_logs中，包含增加、修改、删除</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_logs(</span><br><span class="line">id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> auto_increment,</span><br><span class="line">    operation <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;操作类型: insert|update|delete&#x27;</span>,</span><br><span class="line">    operate_time datetime <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;操作时间&#x27;</span>,</span><br><span class="line">    operate_id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;操作的ID&#x27;</span>,</span><br><span class="line">    operate_params <span class="type">varchar</span>(<span class="number">500</span>) comment <span class="string">&#x27;操作参数&#x27;</span>,</span><br><span class="line">    <span class="keyword">primary</span> key(`id`)</span><br><span class="line">)engine <span class="operator">=</span> innodb <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据触发器</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tb_user_insert_trigger</span><br><span class="line">    after  <span class="keyword">insert</span> <span class="keyword">on</span> tb_user <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> user_logs(id, operation, operate_time, operate_id, operate_params) <span class="keyword">VALUES</span></span><br><span class="line">                        (<span class="keyword">null</span>, <span class="string">&#x27;insert&#x27;</span>, now(), new.id, concat(<span class="string">&#x27;插入的数据内容为: id=&#x27;</span>, new.id,<span class="string">&#x27;,name=&#x27;</span>,new.name,<span class="string">&#x27;,phone=&#x27;</span>,new.phone,<span class="string">&#x27;,email=&#x27;</span>,new.email,<span class="string">&#x27;,profession=&#x27;</span>,new.profession));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看</span></span><br><span class="line"><span class="keyword">show</span> triggers ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">trigger</span> tb_user_insert_trigger;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入数据到tb_user表</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_user(id, name, phone, email, profession, age, gender, status, createtime) <span class="keyword">VALUES</span></span><br><span class="line">                (<span class="number">25</span>, <span class="string">&#x27;二皇子&#x27;</span>, <span class="string">&#x27;18809091212&#x27;</span>, <span class="string">&#x27;erhuangzi@163.com&#x27;</span>, <span class="string">&#x27;软件工程&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, now());</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 修改数据触发器</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tb_user_update_trigger</span><br><span class="line">    after <span class="keyword">update</span> <span class="keyword">on</span> tb_user <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> user_logs(id, operation, operate_time, operate_id, operate_params) <span class="keyword">VALUES</span></span><br><span class="line">                    (<span class="keyword">null</span>, <span class="string">&#x27;update&#x27;</span>, now(), new.id,concat(<span class="string">&#x27;更新之前的数据: id=&#x27;</span>,old.id,<span class="string">&#x27;,name=&#x27;</span>,old.name,<span class="string">&#x27;,phone=&#x27;</span>,old.phone,<span class="string">&#x27;,email=&#x27;</span>,old.email,<span class="string">&#x27;,profession=&#x27;</span>,old.profession,</span><br><span class="line">                        <span class="string">&#x27;|更新之后的数据: id=&#x27;</span>,new.id,<span class="string">&#x27;,name=&#x27;</span>,new.name,<span class="string">&#x27;.phone=&#x27;</span>,new.phone,<span class="string">&#x27;,email=&#x27;</span>,new.email,<span class="string">&#x27;,profession=&#x27;</span>,new.profession));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> tb_user <span class="keyword">set</span> age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> tb_user <span class="keyword">set</span> profession <span class="operator">=</span> <span class="string">&#x27;会计&#x27;</span> <span class="keyword">where</span> id <span class="operator">&lt;=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除数据触发器</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span> tb_user_delete_trigger</span><br><span class="line">    after  <span class="keyword">delete</span> <span class="keyword">on</span> tb_user <span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">insert</span> <span class="keyword">into</span> user_logs(id, operation, operate_time, operate_id, operate_params) <span class="keyword">VALUES</span></span><br><span class="line">                        (<span class="keyword">null</span>, <span class="string">&#x27;delete&#x27;</span>, now(), old.id, concat(<span class="string">&#x27;删除的数据内容为: id=&#x27;</span>, old.id,<span class="string">&#x27;,name=&#x27;</span>,old.name,<span class="string">&#x27;,phone=&#x27;</span>,old.phone,<span class="string">&#x27;,email=&#x27;</span>,old.email,<span class="string">&#x27;,profession=&#x27;</span>,old.profession));</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tb_user <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">25</span>;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230729211521053.png" alt="image-20230729211521053"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、视图&quot;&gt;&lt;a href=&quot;#一、视图&quot; class=&quot;headerlink&quot; title=&quot;一、视图&quot;&gt;&lt;/a&gt;一、视图&lt;/h2&gt;&lt;p&gt;视图(View)是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL优化</title>
    <link href="http://example.com/posts/6641.html"/>
    <id>http://example.com/posts/6641.html</id>
    <published>2023-10-14T06:45:00.000Z</published>
    <updated>2023-10-14T08:23:00.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、插入数据"><a href="#一、插入数据" class="headerlink" title="一、插入数据"></a>一、插入数据</h2><p><strong>批量插入</strong></p><p><code>insert into tb_text values(1, &#39;Tom&#39;),(2, &#39;Cat&#39;);</code></p><p><strong>手动提交事务</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test <span class="keyword">values</span>(<span class="number">1</span>, <span class="string">&#x27;Tom&#x27;</span>),(<span class="number">2</span>, <span class="string">&#x27;Cat&#x27;</span>),(<span class="number">3</span>, <span class="string">&#x27;Jerry&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test <span class="keyword">values</span>(<span class="number">4</span>, <span class="string">&#x27;Tom&#x27;</span>),(<span class="number">5</span>, <span class="string">&#x27;Cat&#x27;</span>),(<span class="number">6</span>, <span class="string">&#x27;Jerry&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb_test <span class="keyword">values</span>(<span class="number">7</span>, <span class="string">&#x27;Tom&#x27;</span>),(<span class="number">8</span>, <span class="string">&#x27;Cat&#x27;</span>),(<span class="number">9</span>, <span class="string">&#x27;Jerry&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>主键顺序插入</strong></p><p>乱序插入：8 1 9 21 88 2 4</p><p>顺序插入：1 2 4 8 9 21 88</p><font color=#9932CD>主键顺序插入性能高于乱序插入</font><p><strong>大批量插入数据</strong></p><p>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令进行插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 客户端连接服务端时，加上参数 <span class="comment">--local-infile</span></span><br><span class="line">mysql <span class="comment">--local-infile -uroot -p123456</span></span><br><span class="line"># 设置全局参数local_infile为<span class="number">1</span>，开启从本地加载文件导入数据的开关</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> local_infile <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"># 执行load指令将准备好的数据加载倒表结构中</span><br><span class="line">load data <span class="keyword">local</span> infile <span class="string">&#x27;/root/load_user_100w_sort.sql&#x27;</span> <span class="keyword">into</span> <span class="keyword">table</span> tb_user fields terminated <span class="keyword">by</span> <span class="string">&#x27;,&#x27;</span> lines terminated <span class="keyword">by</span> <span class="string">&#x27;\n&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>准备工作</strong></p><p>扩展虚拟机内存，防止内存不够用</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726215235981.png" alt="image-20230726215235981"></p><p>上传sql文件到linux上</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726215536883.png" alt="image-20230726215536883"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726220311245.png" alt="image-20230726220311245"></p><h2 id="二、主键优化"><a href="#二、主键优化" class="headerlink" title="二、主键优化"></a>二、主键优化</h2><p>在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为<font color=#9932CD>索引组织表</font>(index organized table IOT)</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/B%255EMTree%25E4%25BC%2598%25E5%258C%2596.png" alt="B^MTree优化"></p><p><strong>页分裂</strong></p><p>页可以为空，也可以填充一半，也可以填充满。每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/pkey_yh.jpg" alt="pkey_yh"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/pkey_lx.png" alt="pkey_lx"></p><p><strong>页合并</strong></p><p>当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记(flaged)为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录达到MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前或后）看看是否可以将两个页合并以优化空间使用</p><p><code>MERGE_THRESHOLD</code>：合并页的阈值，可以自己设置，在创建表或者创建索引时指定</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/pkey_hb.png" alt="pkey_hb"></p><p><strong>主键设计原则</strong></p><ul><li>满足业务需求的情况下，尽量降低主键的长度</li><li>插入数据时，尽量选择顺序插入，选择使用AUTO_INCREMENT自增主键</li><li>尽量不要使用UUID做主键或其他自然主键，如身份证号</li><li>业务操作时，避免对主键的修改</li></ul><h2 id="三、order-by优化"><a href="#三、order-by优化" class="headerlink" title="三、order by优化"></a>三、order by优化</h2><p><strong>Using filesort：</strong> 通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区sort buffer中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫FileSort排序</p><p><strong>Using index：</strong> 通过有序索引顺序扫描直接返回有序数据，这种情况即为using index，不需要额外排序，操作效率高</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727154719067.png" alt="image-20230727154719067"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727155524277.png" alt="image-20230727155524277"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727155702790.png" alt="image-20230727155702790"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/asc_yh.jpg" alt="asc_yh"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/desc_yh.jpg" alt="desc_yh"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727160335913.png" alt="image-20230727160335913"></p><p>🔥根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</p><p>🔥尽量使用覆盖索引</p><p>🔥多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC/DESC）</p><p>🔥如果不可避免的出现filesort，大数据量排序时，可以适当增大排序缓冲区大小sort_buffer_size（默认256k）</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727160716078.png" alt="image-20230727160716078"></p><h2 id="四、group-by优化"><a href="#四、group-by优化" class="headerlink" title="四、group by优化"></a>四、group by优化</h2><p>在分组操作时，可以通过索引来提高效率</p><p>分组操作时，索引的使用也是满足最左前缀法则的</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727161433033.png" alt="image-20230727161433033"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727161654124.png" alt="image-20230727161654124"></p><h2 id="五、limit优化"><a href="#五、limit优化" class="headerlink" title="五、limit优化"></a>五、limit优化</h2><p>在数据量比较大时，如果进行limit分页查询，在查询时，越往后，分页查询效率越低</p><p>当在进行分页查询时，如果执行 limit 2000000,10 ，此时需要MySQL排序前2000010 记录，仅仅返回 2000000 - 2000010 的记录，其他记录丢弃，查询排序的代价非常大</p><p>优化思路：一般分页查询时，通过创建覆盖索引能够比较好地提供性能，可以通过<font color=#9932CD>覆盖索引加子查询</font>形式进行优化</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727163806653.png" alt="image-20230727163806653"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727163833346.png" alt="image-20230727163833346"></p><h2 id="六、count优化"><a href="#六、count优化" class="headerlink" title="六、count优化"></a>六、count优化</h2><p>MyISAM引擎把一个表的总行数存在了磁盘上，因此执行count(*)的时候会直接返回这个数，效率很高</p><p>InnoDB引擎就麻烦了，它执行count(*)的时候，需要把数据一行一行地从引擎里面读出来，然后累积计数</p><p>优化思路：自己计数</p><p>count()是一个聚合函数，对于返回的结果集，一行行地判断，如果count函数的参数不是NULL，累计值加1，否则不加，最后返回累计值</p><p>用法：count(*)、count(主键)、count(字段)、count(1)</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230727165000553.png" alt="image-20230727165000553"></p><p><strong>count(主键)：</strong> InnoDB引擎会遍历整张表，把每一行的主键id值都取出来，返回给服务层。服务层拿到主键后，直接按行进行累加（主键不可能为null）</p><p><strong>count(字段)：</strong> 没有not null 约束：InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null 约束：InnoDB引擎会遍历整张表把每一行的字段值提取出来，返回给服务层，直接按行进行累加</p><p><strong>count(1)：</strong> InnoDB引擎遍历整张表，但不取值。服务层对于返回的每一行，放一个数字“1”进去，直接按行进行累加</p><p><strong>count(*)：</strong> InnoDB引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</p><p>按照效率排序的话：count(字段)&lt;count(主键)&lt;count(1)&lt;count(*)，所以尽量使用count(*)</p><h2 id="七、update优化"><a href="#七、update优化" class="headerlink" title="七、update优化"></a>七、update优化</h2><p>InnoDB的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁</p><font color=#9932CD>在执行update语句时一定要根据索引字段去更新，避免行锁升级为表锁会降低数据库的并发访问性能</font>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、插入数据&quot;&gt;&lt;a href=&quot;#一、插入数据&quot; class=&quot;headerlink&quot; title=&quot;一、插入数据&quot;&gt;&lt;/a&gt;一、插入数据&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;批量插入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;insert into tb_text</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>索引</title>
    <link href="http://example.com/posts/6640.html"/>
    <id>http://example.com/posts/6640.html</id>
    <published>2023-10-14T03:25:00.000Z</published>
    <updated>2023-10-14T08:21:53.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、索引概述"><a href="#一、索引概述" class="headerlink" title="一、索引概述"></a>一、索引概述</h2><p>索引（index）是帮助MySQL高效获取数据的<font color=#9932CD>数据结构</font>（有序）</p><p>在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引</p><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723124120600.png" alt="image-20230723124120600"></p><div class="table-container"><table><thead><tr><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>提高数据检索的效率，降低数据库的IO成本</td><td>索引列也是要占用空间的</td></tr><tr><td>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</td><td>索引大大提供了查询效率，同时却也降低更新表的速度，如对表进行INSERT、UPDATE、DELETE时，效率降低</td></tr></tbody></table></div><h2 id="二、索引结构"><a href="#二、索引结构" class="headerlink" title="二、索引结构"></a>二、索引结构</h2><p>MySQL的索引是在存储引擎层实现的，不同的存储引擎有不同的结构，主要包含以下几种：</p><div class="table-container"><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td>B+Tree索引</td><td>最常见的索引类型，大部分引擎都支持B+树索引</td></tr><tr><td>Hash索引</td><td>底层数据结构是用哈希表实现的，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R-tree(空间索引)</td><td>空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-text(全文索引)</td><td>是一种通过建立倒排索引，快速匹配文档的方式。类似于Lucene，Solr，ES</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>索引</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>B+tree索引</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Hash索引</td><td>🗙</td><td>🗙</td><td>✔</td></tr><tr><td>R-tree索引</td><td>🗙</td><td>✔</td><td>🗙</td></tr><tr><td>Full-text</td><td>5.6版之后支持</td><td>✔</td><td>🗙</td></tr></tbody></table></div><p>常用索引如果没有特指，都是指B+树结构组织的索引</p><p><strong>二叉树：</strong> 顺序插入时，会形成一个链表，查询性能大大降低。大数据量情况下，层级较深，检索速度慢</p><p><strong>红黑树：</strong> 大数据量情况下，层级较深，检索速度慢</p><blockquote><p>红黑树是一种自平衡的二叉查找树，同时满足以下特性：</p><ol><li>节点非黑即红</li><li>根节点是黑色</li><li>叶子节点(NIL，该节点没有后续的子节点）都是黑色</li><li>红色节点的父节点和子节点都必须是黑色的</li><li>从根节点到叶子节点的每条路径上，黑色节点的数量相同</li></ol></blockquote><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723212306829.png" alt="image-20230723212306829"></p><p><strong>B-Tree：</strong> 是一种多路平衡查找树，其中的B表示balance的意思</p><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84B-Tree.png" alt="索引结构B-Tree"></p><blockquote><p>树的度数指的是一个节点的子节点个数</p></blockquote><p>可通过<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">数据结构可视化</a>网站演示B-Tree树演变过程，下面以插入==100 65 169 368 900 556 780 35 215 1200 234 888 158 90 1000 88 120 268 250==数据为例进行演示</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723221716304.png" alt="image-20230723221716304"></p><p><strong>B+Tree：</strong>是一种多叉树，类似于二叉树，但每个节点可以有更多的子节点</p><blockquote><p>B+Tree所具有的特点：</p><ol><li>所有的数据都存储在叶子节点上，而非叶子节点只存储索引信息</li><li>叶子节点通过指针连接在一起</li><li>所有的叶子节点具有相同的深度，使得查询的时间复杂度保持在对数级别</li><li>非叶子节点中的索引值可以重复，这样可以提高查询效率</li></ol></blockquote><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/B%2BTree.png" alt="B+Tree"></p><p>可通过<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">数据结构可视化</a>网站演示B-Tree树演变过程，下面以插入==100 65 169 368 900 556 780 35 215 1200 234 888 158 90 1000 88 120 268 250==数据为例进行演示</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724112037449.png" alt="image-20230724112037449"></p><blockquote><p>MySQL索引数据结构对经典的B+Tree进行了优化。在原B+Tree的基础上，增加一个指向相邻叶子节点的链表指针，这就形成了带有顺序指针的B+Tree，提高区间访问的性能</p></blockquote><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/B%5EMTree%E4%BC%98%E5%8C%96.png" alt="B^MTree优化"></p><p><strong>Hash索引：</strong> 采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中</p><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724153225293.png" alt="image-20230724153225293"></p><blockquote><p>Hash索引特点：</p><ol><li>Hash索引只能用于对等比较（=，in），不支持范围查询（between，&gt;，&lt;，…）</li><li>无法利用索引完成排序操作</li><li>查询效率高，通常只需要一次检索就可以了，效率通常要高于B+Tree索引</li></ol></blockquote><p>在MySQL中，支持Hash索引的是Memory引擎，而InnoDB中具有自适应hash功能，hash索引是存储引擎根据B+Tree索引在指定条件下自动构建的</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>⛦为什么InnoDB存储引擎选择使用B+Tree索引结构？</p><ul><li>相对于二叉树，层级更少，搜索效率高</li><li>对于B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的层级，导致性能降低</li><li>相对Hash索引，B+Tree支持范围匹配和排序操作</li></ul><h2 id="三、索引分类"><a href="#三、索引分类" class="headerlink" title="三、索引分类"></a>三、索引分类</h2><div class="table-container"><table><thead><tr><th>分类</th><th>含义</th><th>特点</th><th>关键字</th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建，只能有一个</td><td>PRIMARY</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>UNIQUE</td></tr><tr><td>常规索引(单利索引)</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键字，而不是比较索引中的值</td><td>可以有多个</td><td>FULLTEXT</td></tr></tbody></table></div><p>在InnoDB存储引擎中，根据索引的存储形式，又可以分为以下两种</p><div class="table-container"><table><thead><tr><th>分类</th><th>含义</th><th>特点</th></tr></thead><tbody><tr><td>聚集索引(Clustered Index)</td><td>将数据存储与索引放到了一块，索引结构的叶子节点保存了行数据</td><td>必须有且只有一个</td></tr><tr><td>二级索引(Secondary Index)</td><td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table></div><p>聚集索引选取规则</p><ul><li>如果存在主键，主键索引就是聚集索引</li><li>如果不存在主键，将使用第一个唯一（UNIQUE）索引作为聚集索引</li><li>如果没有主键或没有合适的唯一索引，则InnoDB会自动生成一个rowid作为隐藏的聚集索引</li></ul><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/clusteredIndex1.PNG" alt="clusteredIndex1"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/clusteredIndex2.PNG" alt="clusteredIndex2"></p><h3 id="思考-1"><a href="#思考-1" class="headerlink" title="思考"></a>思考</h3><p>以下SQL语句，哪个执行效率高？为什么？</p><p><code>select \* from user where id = 10;</code></p><p><code>select \* from user where name = &#39;Arm&#39;;</code></p><p><strong>备注：</strong> id为主键，name字段有对应的二级索引</p><p>InnoDB主键索引的B+Tree高度为多高呢？</p><p>假设：一行数据大小为1k，一页可以存储16行这样的数据。InnoDB的指针占用6个字节空间，主键即使为bigint，占用字节数为8</p><p>当高度为2：</p><p>n*8+(n+1)*6 = 16*1024，算出n约为1170</p><p>1171*16 = 18736，可以算出第2层子节点的个数</p><p>当高度为3：</p><p>1171*1171*16 = 21939856，可以算出第3层子节点的个数</p><h2 id="四、索引语法"><a href="#四、索引语法" class="headerlink" title="四、索引语法"></a>四、索引语法</h2><p><strong>创建索引</strong></p><p><code>CREATE [UNIQUE|FULLTEXT] INDEX index_name ON table_name (index_col_name,...);</code></p><p><strong>查看索引</strong></p><p><code>SHOW INDEX FROM table_name;</code></p><p><strong>删除索引</strong></p><p><code>DROP INDEX index_name ON table_name;</code></p><p><strong>准备工作</strong></p><p>在Linux上创建名为itcast的mysql数据库，然后再创建一张表 tb_user，顺便插入准备好的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tb_user(</span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;主键&#x27;</span>,</span><br><span class="line">name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">phone <span class="type">varchar</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">email <span class="type">varchar</span>(<span class="number">100</span>) comment <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">profession <span class="type">varchar</span>(<span class="number">11</span>) comment <span class="string">&#x27;专业&#x27;</span>,</span><br><span class="line">age tinyint unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">gender <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;性别 , 1: 男, 2: 女&#x27;</span>,</span><br><span class="line">status <span class="type">char</span>(<span class="number">1</span>) comment <span class="string">&#x27;状态&#x27;</span>,</span><br><span class="line">createtime datetime comment <span class="string">&#x27;创建时间&#x27;</span></span><br><span class="line">) comment <span class="string">&#x27;系统用户表&#x27;</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;吕布&#x27;</span>, <span class="string">&#x27;17799990000&#x27;</span>, <span class="string">&#x27;lvbu666@163.com&#x27;</span>, <span class="string">&#x27;软件工程&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;2001-02-02 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;曹操&#x27;</span>, <span class="string">&#x27;17799990001&#x27;</span>, <span class="string">&#x27;caocao666@qq.com&#x27;</span>, <span class="string">&#x27;通讯工程&#x27;</span>, <span class="number">33</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;赵云&#x27;</span>, <span class="string">&#x27;17799990002&#x27;</span>, <span class="string">&#x27;17799990@139.com&#x27;</span>, <span class="string">&#x27;英语&#x27;</span>, <span class="number">34</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2002-03-02 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;孙悟空&#x27;</span>, <span class="string">&#x27;17799990003&#x27;</span>, <span class="string">&#x27;17799990@sina.com&#x27;</span>, <span class="string">&#x27;工程造价&#x27;</span>, <span class="number">54</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-07-02 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;花木兰&#x27;</span>, <span class="string">&#x27;17799990004&#x27;</span>, <span class="string">&#x27;19980729@sina.com&#x27;</span>, <span class="string">&#x27;软件工程&#x27;</span>, <span class="number">23</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2001-04-22 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;大乔&#x27;</span>, <span class="string">&#x27;17799990005&#x27;</span>, <span class="string">&#x27;daqiao666@sina.com&#x27;</span>, <span class="string">&#x27;舞蹈&#x27;</span>, <span class="number">22</span>, <span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-02-07 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status, createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;露娜&#x27;</span>, <span class="string">&#x27;17799990006&#x27;</span>, <span class="string">&#x27;luna_love@sina.com&#x27;</span>, <span class="string">&#x27;应用数学&#x27;</span>, <span class="number">24</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-02-08 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;程咬金&#x27;</span>, <span class="string">&#x27;17799990007&#x27;</span>, <span class="string">&#x27;chengyaojin@163.com&#x27;</span>, <span class="string">&#x27;化工&#x27;</span>, <span class="number">38</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;2001-05-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;项羽&#x27;</span>, <span class="string">&#x27;17799990008&#x27;</span>, <span class="string">&#x27;xiaoyu666@qq.com&#x27;</span>, <span class="string">&#x27;金属材料&#x27;</span>, <span class="number">43</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-09-18 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;白起&#x27;</span>, <span class="string">&#x27;17799990009&#x27;</span>, <span class="string">&#x27;baiqi666@sina.com&#x27;</span>, <span class="string">&#x27;机械工程及其自动化&#x27;</span>, <span class="number">27</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2001-08-16 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;韩信&#x27;</span>, <span class="string">&#x27;17799990010&#x27;</span>, <span class="string">&#x27;hanxin520@163.com&#x27;</span>, <span class="string">&#x27;无机非金属材料工程&#x27;</span>, <span class="number">27</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-06-12 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;荆轲&#x27;</span>, <span class="string">&#x27;17799990011&#x27;</span>, <span class="string">&#x27;jingke123@163.com&#x27;</span>, <span class="string">&#x27;会计&#x27;</span>, <span class="number">29</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-05-11 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;兰陵王&#x27;</span>, <span class="string">&#x27;17799990012&#x27;</span>, <span class="string">&#x27;lanlinwang666@126.com&#x27;</span>, <span class="string">&#x27;工程造价&#x27;</span>,<span class="number">44</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2001-04-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;狂铁&#x27;</span>, <span class="string">&#x27;17799990013&#x27;</span>, <span class="string">&#x27;kuangtie@sina.com&#x27;</span>, <span class="string">&#x27;应用数学&#x27;</span>, <span class="number">43</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2001-04-10 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;貂蝉&#x27;</span>, <span class="string">&#x27;17799990014&#x27;</span>, <span class="string">&#x27;84958948374@qq.com&#x27;</span>, <span class="string">&#x27;软件工程&#x27;</span>, <span class="number">40</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;2001-02-12 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;妲己&#x27;</span>, <span class="string">&#x27;17799990015&#x27;</span>, <span class="string">&#x27;2783238293@qq.com&#x27;</span>, <span class="string">&#x27;软件工程&#x27;</span>, <span class="number">31</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-01-30 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;芈月&#x27;</span>, <span class="string">&#x27;17799990016&#x27;</span>, <span class="string">&#x27;xiaomin2001@sina.com&#x27;</span>, <span class="string">&#x27;工业经济&#x27;</span>, <span class="number">35</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2000-05-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;嬴政&#x27;</span>, <span class="string">&#x27;17799990017&#x27;</span>, <span class="string">&#x27;8839434342@qq.com&#x27;</span>, <span class="string">&#x27;化工&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2001-08-08 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;狄仁杰&#x27;</span>, <span class="string">&#x27;17799990018&#x27;</span>, <span class="string">&#x27;jujiamlm8166@163.com&#x27;</span>, <span class="string">&#x27;国际贸易&#x27;</span>,<span class="number">30</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2007-03-12 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;安琪拉&#x27;</span>, <span class="string">&#x27;17799990019&#x27;</span>, <span class="string">&#x27;jdodm1h@126.com&#x27;</span>, <span class="string">&#x27;城市规划&#x27;</span>, <span class="number">51</span>,<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2001-08-15 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;典韦&#x27;</span>, <span class="string">&#x27;17799990020&#x27;</span>, <span class="string">&#x27;ycaunanjian@163.com&#x27;</span>, <span class="string">&#x27;城市规划&#x27;</span>, <span class="number">52</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;2000-04-12 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;廉颇&#x27;</span>, <span class="string">&#x27;17799990021&#x27;</span>, <span class="string">&#x27;lianpo321@126.com&#x27;</span>, <span class="string">&#x27;土木工程&#x27;</span>, <span class="number">19</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;2002-07-18 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;后羿&#x27;</span>, <span class="string">&#x27;17799990022&#x27;</span>, <span class="string">&#x27;altycj2000@139.com&#x27;</span>, <span class="string">&#x27;城市园林&#x27;</span>, <span class="number">20</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;2002-03-10 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tb_user (name, phone, email, profession, age, gender, status,createtime) <span class="keyword">VALUES</span> (<span class="string">&#x27;姜子牙&#x27;</span>, <span class="string">&#x27;17799990023&#x27;</span>, <span class="string">&#x27;37483844@qq.com&#x27;</span>, <span class="string">&#x27;工程造价&#x27;</span>, <span class="number">29</span>,<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;2003-05-26 00:00:00&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><h3 id="按照下列的需求，完成索引的创建"><a href="#按照下列的需求，完成索引的创建" class="headerlink" title="按照下列的需求，完成索引的创建"></a>按照下列的需求，完成索引的创建</h3><ol><li>name字段的值可能会重复，为该字段创建索引</li><li>phone字段的值非空且唯一，为该字段创建唯一索引</li><li>为profession、age、status创建联合索引</li><li>为email建立合适的索引来提升查询效率</li></ol></blockquote><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724200953582.png" alt="image-20230724200953582"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724211338021.png" alt="image-20230724211338021"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724211238555.png" alt="image-20230724211238555"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724211153207.png" alt="image-20230724211153207"></p><h2 id="五、SQL性能分析"><a href="#五、SQL性能分析" class="headerlink" title="五、SQL性能分析"></a>五、SQL性能分析</h2><h3 id="SQL执行频率"><a href="#SQL执行频率" class="headerlink" title="SQL执行频率"></a>SQL执行频率</h3><p>MySQL客户端连接成功后，通过show[session|global] status命令可以提供服务器状态信息。通过如下指令，可以查看当前数据库的INSERT、UPDATE、DELETE、SELECT的访问频次</p><p><code>SHOW GLOBAL STATUS LIKE &#39;Com_______&#39;;</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724212607961.png" alt="image-20230724212607961"></p><p>通过查询SQL执行频率为SQL优化作支撑</p><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time,单位：秒，默认10秒）的所有SQL语句的日志</p><p>MySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（/etc/my.cnf）中配置如下信息：</p><blockquote><p># 开启MySQL慢查询日志开关</p><p>slow_query_log=1</p><p># 设置慢日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志</p><p>long_query_time=2</p></blockquote><p>配置完毕之后，通过以下指令重新启动MySQL服务器进行测试，查看慢日志文件中记录的信息 /var/lib/mysql/localhost-slow.log</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724213641592.png" alt="image-20230724213641592"></p><p>配置完后重启mysql服务：<code>systemctl restart mysqld</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724213757966.png" alt="image-20230724213757966"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724213916544.png" alt="image-20230724213916544"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724214104094.png" alt="image-20230724214104094"></p><p>通过检查慢查询日志可以发现，只记录超过预设时间的SQL，而这样就可以定位出执行效率比较低的SQL，从而针对性进行优化</p><h3 id="profile详情"><a href="#profile详情" class="headerlink" title="profile详情"></a>profile详情</h3><p>show profiles能够在做SQL优化时帮助了解执行时间都耗费在那一块儿</p><p>通过have_profiling参数能够看到当前MySQL是否支持profile操作：<code>SELECT @@have_profiling;</code></p><p>默认profiling是关闭的，可以通过set语句在session/global级别开启profiling：<code>SET profiling=1;</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724215149130.png" alt="image-20230724215149130"></p><p>执行一系列的业务SQL操作，然后通过如下指令查看指令的执行耗时</p><blockquote><p># 查看每一条SQL的耗时基本情况</p><p>show profiles;</p><p># 查看指定query_id的SQL语句各个阶段的耗时情况</p><p>show profile for query query_id;</p><p># 查看指定query_id的SQL语句CPU的使用情况</p><p>show profile cpu for query query_id;</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724215728906.png" alt="image-20230724215728906"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230724220042985.png" alt="image-20230724220042985"></p><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><p>EXPLAIN 或者 DESC命令获取MySQL如何执行SELECT语句的信息，包括在SELECT语句执行过程中表如何连接和连接的顺序</p><blockquote><p># 直接在select语句之前加上关键字explain/desc</p><p>EXPLAIN SELECT 字段列表 FROM 表名 WHERE 条件;</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726091809789.png" alt="image-20230726091809789"></p><p>EXPLAIN 执行计划各字段含义：</p><ul><li>id：select查询的序列号，表示查询中执行select字句或操作表的顺序（id相同，执行顺序从上到下；id不同，值越大，越先执行）</li><li>select_type：表示SELECT的类型，常见的取值有SIMPLE（简单表即不使用表连接或子查询）、PRIMARY（主查询即外层查询）、UNION（UNION中的第二个或后面的查询语句）、SUBQUERY（SELECT/WHERE之后包含了子查询）等</li><li>type：表示连接类型，性能由好到差的连接类型为NULL、system、const、eq_ref、ref、range、index、all</li><li>possible_keys：显示可能应用在这张表上的索引，一个或多个</li><li>key：实际使用的索引，如果为NULL，则没有使用索引</li><li>key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际长度，在不损失精确性前提下，长度越短越好</li><li>rows：MySQL认为必须要执行查询的行数，在Innodb引擎的表中，是一个预估值，并不总是准确的</li><li>filtered：表示返回结果的行数占需读取行数的百分比，filtered值越大越好</li></ul><p>【准备工作】</p><p>通过student表、course表和student_course表实现多表查询进行演示，首先需要创建并导入数据</p><p>因为在本地机上建立过三表且有对应数据，因而不必复写建表及插入操作，直接复制sql语句并运行即可</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726101901077.png" alt="image-20230726101901077"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726102024236.png" alt="image-20230726102024236"></p><p>为了同步老师所讲案例，对student_course表中的部分数据进行修改和增添</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `course`  (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `name`(`name`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `course` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;Hadoop&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `course` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;Java&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `course` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;MySQL&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `course` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;PHP&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student`  (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb3 <span class="keyword">COLLATE</span> utf8mb3_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `<span class="keyword">no</span>` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb3 <span class="keyword">COLLATE</span> utf8mb3_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX `name`(`name`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb3 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb3_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;黛绮丝&#x27;</span>, <span class="string">&#x27;2000100101&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;谢逊&#x27;</span>, <span class="string">&#x27;2000100102&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;殷天正&#x27;</span>, <span class="string">&#x27;2000100103&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;韦一笑&#x27;</span>, <span class="string">&#x27;2000100104&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `student_course`  (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `studentid` <span class="type">int</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `courseid` <span class="type">int</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `fk_studentid`(`studentid`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `fk_courseid`(`courseid`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `fk_courseid` <span class="keyword">FOREIGN</span> KEY (`courseid`) <span class="keyword">REFERENCES</span> `course` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `fk_studentid` <span class="keyword">FOREIGN</span> KEY (`studentid`) <span class="keyword">REFERENCES</span> `student` (`id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> <span class="keyword">UPDATE</span> RESTRICT</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">5</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_0900_ai_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student_course` <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726102707749.png" alt="image-20230726102707749"></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726104557679.png" alt="image-20230726104557679"></p><p>查询选修了 MySQL 课程的学生（子查询实现）</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726105430826.png" alt="image-20230726105430826"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726105451933.png" alt="image-20230726105451933"></p><p>查看不同sql语句的type</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726110917441.png" alt="image-20230726110917441"></p><h2 id="六、索引使用"><a href="#六、索引使用" class="headerlink" title="六、索引使用"></a>六、索引使用</h2><h3 id="验证索引效率"><a href="#验证索引效率" class="headerlink" title="验证索引效率"></a>验证索引效率</h3><p>在未建立索引之前，执行如下SQL语句，查看SQL耗时</p><p><code>SELECT * FROM tb_sku WHERE sn = &#39;100000003145001&#39;;</code></p><p>针对字段创建索引</p><p><code>create index ind_sku_sn on tb_sku(sn);</code></p><p>然后再次执行相同sql语句，再次查看SQL耗时</p><p><code>SELECT * FROM tb_sku WHERE sn = &#39;100000003145001&#39;;</code></p><h3 id="索引使用规则"><a href="#索引使用规则" class="headerlink" title="索引使用规则"></a>索引使用规则</h3><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h4><p>如果索引了多列（联合索引），要遵守最左前缀法则。最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列；如果跳跃某一列，<font color=#9932CD>索引将部分失效（后面的字段索引失效）</font></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726191704644.png" alt="image-20230726191704644"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726192027462.png" alt="image-20230726192027462"></p><h4 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h4><p>联合索引中，出现范围查询(&gt;,&lt;)，<font color=#9932CD>范围查询右侧的列索引失效</font></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726192615058.png" alt="image-20230726192615058"></p><h4 id="索引列运算"><a href="#索引列运算" class="headerlink" title="索引列运算"></a>索引列运算</h4><p>不要在索引列上进行运算操作，<font color=red>否则索引会失效</font></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726193321089.png" alt="image-20230726193321089"></p><h4 id="字符串不加引号"><a href="#字符串不加引号" class="headerlink" title="字符串不加引号"></a>字符串不加引号</h4><p>字符串类型字段使用时，不加引号，<font color=red>索引会失效</font></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726193731218.png" alt="image-20230726193731218"></p><h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><p>如果仅仅是尾部模糊匹配，索引不会失效。如果是头部模糊匹配，<font color=red>索引会失效</font></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726194131975.png" alt="image-20230726194131975"></p><h4 id="or连接的条件"><a href="#or连接的条件" class="headerlink" title="or连接的条件"></a>or连接的条件</h4><p>用or分割开的条件，如果or之前的条件中的列有索引，而后面的列中没有索引，那么涉及的索引都不会被用到</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726194559617.png" alt="image-20230726194559617"></p><p>由于age没有索引，所以即使id、phone有索引，索引也会失效，所以需要针对于age建立索引</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726194926417.png" alt="image-20230726194926417"></p><h4 id="数据分布影响"><a href="#数据分布影响" class="headerlink" title="数据分布影响"></a>数据分布影响</h4><p>如果MySQL评估使用索引比全表更慢，则不使用索引</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726195632680.png" alt="image-20230726195632680"></p><h4 id="SQL提示-覆盖索引"><a href="#SQL提示-覆盖索引" class="headerlink" title="SQL提示 + 覆盖索引"></a>SQL提示 + 覆盖索引</h4><p>SQL提示是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的</p><p>use index/ignore index/force index</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726200525573.png" alt="image-20230726200525573"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726200900163.png" alt="image-20230726200900163"></p><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能够找到），减少select *</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726202039565.png" alt="image-20230726202039565"></p><p><code>using index condition：</code> 查找使用了索引，但需要回表查询数据</p><p><code>using where;using index：</code> 查找使用了索引，但需要的数据都在索引列中能找到，所以不需要回表查询</p><p><strong>思考：</strong> 一张表，有四个字段(id，username，password，status)，由于数据量大，需要对以下SQL语句进行优化，如何优化才是最佳方案？</p><p><code>select id,username,password from tb_user where username = &#39;itcast&#39;;</code></p><p>建立username和password这两个字段的联合索引</p><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>当字段类型为字符串（varchar，text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量磁盘IO，影响查询效率。此时可以知将字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率</p><p><strong>语法：</strong> <code>create index idx_xxx on table_name(column(n));</code></p><p><strong>前缀长度：</strong> 可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的</p><p><code>select count(distinct email)/count(*) from tb_user;</code></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726204226996.png" alt="image-20230726204226996"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726204619695.png" alt="image-20230726204619695"></p><p>前缀索引的查询流程</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/qz_index.jpg" alt="qz_index"></p><h4 id="单列索引与联合索引"><a href="#单列索引与联合索引" class="headerlink" title="单列索引与联合索引"></a>单列索引与联合索引</h4><p>单列索引：即一个索引只包含单个列</p><p>联合索引：即一个索引包含了多个列</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230726210438727.png" alt="image-20230726210438727"></p><p>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引</p><font color=#9932CD>多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</font><p>联合索引情况</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/lh_index.png" alt="lh_index"></p><h2 id="七、索引设计原则"><a href="#七、索引设计原则" class="headerlink" title="七、索引设计原则"></a>七、索引设计原则</h2><ol><li>针对于数据量较大且查询比较频繁的表建立索引</li><li>针对于常作为查询条件(where)、排序(order by)、分组(group by)操作的字段建立索引</li><li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li><li>如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引</li><li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li><li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li><li>如果索引不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好确定哪个索引可以最有效地用于查询</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、索引概述&quot;&gt;&lt;a href=&quot;#一、索引概述&quot; class=&quot;headerlink&quot; title=&quot;一、索引概述&quot;&gt;&lt;/a&gt;一、索引概述&lt;/h2&gt;&lt;p&gt;索引（index）是帮助MySQL高效获取数据的&lt;font color=#9932CD&gt;数据结构&lt;/font</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://example.com/posts/6639.html"/>
    <id>http://example.com/posts/6639.html</id>
    <published>2023-10-13T11:23:00.000Z</published>
    <updated>2023-10-13T11:22:34.676Z</updated>
    
    <content type="html"><![CDATA[<h2 id="视频地址"><a href="#视频地址" class="headerlink" title="视频地址"></a>视频地址</h2><p>B站黑马：<a href="https://b23.tv/av213091208/p118">缘起</a> —— <a href="https://b23.tv/av213091208/p141">缘灭</a></p><h2 id="一、Linux-简介"><a href="#一、Linux-简介" class="headerlink" title="一、Linux 简介"></a>一、Linux 简介</h2><p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统</p><p>Linux 不仅系统性能稳定，还开放了源码</p><p><strong>桌面操作系统</strong></p><ul><li>Windows（用户数量最多）</li><li>Mac OS</li><li>Linux</li></ul><p><strong>服务器操作系统</strong></p><ul><li>UNIX</li><li>Linux</li><li>Windows Server</li></ul><p><strong>移动设备操作系统</strong></p><ul><li>Android（基于Linux、开源）</li><li>IOS（苹果公司开发、不开源）</li></ul><p><strong>嵌入式操作系统</strong></p><ul><li>Linux（机顶盒、路由器、交换机）</li></ul><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721112920496.png" alt="image-20230721112920496"></p><h3 id="Linux-系统版本"><a href="#Linux-系统版本" class="headerlink" title="Linux 系统版本"></a>Linux 系统版本</h3><p><strong>内核版</strong></p><ul><li>由Linus Torvalds及其团队开发、维护</li><li>开源免费</li><li>负责控制硬件</li></ul><p><strong>发行版</strong></p><ul><li>基于Linux内核版进行扩展</li><li>由各个Linux厂商开发和维护的</li><li>有收费版本和免费版本</li></ul><p>市面上较为知名的Linux发行版如下：</p><ul><li>Ubuntu：以桌面应用为主</li><li>RedHat：应用最广泛、收费</li><li>CentOS：RedHat的社区版、免费</li><li>openSUSE：对个人完全免费、图形界面华丽</li><li>Fedora：功能完备、快速更新、免费</li><li>红旗Linux：北京中科红旗软件技术有限公司开发（中科红旗承诺，红旗Linux桌面操作系统 v11及后续迭代版本永久向个人及家庭用户免费提供）</li></ul><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721151343628.png" alt="image-20230721151343628"></p><h2 id="二、Linux-安装"><a href="#二、Linux-安装" class="headerlink" title="二、Linux 安装"></a>二、Linux 安装</h2><p>Linux系统安装方式</p><ul><li>物理机安装：直接将操作系统安装到服务器硬件上</li><li>虚拟机安装：通过虚拟机软件安装</li></ul><p><strong>虚拟机</strong>是指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。虚拟机技术的核心思想是将物理计算机的资源（如处理器、内存、存储等）进行虚拟化，使多个虚拟机可以共享这些资源，并在其上运行不同的操作系统和应用程序</p><p>可以通过虚拟机软件来模拟计算机硬件</p><p>常用的虚拟机软件：VMWare、VirtualBox…</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721182825817.png" alt="image-20230721182825817"></p><h2 id="三、安装SSH连接工具"><a href="#三、安装SSH连接工具" class="headerlink" title="三、安装SSH连接工具"></a>三、安装SSH连接工具</h2><p>SSH（Secure Shell）是一种网络协议，用于在不安全的网络中安全地进行远程登录和数据传输。它通过加密和身份验证机制，确保数据在传输过程中的安全性</p><p>常用的SSH连接工具：putty、filezilla、xshell、finalshell</p><p>通过SSH连接工具就可以实现从本地连接到远程的Linux服务器</p><p>这里选择使用finalshell作为SSH连接工具</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721184522862.png" alt="image-20230721184522862"></p><p>然后使用FinalShell连接Linux</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721184801284.png" alt="image-20230721184801284"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721185020990.png" alt="image-20230721185020990"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721185105224.png" alt="image-20230721185105224"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721185159433.png" alt="image-20230721185159433"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721185246363.png" alt="image-20230721185246363"></p><h2 id="四、Linux目录结构"><a href="#四、Linux目录结构" class="headerlink" title="四、Linux目录结构"></a>四、Linux目录结构</h2><p>在Linux系统中，/是所有目录的顶点</p><blockquote><ul><li>bin 存放二进制可执行文件</li><li>boot 存放系统引导时使用的各种文件</li><li>dev 存放设备文件</li><li>etc 存放系统配置文件</li><li>home 存放系统用户的文件</li><li>lib 存放程序运行所需的共享库和内核模块</li><li>opt 额外安装的可选应用程序包所放置的位置</li><li>root 超级用户目录</li><li>sbin 存放二进制可执行文件，只有root用户才能访问</li><li>tmp 存放临时文件</li><li>usr 存放系统应用程序</li><li>var 存放运行时需要改变数据的文件，例如日志文件</li></ul></blockquote><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721193044740.png" alt="image-20230721193044740"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721194624566.png" alt="image-20230721194624566"></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230721195140040.png" alt="image-20230721195140040"></p><h2 id="五、Linux-常用命令"><a href="#五、Linux-常用命令" class="headerlink" title="五、Linux 常用命令"></a>五、Linux 常用命令</h2><ul><li>文件目录操作命令</li><li>拷贝移动命令</li><li>打包压缩命令</li><li>文本编辑命令</li><li>查找命令</li></ul><p>常用命令列表</p><div class="table-container"><table><thead><tr><th>类别</th><th>命令</th><th>英文全称</th><th>含义</th><th>语法</th><th>示例</th></tr></thead><tbody><tr><td>文件目录操作</td><td>cd</td><td>change directory</td><td>切换用户当前工作目录</td><td>`cd [-L</td><td>[-P [-e]]] [dir]`</td><td><code>cd /</code></td></tr><tr><td>文件目录操作</td><td>cp</td><td>copy</td><td>将源文件或目录复制到目标文件或目录中</td><td><code>cp(选项)(参数)</code></td><td><code>cp file /usr/men/tmp/file1</code></td></tr><tr><td>文件目录操作</td><td>rm</td><td>remove</td><td>用于删除给定的文件和目录</td><td><code>rm(选项)(参数)</code></td><td><code>rm -rf testdir</code></td></tr><tr><td>文件目录操作</td><td>mv</td><td>move</td><td>对文件或目录移动或重命名</td><td><code>mv(选项)(参数)</code></td><td><code>mv file_1.txt /home/office/</code></td></tr><tr><td>文件目录操作</td><td>rmdir</td><td>remove directory</td><td>用来删除空目录</td><td><code>rmdir(选项)(参数)</code></td><td><code>rmdir -p www/Test</code></td></tr><tr><td>文件目录操作</td><td>touch</td><td>touch</td><td>更新文件的时间标签和创建新的空文件</td><td><code>touch(选项)(参数)</code></td><td><code>touch ex2</code></td></tr><tr><td>文件目录操作</td><td>mkdir</td><td>make directory</td><td>用来创建目录</td><td><code>mkdir(选项)(参数)</code></td><td><code>mkdir -m 700 /usr/meng/test</code></td></tr><tr><td>文件目录操作</td><td>clear</td><td>clear</td><td>清除当前屏幕终端上的任何信息</td><td><code>clear</code></td><td>输入clear后当前终端上的任何信息就会被清除</td></tr><tr><td>文件目录操作</td><td>li</td><td>list</td><td>显示目录内容列表</td><td><code>ls [选项] [文件名...]</code></td><td><code>ls -l</code></td></tr><tr><td>文件目录操作</td><td>tree</td><td>tree</td><td>树状图列出目录的内容</td><td><code>tree(选项)(参数)</code></td><td><code>tree  /private/ -L 1</code></td></tr><tr><td>文件目录操作</td><td>cat</td><td>cat</td><td>显示文件内容和连接多个文件并打印到标准输出</td><td><code>cat [OPTION]... [FILE]...</code></td><td><code>cat -s test.log</code></td></tr><tr><td>文件目录操作</td><td>pwd</td><td>print work directory</td><td>显示当前工作目录的绝对路径</td><td><code>pwd [-LP]</code></td><td><code>pwd</code></td></tr><tr><td>文件目录操作</td><td>man</td><td>man</td><td>查看Linux中的指令帮助</td><td><code>man(选项)(参数)</code></td><td><code>man 3 sleep</code></td></tr></tbody></table></div><p>🔥Linux命令有很多，如何快速了解相关命令，可通过查询<a href="https://wangchujiang.com/linux-command/hot.html">命令列表</a>详细快速了解</p><p>🔥Linux命令有很多，如何快速找到具有某项功能的命令，可通过查询<a href="https://www.linuxcool.com">Linux命令大全</a>详细快速了解</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722151611969.png" alt="image-20230722151611969"></p><h3 id="Linux-使用技巧"><a href="#Linux-使用技巧" class="headerlink" title="Linux 使用技巧"></a>Linux 使用技巧</h3><ul><li><p>按下<kbd>Tab</kbd>键可自动补全</p></li><li><p>连按两次<kbd>Tab</kbd>键可给出操作提示</p></li><li>使用上下箭头快速调出曾经使用过的命令</li><li>使用clear命令或者<code>ctrl+l</code>快捷键实现清屏</li><li>使用<code>ctrl+a</code>实现定位到命令行行首，使用<code>ctrl+e</code>实现定位到命令行行尾</li></ul><h3 id="Linux-命令格式"><a href="#Linux-命令格式" class="headerlink" title="Linux 命令格式"></a>Linux 命令格式</h3><p><code>command [-options][parameter]</code></p><p><i>说明：</i></p><ul><li>command：命令名</li><li>[-options]：选项，可用来对命令进行控制，可省略</li><li>[parameter]：参数，可以是零个或多个</li></ul><p><strong>注意：</strong> 命令名、选项和参数用空格分隔，<code>[]</code>代表可选</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722153728560.png" alt="image-20230722153728560"></p><h3 id="文件目录操作"><a href="#文件目录操作" class="headerlink" title="文件目录操作"></a>文件目录操作</h3><p><code>ls</code>显示指定目录下的内容，语法：<code>ls [-al][dir]</code></p><p><strong>说明：</strong> -a 显示所有文件及目录（.开头的隐藏文件也会列出），-l 除文件名称外，同时将文件型态（d开头表示目录、-开头表示文件）、权限、拥有者、文件大小等信息详细列出</p><p><strong>注意：</strong> 由于使用ls命令时经常需要加入<code>-l</code>选项，所以Linux为<code>ls -l</code>命令提供了一种简写方式，即<code>ll</code></p><p><code>cd</code>用于切换当前工作目录，即进入指定目录，语法：<code>cd [dirName]</code></p><p><strong>说明：</strong> <code>~</code>表示用户的home目录，<code>.</code>表示当前所在目录，<code>..</code>表示当前目录的上一级目录</p><p><code>cat</code>用于显示文件内容，语法：<code>cat [-n] fileName</code></p><p><strong>说明：</strong> -n：由1开始对所有输出的行数编号</p><p><code>more</code>以分页的形式显示文件内容，语法：<code>more fileName</code></p><p><strong>操作说明：</strong> 回车键即向下滚动一行，空格键即向下滚动一屏，b即返回上一屏，q或者ctrl+c即退出more</p><p><code>tail</code>查看文件末尾的内容，语法：<code>tail [-f] fileName</code></p><p><strong>说明：</strong> -f动态读取文件末尾内容并显示，通常用于日志文件的内容输出</p><p><code>mkdir</code>用于创建目录，语法：<code>mkdir [-p] fileName</code></p><p><strong>说明：</strong> -p是确保目录名称存在，不存在就创建一个。通过此选项，可以实现多层目录同时创建</p><p><code>rmdir</code>删除空目录，语法：<code>rmdir [-p] dirName</code></p><p><strong>说明：</strong> -p是确保当子目录被删除后使父目录为空目录的话则一并删除</p><p><code>rm</code>删除文件或目录，语法：<code>rm [-rf] name</code></p><p><strong>说明：</strong> -r：将目录及目录中所有文件（目录）逐一删除，即递归删除，-f：无需确认，直接删除</p><h3 id="拷贝移动命令"><a href="#拷贝移动命令" class="headerlink" title="拷贝移动命令"></a>拷贝移动命令</h3><p><code>cp</code>用于复制文件或目录，语法：<code>cp [-r] source dest</code></p><p><strong>说明：</strong> -r：如果复制的是目录需要使用此选项，此时将复制该目录下所有的子目录和文件</p><p><strong>案例：</strong> <code>cp -r itcast/ itheima/</code>是将itcast目录和目录下所有目录及文件复制到itheima目录下，<code>cp -r itcast/* itheima/</code>是将itcast目录下所有文件复制到itheima目录下</p><p><code>mv</code>为文件或目录重命名，也可以将文件或目录进行移动，语法：<code>mv source dest</code></p><p><strong>案例：</strong> <code>mv hello.txt hi.txt</code>是将hello.txt改名为hi.txt，<code>mv hi.txt itheima/</code>是将文件hi.txt移动到itheima目录中，<code>mv hi.txt itheima/hello.txt</code>是将hi.txt移动到itheima目录中并改名为itheima，<code>mv itcast/ itheima/</code>是当itheima目录不存在，将itcast目录改名为itheima，<code>mv itcast/ itheima/</code>是当itheima目录存在，将itcast目录移动到itheima目录中</p><h3 id="打包压缩命令"><a href="#打包压缩命令" class="headerlink" title="打包压缩命令"></a>打包压缩命令</h3><p><code>tar</code>对文件进行打包、解包、压缩或解压缩，语法：<code>tar [-zcxvf] fileName [files]</code></p><p><strong>说明：</strong> 包文件名缀为.tar表示只是完成了打包，并没有压缩；包文件后缀为.tar.gz表示完成了打包还进行了压缩</p><p><strong>参数选项：</strong> </p><ul><li>-z：z代表的是gzip，通过gzip命令处理文件，gzip可以对文件压缩或解压</li><li>-c：c代表的是create，即创建新的包文件</li><li>-x：x代表的是extract，实现从包文件中还原文件</li><li>-v：v代表的是verbose，显示命令的执行过程</li><li>-f：f代表的是file，用于指定包文件的名称</li></ul><p><strong>案例：</strong><code>tar -zxvf hello.tar.gz</code>将hello.tar.gz文件进行解压并将解压后的文件放在当前目录， <code>tar -zxvf hello.tar.gz -C /usr/local</code>将hello.tar.gz文件进行解压并将解压后的文件放在/usr/local目录下</p><h3 id="文本编辑命令"><a href="#文本编辑命令" class="headerlink" title="文本编辑命令"></a>文本编辑命令</h3><p><code>vi</code>是Linux命令提供的一个文本编辑工具，可以对文件内容进行编辑，类似于Windows记事本，语法：<code>vi fileName</code></p><p><code>vim</code>是从vi发展来的一个功能更加强大的文本编辑工具，在编辑文件时可以对文件内容进行着色，方便对文件进行编辑处理，所以实际中vim更加常用，而要使用vim命令则需要安装：<code>yum install vim</code></p><p><code>vim</code>对文件内容进行编辑，语法：<code>vim fileName</code></p><p><strong>说明：</strong> 在使用vim命令编辑文件时，如果指定的文件存在则直接打开此文件，如果指定的文件不存在则新建文件；vim进行文本编辑时共分为三种模式，分别是命令行模式、插入模式和底行模式，这三种模式可以互相切换，在使用vim时一定要注意当前所处模式</p><p><strong>命令模式</strong></p><ul><li>通过vim命令打开文件后默认进入命令模式，另外两种模式需要首先进入命令模式才能进入彼此</li><li>命令模式下可以查看文件内容、移动光标（上下左右箭头、gg、G）</li></ul><p><strong>插入模式</strong></p><ul><li>插入模式下可以对文件内容进行编辑</li><li>在命令模式下按下[i,a,o]任意一个，可以进入插入模式，进入插入模式后，下方会出现【insert】字样</li><li>在插入模式下按下<kbd>ESC</kbd>键即可回到命令模式</li></ul><p><strong>底行模式</strong></p><ul><li>底行模式下可以通过命令对文件内容进行查找、显示行号、退出等操作</li><li>在命令模式下按下[:,/]任意一个就可进入底行模式</li><li>通过/方式进入底行模式后，可以对文件内容进行查找</li><li>通过:方式进入底行模式后，可以输入wq（保存并退出）、q!（不保存退出）、set nu（显示行号）</li></ul><h3 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h3><p><code>find</code>在指定目录下查找文件，语法：<code>find dirName -option fileName</code></p><p><strong>案例：</strong> <code>find . -name &quot;*.java&quot;</code>即在当前目录及其子目录下查找.java结尾文件，<code>find /itcast -name &quot;*.java&quot;</code>在/itcast目录及其子目录下查找.java结尾的文件</p><p><code>grep</code>从指定文件中查找指定的文件内容，语法：<code>gerp content fileName</code></p><p><strong>案例：</strong> <code>grep Hello HelloWorld.java</code>即查找HelloWorld.java文件中出现的Hello字符串的位置，<code>grep hello *.java</code>即查找当前目录中所有.java结尾的文件中包含hello字符串的位置</p><h2 id="六、软件安装"><a href="#六、软件安装" class="headerlink" title="六、软件安装"></a>六、软件安装</h2><ul><li>软件安装方式</li><li>安装jdk</li><li>安装Tomcat</li><li>安装MySQL</li><li>安装lrzsz</li></ul><h3 id="软件安装方式"><a href="#软件安装方式" class="headerlink" title="软件安装方式"></a>软件安装方式</h3><p><strong>二进制发布包安装：</strong> 软件已经针对具体平台编译打包发布，只要解压，修改配置即可</p><p><strong>rpm安装：</strong> 软件已经按照redhat的包管理规范进行打包，使用rpm命令进行安装，不能自行解决库依赖问题</p><p><strong>yum安装：</strong> 一种在线软件安装方式，本质上还是rpm安装，会自动下载安装包并安装，安装过程中自动解决库依赖问题</p><p><strong>源码编译安装：</strong> 软件以源码工程的形式发布，需要自己编译打包</p><h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><p><strong>第一步</strong> 从<a href="https://repo.huaweicloud.com/java/jdk">HUAWEI镜像源</a>下载Linux版JDK安装包</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722200024421.png" alt="image-20230722200024421"></p><p><strong>第二步</strong> 使用FinalShell自带的上传功能将jdk的二进制发布包上传到Linux</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722200944039.png" alt=""></p><p><strong>第三步</strong> 解压安装包，命令为<code>tar -zxvf jdk-8u171-linux-x64.tar.gz -C /usr/local</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722201903688.png" alt="image-20230722201903688"></p><p><strong>第四步</strong> 配置环境变量，使用vim命令修改/etc/profile文件，在文件末尾添加如下配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=/usr/local/jdk1.8.0_171</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722202606590.png" alt="image-20230722202606590"></p><p><strong>第五步</strong> 重新加载profile文件，使更改的配置立即生效，命令：<code>source /etc/profile</code>；检查安装是否成功，命令：<code>java -version</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722202750491.png" alt="image-20230722202750491"></p><h3 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h3><p><strong>第一步</strong> 从<a href="https://tomcat.apache.org/download-80.cgi">官方网站</a>下载Tomcat二进制发布包</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722203613052.png" alt="image-20230722203613052"></p><p><strong>第二步</strong> 使用FinalShell自带的上传工具将Tomcat的二进制发布包上传到Linux</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722204945129.png" alt="image-20230722204945129"></p><p><strong>第三步</strong> 解压安装包，命令为<code>tar -zxvf apache-tomcat-8.5.91.tar.gz -C /usr/local</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722205136431.png" alt="image-20230722205136431"></p><p><strong>第四步</strong> 进入Tomcat的bin目录启动服务，命令为<code>sh startup.sh</code>或<code>./startup.sh</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722205422438.png" alt="image-20230722205422438"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722205602577.png" alt="image-20230722205602577"></p><h4 id="验证Tomcat启动"><a href="#验证Tomcat启动" class="headerlink" title="验证Tomcat启动"></a>验证Tomcat启动</h4><p><strong>查看启动日志</strong></p><p><code>more /usr/local/apache-tomcat-8.5.91/logs/catalina.out</code></p><p><code>tail -50 /usr/local/apache-tomcat-8.5.91/logs/catalina.out</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722210219464.png" alt="image-20230722210219464"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722210300100.png" alt="image-20230722210300100"></p><p><strong>查看进程</strong></p><p><code>ps -ef|grep tomcat</code></p><ul><li>ps命令是Linux下非常强大的进程查看命令，通过ps -ef可以查看当前运行的所有进程的详细信息</li><li>”|“在Linux中称为管道符，可以将前一个命令的结果输出给后一个命令作为输入</li><li>使用ps命令查看进程时，经常配合管道符和查找命令grep一起使用，来查看特定进程</li></ul><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722210847479.png" alt="image-20230722210847479"></p><p>在本地机上测试连接Linux上的tomcat服务器，会发现连接失败</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722211120084.png" alt="image-20230722211120084"></p><h4 id="防火墙操作"><a href="#防火墙操作" class="headerlink" title="防火墙操作"></a>防火墙操作</h4><ul><li>查看防火墙状态：<code>systemctl status firewalld</code>或<code>firewall-cmd --state</code></li><li>暂时关闭防火墙：<code>systemctl stop firewalld</code></li><li>永久关闭防火墙：<code>systemctl disable firewalld</code></li><li>开启防火墙：<code>systemctl start firewalld</code></li><li>开发指定端口：<code>firewall-cmd --zone=public --add-port=8080/tcp --permanent</code></li><li>关闭指定端口：<code>firewall-cmd --zone=public --remove-port=8080/tcp --permanent</code></li><li>立即生效：<code>firewall-cmd --reload</code></li><li>查看开放的端口：<code>firewall-cmd --zone=public --list-ports</code></li></ul><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722211840689.png" alt="image-20230722211840689"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722211851853.png" alt="image-20230722211851853"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722212313150.png" alt="image-20230722212313150"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722212325381.png" alt="image-20230722212325381"></p><p><strong>注意：</strong> systemctl是管理Linux中服务的命令，可对服务进行启动、停止、重启、查看状态等操作；firewall-cmd是Linux中专门用于控制防火墙的命令；为了保证系统安全，服务器的防火墙不建议关闭</p><h4 id="关闭Tomcat服务"><a href="#关闭Tomcat服务" class="headerlink" title="关闭Tomcat服务"></a>关闭Tomcat服务</h4><p><strong>第一种</strong></p><p>运行Tomcat下的bin目录中提供停止服务的脚本文件shutdown.sh，命令：<code>sh shutdown.sh</code>或<code>./shutdown.sh</code></p><p><strong>第二种</strong></p><p>查看Tomcat进程，获得进程id，然后执行结束进程的命令：<code>kill -9 进程号</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722213508170.png" alt="image-20230722213508170"></p><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>先检测当前系统中是否已安装MySQL数据库，如果已安装，那么在安装则会失败，同时CentOS7自带的mariadb会与MySQL数据库冲突</p><p><code>rpm -qa</code>：查询当前系统中安装的所有软件</p><p><code>rpm -qa|grep mysql</code>：查询当前系统中安装的软件名称中是否有mysql</p><p><code>rpm -qa|grep mariadb</code>：查询当前系统中安装的软件名称中是否有mariadb</p><p>RPM（Red-Hat Package Manager）是软件包管理器，是红帽Linux用于管理和安装软件的工具</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722214231594.png" alt="image-20230722214231594"></p><p>卸载已安装的冲突软件</p><p><code>rpm -e --nodeps 软件名称</code>：卸载软件</p><p><code>rpm -e --nodeps mariadb-libs-5.5.68-1.el7.x86_64</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722214708954.png" alt="image-20230722214708954"></p><p>到这里准备工作完成了，接下来就是正式安装</p><p><strong>第一步</strong> 到<a href="https://downloads.mysql.com/archives/community">官网</a>下载Linux版MySQL，这里选择MySQL的版本和本地机相同</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722215310980.png" alt="image-20230722215310980"></p><p><strong>第二步</strong> 使用FinalShell自带的上传工具将MySQL压缩包上传到Linux</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722215829742.png" alt="image-20230722215829742"></p><p><strong>第三步</strong> 移动mysql压缩包到创建的目录下</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722220105983.png" alt="image-20230722220105983"></p><p><strong>第四步</strong> 解压mysql压缩包</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722220429858.png" alt="image-20230722220429858"></p><p><strong>第五步</strong> 安装rpm软件包</p><p><code>rpm -ivh *.rpm --nodeps --force</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722221603126.png" alt="image-20230722221603126"></p><p><strong>第六步</strong> 启动mysql</p><p><code>systemctl status mysqld</code>：查看mysql服务状态</p><p><code>systemctl start mysqld</code>：启动mysql服务</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722222026605.png" alt="image-20230722222026605"></p><p><strong>说明：</strong> 可以设置开机时启动mysql服务，避免每次开机启动mysql</p><p><code>systemctl enable mysqld</code>：开机启动mysql服务</p><p><code>netstat -tunlp</code>：查看已启动的服务</p><p><code>netstat -tunlp|grep mysql</code></p><p><code>ps -ef|grep mysql</code>：查看mysql进程</p><p><strong>注意：</strong> 需要安装net-tools</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722222408872.png" alt="image-20230722222408872"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722222614009.png" alt="image-20230722222614009"></p><h4 id="登录MySQL数据库"><a href="#登录MySQL数据库" class="headerlink" title="登录MySQL数据库"></a>登录MySQL数据库</h4><p>查阅临时密码</p><p><code>cat /var/log/mysqld.log</code>：查看文件内容</p><p><code>cat /var/log/mysqld.log|grep password</code>：查看文件内容中包含password的行信息</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722223333466.png" alt="image-20230722223333466"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722223624852.png" alt="image-20230722223624852"></p><p><strong>修改临时密码</strong></p><p>先修改密码在设置校验规则与密码长度</p><p><code>alter user &#39;root&#39;@&#39;localhost&#39; identified with mysql_native_password by &#39;Root_12root&#39;;</code>：修改的密码中必须有数字、大小写字母和特殊字符且长度在8以上</p><p><code>set global validate_password.policy=0;</code>：设置密码安全等级低，便于密码修改</p><p><code>set global validate_password.length=4;</code>：设置密码长度最低位数</p><p><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</code>：修改密码为简单密码</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722225828959.png" alt="image-20230722225828959"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722225859441.png" alt="image-20230722225859441"></p><p><strong>开启访问权限</strong></p><p>先创建用户，在对该用户分配用户权限，然后在刷新权限</p><p><code>CREATE USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</code></p><p><code>GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; WITH GRANT OPTION;</code></p><p><code>FLUSH PRIVILEGES;</code></p><p><strong>注意：</strong> <code>CREATE USER &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39;;</code>中<code>&#39;123456&#39;</code>为远程连接的访问密码</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723101038751.png" alt="image-20230723101038751"></p><p>开放3306端口：<code>firewall-cmd --zone=public --add-port=3306/tcp --permanent</code>、<code>firewall-cmd --reload</code>、<code>firewall-cmd --zone=public --list-ports</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230722231453261.png" alt="image-20230722231453261"></p><p>使用navicat测试远程连接Linux上的mysql，也可以使用DataGrip测试远程连接Linux上的mysql</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723101742200.png" alt="image-20230723101742200"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723101801312.png" alt="image-20230723101801312"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723110728145.png" alt="image-20230723110728145"></p><h3 id="安装lrzsz"><a href="#安装lrzsz" class="headerlink" title="安装lrzsz"></a>安装lrzsz</h3><p>使用Yum安装</p><blockquote><p>Yum（全称为Yellow dog Updater,Modified）是一个在Fedora和RedHat以及CentOS中的Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器自动下载RPM包并且安装，可以自动出来依赖关系，并且一次安装所有依赖的软件包，无序繁琐地一次次下载、安装</p></blockquote><p>搜索lrzsz安装包，命令：<code>yum list lrzsz</code>，然后使用yum命令在线安装，命令：<code>yum install lrzsz.x86_64</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723102656892.png" alt="image-20230723102656892"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230723102822687.png" alt="image-20230723102822687"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;视频地址&quot;&gt;&lt;a href=&quot;#视频地址&quot; class=&quot;headerlink&quot; title=&quot;视频地址&quot;&gt;&lt;/a&gt;视频地址&lt;/h2&gt;&lt;p&gt;B站黑马：&lt;a href=&quot;https://b23.tv/av213091208/p118&quot;&gt;缘起&lt;/a&gt; —— &lt;a hr</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL进阶篇</title>
    <link href="http://example.com/posts/6638.html"/>
    <id>http://example.com/posts/6638.html</id>
    <published>2023-10-13T11:20:00.000Z</published>
    <updated>2023-10-13T11:21:29.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="整体脉络"><a href="#整体脉络" class="headerlink" title="整体脉络"></a>整体脉络</h2><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230802202743259.png" alt="image-20230802202743259"></p><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><h3 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h3><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720213328191.png" alt="image-20230720213328191"></p><p><strong>连接层</strong><br>主要完成一些类似于连接处理、授权认证及相关的安全方案</p><p><strong>服务层</strong><br>主要完成大多数核心服务功能，如SQL接口、缓存查询、SQL分析与优化、部分内置函数执行。所有跨存储引擎的功能也在这一层实现，如过程、函数等</p><p><strong>引擎层</strong><br>真正负责MySQL中数据的存储和提取，服务器通过API和存储引擎进行通信。不同存储引擎具有不同功能，这样就可以根据需要，选取适合的存储引擎</p><p><strong>存储层</strong><br>将数据库的数据和日志存储在文件系统之上，并完成与存储引擎的交互，是文件的物理存储层</p><h3 id="存储引擎简介"><a href="#存储引擎简介" class="headerlink" title="存储引擎简介"></a>存储引擎简介</h3><p>存储引擎就是存储数据、建立索引、更新/查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可被称为表类型</p><p><strong>创建表时，指定存储引擎</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段<span class="number">1</span> 字段<span class="number">1</span>类型 [COMMENT 字段<span class="number">1</span>注释],</span><br><span class="line">    ...</span><br><span class="line">    字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">) ENGINE <span class="operator">=</span> INNODB [COMMENT 表注释];</span><br></pre></td></tr></table></figure><p><strong>查看当前数据库支持的存储引擎</strong><br><code>SHOW ENGINES;</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720215013148.png" alt="image-20230720215013148"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720215709339.png" alt="image-20230720215709339"></p><h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><h4 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h4><p>InnoDB是一种兼顾高可靠性和高性能的通用存储引擎，在MySQL 5.5之后，InnoDB是默认的MySQL存储引擎</p><p><strong>特点</strong></p><ul><li>DML操作遵循ACID模型，支持<font color=#9932CD>事务</font></li><li><font color=#9932CD>行级锁</font>，提高并发访问性能</li><li>支持<font color=#9932CD>外键</font> FOREIGN KEY约束，保证数据的完整性和正确性</li></ul><p><strong>文件</strong><br>xxx.ibd：xxx代表的是表名，InnoDB引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引</p><p>参数：innodb_file_per_table</p><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720225610794.png" alt="image-20230720225610794"></p><h4 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h4><p>MyISAM是MySQL早期的默认存储引擎</p><p><strong>特点</strong></p><ul><li>不支持事务，不支持外键</li><li>支持表锁，不支持行锁</li><li>访问速度快</li></ul><p><strong>文件</strong><br>xxx.sdi：存储表结构信息</p><p>xxx.MYD：存储数据</p><p>xxx.MYI：存储索引</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720230022387.png" alt="image-20230720230022387"></p><h4 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h4><p>Memory引擎的表数据是存储在内存中的，由于受到硬件问题或断电问题的影响，只能将这些表作为临时表或缓存使用</p><p><strong>特点</strong></p><ul><li>内存存放，访问速度快</li><li>hash索引（默认）</li></ul><p><strong>文件</strong><br>xxx.sdi：存储表结构信息</p><div class="table-container"><table><thead><tr><th style="text-align:center">特点</th><th style="text-align:center">InnoDB</th><th style="text-align:center">MyIASM</th><th style="text-align:center">Memory</th></tr></thead><tbody><tr><td style="text-align:center">存储限制</td><td style="text-align:center">64TB</td><td style="text-align:center">有</td><td style="text-align:center">有</td></tr><tr><td style="text-align:center">事务安全</td><td style="text-align:center"><font color=#9932CD>支持</font></td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">锁机制</td><td style="text-align:center"><font color=#9932CD>行锁</font></td><td style="text-align:center">表锁</td><td style="text-align:center">表锁</td></tr><tr><td style="text-align:center">B+tree索引</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">Hash索引</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">支持</td></tr><tr><td style="text-align:center">全文索引</td><td style="text-align:center">支持(5.6版本之后)</td><td style="text-align:center">支持</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">空间使用</td><td style="text-align:center">高</td><td style="text-align:center">低</td><td style="text-align:center">N/A</td></tr><tr><td style="text-align:center">内存使用</td><td style="text-align:center">高</td><td style="text-align:center">低</td><td style="text-align:center">中等</td></tr><tr><td style="text-align:center">批量插入速度</td><td style="text-align:center">低</td><td style="text-align:center">高</td><td style="text-align:center">高</td></tr><tr><td style="text-align:center">支持外键</td><td style="text-align:center"><font color=#9932CD>支持</font></td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr></tbody></table></div><h3 id="存储引擎选择"><a href="#存储引擎选择" class="headerlink" title="存储引擎选择"></a>存储引擎选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合</p><p><strong>InnoDB：</strong> 是MySQL的默认存储引擎，支持事务、外键。如果应用对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，那么InnoDB存储引擎是比较合适的选择</p><p><strong>MyISAM：</strong> 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不是很高，那么选择这个存储引擎是非常合适的</p><p><strong>MEMORY：</strong> 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。MEMORY的缺陷就是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;整体脉络&quot;&gt;&lt;a href=&quot;#整体脉络&quot; class=&quot;headerlink&quot; title=&quot;整体脉络&quot;&gt;&lt;/a&gt;整体脉络&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://mk-image-article.oss-cn-hangzhou.aliyuncs.co</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>事务</title>
    <link href="http://example.com/posts/6637.html"/>
    <id>http://example.com/posts/6637.html</id>
    <published>2023-10-13T11:10:00.000Z</published>
    <updated>2023-10-13T11:18:18.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事务简介"><a href="#事务简介" class="headerlink" title="事务简介"></a>事务简介</h2><p>事务用于管理对数据库的一组操作，这组操作要么全部成功执行，要么全部回滚(即取消)。事务的目的是保证数据库的一致性和完整性</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720170911464.png" alt="image-20230720170911464"></p><p>在MySQL中，只有InnoDB数据库引擎才支持事务</p><h2 id="事务操作"><a href="#事务操作" class="headerlink" title="事务操作"></a>事务操作</h2><p><strong>查看/设置事务提交方式</strong><br><code>SELECT @@autocommit;</code></p><p><code>SET @@autocommit;</code></p><p><strong>提交事务</strong><br><code>COMMIT;</code></p><p><strong>回滚事务</strong><br><code>ROLLBACK;</code></p><p><strong>开启事务</strong><br><code>START TRANSACTION 或 BEGIN;</code></p><p><strong>提交事务</strong><br><code>COMMIT;</code></p><p><strong>回滚事务</strong><br><code>ROLLBACK;</code></p><p>【实践】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据准备</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> account(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;主键&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">10</span>) comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    money <span class="type">int</span> comment <span class="string">&#x27;余额&#x27;</span></span><br><span class="line">) <span class="type">character</span> <span class="keyword">set</span> utf8 comment <span class="string">&#x27;账户表&#x27;</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> account(name, money) <span class="keyword">values</span> (<span class="string">&#x27;学校&#x27;</span>, <span class="number">2000</span>),(<span class="string">&#x27;慕容婉&#x27;</span>, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询学校账号余额</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;学校&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 将学校账号余额-1000</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">1000</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;学校&#x27;</span>;</span><br><span class="line"></span><br><span class="line">有内鬼，终止交易...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 将李四账户余额+1000</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">1000</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;慕容婉&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式一</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @<span class="variable">@autocommit</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">-- 设置为手动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚事务</span></span><br><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 方式二</span></span><br><span class="line"><span class="keyword">set</span> @<span class="variable">@autocommit</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 设置为自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启事务</span></span><br><span class="line"><span class="keyword">start</span> transaction;</span><br><span class="line"><span class="comment">-- 转账操作</span></span><br><span class="line"><span class="comment">-- 1. 查询学校账号余额</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> account <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;学校&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 将学校账号余额-1000</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">-</span> <span class="number">1000</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;学校&#x27;</span>;</span><br><span class="line"></span><br><span class="line">有内鬼，终止交易...</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 将李四账户余额+1000</span></span><br><span class="line"><span class="keyword">update</span> account <span class="keyword">set</span> money <span class="operator">=</span> money <span class="operator">+</span> <span class="number">1000</span> <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;慕容婉&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提交事务</span></span><br><span class="line"><span class="keyword">commit</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 回滚事务</span></span><br><span class="line"><span class="keyword">rollback</span> ;</span><br></pre></td></tr></table></figure><h2 id="事务四大特性"><a href="#事务四大特性" class="headerlink" title="事务四大特性"></a>事务四大特性</h2><p>一般来说，事务是必须满足4个条件（ACID）：原子性（<strong>A</strong>tomicity，或称不可分割性）、一致性（<strong>C</strong>onsistency）、隔离性（<strong>I</strong>solation，又称独立性）、持久性（<strong>D</strong>urability）</p><ul><li>原子性：事务是不可分割的最小操作单元，要么全部成功，要么全部失败</li><li>一致性：事务完成时，必须使所有的数据都保持一致状态</li><li>隔离性：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性：事务一旦提交或回滚，它对数据库中数据的改变是永久的</li></ul><h2 id="并发事务问题"><a href="#并发事务问题" class="headerlink" title="并发事务问题"></a>并发事务问题</h2><p>多个事务在执行过程中所出现的问题</p><div class="table-container"><table><thead><tr><th>问题</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td>脏读</td><td>一个事务读到另一个事务还没有提交的数据</td><td>事务A修改了数据但还未提交，事务B读取到了事务A修改的数据，这时候事务B读取到的数据就是脏的，称为脏读</td></tr><tr><td>不可重复读</td><td>一个事务先后读取同一条记录，但两次读取的数据不同</td><td>事务A读取了一条数据之后，事务B修改了这条数据并提交了事务，然后事务A再次读取这条数据，就会发现两次结果不一致，这就是不可重复读</td></tr><tr><td>幻读</td><td>在同一个事务中，由于其他事务的插入、更新或删除操作，导致同一个查询语句返回不同的结果集</td><td>事务A使用了一定条件查询，然后事务B增加了符合条件的记录，当事务A再次查询时，发现两次查询结果集不一样，好像产生了幻觉</td></tr></tbody></table></div><h2 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h2><p>用来解决并发事务问题的</p><div class="table-container"><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read uncommitted</td><td>会</td><td>会</td><td>会</td></tr><tr><td>Read committed</td><td>不会</td><td>会</td><td>会</td></tr><tr><td>Repeatable Read(默认)</td><td>不会</td><td>不会</td><td>会</td></tr><tr><td>Serializable</td><td>不会</td><td>不会</td><td>不会</td></tr></tbody></table></div><p><strong>查看事务隔离级别</strong></p><p><code>SELECT @@TRANSACTION_ISOLATION;</code></p><p><strong>设置事务隔离级别</strong></p><p><code>SET [SESSION][GLOBAL] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITED | READ COMMITED | REPEATABLE READ | SERIALIZABLE&#125;</code></p><p><strong>注意：</strong> 事务隔离级别越高，数据越安全，但性能越低</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;事务简介&quot;&gt;&lt;a href=&quot;#事务简介&quot; class=&quot;headerlink&quot; title=&quot;事务简介&quot;&gt;&lt;/a&gt;事务简介&lt;/h2&gt;&lt;p&gt;事务用于管理对数据库的一组操作，这组操作要么全部成功执行，要么全部回滚(即取消)。事务的目的是保证数据库的一致性和完整性&lt;/</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>多表查询</title>
    <link href="http://example.com/posts/6636.html"/>
    <id>http://example.com/posts/6636.html</id>
    <published>2023-10-13T11:07:00.000Z</published>
    <updated>2023-10-13T11:08:10.379Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在MySQL中，多表查询是指在一个查询语句中涉及多个表的操作。这种查询可以通过连接（join）操作将多个表关联起来，从而实现在多个表之间进行数据的检索和处理</p><h2 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h2><p>项目开发中，在进行数据库表结构设计时，会根据业务需求与业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表结构之间也存在各种联系，基本分为三类：</p><ul><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ul><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719172334300.png" alt="image-20230719172334300"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719214108948.png" alt="image-20230719214108948"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719191339826.png" alt="image-20230719191339826"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719193800824.png" alt="image-20230719193800824"></p><h2 id="多表查询概述"><a href="#多表查询概述" class="headerlink" title="多表查询概述"></a>多表查询概述</h2><p>多表查询即从多张表中查询数据</p><p><strong>笛卡尔积：</strong> 笛卡尔积是指在数学中，两个集合所有组合情况（<font color=#008c8c>在多表查询时，需要消除无效笛卡尔积</font>）</p><p>新建emp表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;主键&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">int</span> unsigned comment <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    job <span class="type">varchar</span>(<span class="number">20</span>) comment <span class="string">&#x27;职位&#x27;</span>,</span><br><span class="line">    salary <span class="type">int</span> comment <span class="string">&#x27;薪酬&#x27;</span>,</span><br><span class="line">    entrydate <span class="type">date</span> comment <span class="string">&#x27;入职日期&#x27;</span>,</span><br><span class="line">    managerid <span class="type">int</span> comment <span class="string">&#x27;管理者id&#x27;</span>,</span><br><span class="line">    dept_id <span class="type">int</span> comment <span class="string">&#x27;部门id&#x27;</span></span><br><span class="line">) <span class="type">character</span> <span class="keyword">set</span> utf8 comment <span class="string">&#x27;员工表&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(name, age, job, salary, entrydate, dept_id) <span class="keyword">values</span> (<span class="string">&#x27;金庸&#x27;</span>, <span class="number">66</span>, <span class="string">&#x27;总裁&#x27;</span>, <span class="number">20000</span>, <span class="string">&#x27;2000-01-01&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(name, age, job, salary, entrydate, managerid, dept_id) <span class="keyword">values</span></span><br><span class="line">                (<span class="string">&#x27;张无忌&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;项目经理&#x27;</span>, <span class="number">12500</span>, <span class="string">&#x27;2005-12-05&#x27;</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;杨逍&#x27;</span>, <span class="number">33</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">8400</span>, <span class="string">&#x27;2000-11-05&#x27;</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;韦一笑&#x27;</span>, <span class="number">48</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">11000</span>, <span class="string">&#x27;2002-02-05&#x27;</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;常遇春&#x27;</span>, <span class="number">43</span>, <span class="string">&#x27;开发&#x27;</span>, <span class="number">11000</span>, <span class="string">&#x27;2004-09-07&#x27;</span>, <span class="number">3</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;小昭&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;程序员鼓励师&#x27;</span>, <span class="number">6600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">2</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;灭绝&#x27;</span>, <span class="number">60</span>, <span class="string">&#x27;财务总监&#x27;</span>, <span class="number">8500</span>, <span class="string">&#x27;2002-09-12&#x27;</span>, <span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">                (<span class="string">&#x27;周芷若&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;会计&#x27;</span>, <span class="number">48000</span>, <span class="string">&#x27;2006-06-02&#x27;</span>, <span class="number">7</span>, <span class="number">3</span>),</span><br><span class="line">                (<span class="string">&#x27;丁敏君&#x27;</span>, <span class="number">23</span>, <span class="string">&#x27;出纳&#x27;</span>, <span class="number">5250</span>, <span class="string">&#x27;2009-05-12&#x27;</span>, <span class="number">7</span>, <span class="number">3</span>),</span><br><span class="line">                (<span class="string">&#x27;赵敏&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;市场部总监&#x27;</span>, <span class="number">12500</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>),</span><br><span class="line">                (<span class="string">&#x27;鹿杖客&#x27;</span>, <span class="number">56</span>, <span class="string">&#x27;职员&#x27;</span>, <span class="number">3750</span>,<span class="string">&#x27;2006-10-03&#x27;</span>, <span class="number">10</span>, <span class="number">2</span>),</span><br><span class="line">                (<span class="string">&#x27;鹤笔翁&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>, <span class="number">3750</span>, <span class="string">&#x27;2007-05-09&#x27;</span>, <span class="number">10</span>, <span class="number">2</span>),</span><br><span class="line">                (<span class="string">&#x27;东方白&#x27;</span>, <span class="number">19</span>, <span class="string">&#x27;职员&#x27;</span>, <span class="number">5500</span>, <span class="string">&#x27;2009-02-12&#x27;</span>, <span class="number">10</span>, <span class="number">2</span>),</span><br><span class="line">                (<span class="string">&#x27;张三丰&#x27;</span>, <span class="number">88</span>, <span class="string">&#x27;销售总监&#x27;</span>, <span class="number">14000</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">1</span>, <span class="number">4</span>),</span><br><span class="line">                (<span class="string">&#x27;俞莲舟&#x27;</span>, <span class="number">38</span>, <span class="string">&#x27;销售&#x27;</span>, <span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>, <span class="number">4</span>),</span><br><span class="line">                (<span class="string">&#x27;宋远桥&#x27;</span>, <span class="number">40</span>, <span class="string">&#x27;销售&#x27;</span>, <span class="number">4600</span>, <span class="string">&#x27;2004-10-12&#x27;</span>, <span class="number">14</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(name, age, salary, entrydate, managerid) <span class="keyword">values</span> (<span class="string">&#x27;陈友谅&#x27;</span>, <span class="number">42</span>, <span class="number">2000</span>, <span class="string">&#x27;2011-10,12&#x27;</span>, <span class="number">1</span>);    </span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719221412000.png" alt="image-20230719221412000"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719222545708.png" alt="image-20230719222545708"></p><h3 id="多表查询分类"><a href="#多表查询分类" class="headerlink" title="多表查询分类"></a>多表查询分类</h3><p><strong>连接查询</strong></p><p>交叉连接：返回两张表的笛卡尔积 <code>cross join</code></p><p>内连接：相当于查询两张表交集部分数据</p><p>外连接：</p><ul><li>左外连接：查询左表所有数据包含交集部分数据</li><li>右外连接：查询右表所有数据包含交集部分数据</li></ul><p>自连接：当前表与自身的连接查询，自连接必须使用表别名</p><p><strong>子查询</strong></p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h2><p>内连接查询语法有两种</p><p><strong>隐式内连接</strong></p><p><code>SELECT 字段列表 FROM 表1,表2 WHERE 条件...;</code></p><p><strong>显示内连接</strong></p><p><code>SELECT 字段列表 FROM 表1 [INNER] JOIN 表2 ON 连接条件...;</code></p><p>内连接查询的是两张表的交集部分</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719224031607.png" alt="image-20230719224031607"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719224247221.png" alt="image-20230719224247221"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p><strong>左外连接</strong></p><p><code>SELECT 字段列表 FROM 表1 LEFT [OUTER] JOIN 表2 ON 条件...;</code></p><p><strong>右外连接</strong><br><code>SELECT 字段列表 FROM 表1 RIGHT [OUTER] JOIN 表2 ON 条件...;</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719224936057.png" alt="image-20230719224936057"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719225314761.png" alt="image-20230719225314761"></p><p>在项目开发当中，左外连接用的多一些，因为右外连接可以改为左外连接</p><h2 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h2><p><strong>自连接查询</strong></p><p><code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件...;</code></p><p>自连接查询既可以是内连接查询也可以是外连接查询</p><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 自连接</span></span><br><span class="line"><span class="comment">-- 1. 查询员工 及其 所属领导的名字</span></span><br><span class="line"><span class="keyword">select</span> e.name, p.name <span class="keyword">from</span> emp e <span class="keyword">join</span> emp p <span class="keyword">on</span> e.managerid <span class="operator">=</span> p.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导，也需要查询出来</span></span><br><span class="line"><span class="keyword">select</span> e.name <span class="string">&#x27;员工&#x27;</span>, p.name <span class="string">&#x27;直属领导&#x27;</span> <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> emp p <span class="keyword">on</span> e.managerid <span class="operator">=</span> p.id;</span><br></pre></td></tr></table></figure><h2 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询 - union, union all"></a>联合查询 - union, union all</h2><p>对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表A...</span><br><span class="line"><span class="keyword">UNION</span>[<span class="keyword">ALL</span>]</span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表B...;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719231744466.png" alt="image-20230719231744466"></p><p><strong>注意：</strong> 联合查询多张表是列数必须保持一致，字段类型也需要保持一致；union all会将全部数据直接合并在一起，union会对合并后的数据去重</p><h2 id="子查询介绍"><a href="#子查询介绍" class="headerlink" title="子查询介绍"></a>子查询介绍</h2><p>SQL语句中嵌套SELECT语句，称为嵌套查询，又称子查询</p><p><code>SELECT * FROM t1 WHERE column1 = (SELECT column2 FROM t2);</code></p><p>子查询外部的语句可以是INSERT / UPDATE / DELETE /SELECT 中的任一个</p><p>根据子查询结果不同，分为</p><ul><li>标量子查询（子查询结果为单个值即一行一列）</li><li>列子查询（子查询结果为一列）</li><li>行子查询（子查询结果为一行）</li><li>表子查询（子查询结果为多行多列）</li></ul><p>根据子查询位置，分为：WHERE之后、FROM之后、SELECT之后</p><h2 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h2><p><u>子查询返回的是单行单列的数据也就是单个值</u>，这也是子查询中最简单的返回形式</p><p>常用操作符：= &gt; &lt; &gt;= &lt;= &lt;&gt; </p><p>【实践图】</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 标量子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询“销售部”所有员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询“销售部”部门ID</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> &quot;销售部&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 根据销售部部门ID，查询员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> &quot;销售部&quot;);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询在“东方白”入职之后的员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询 东方白 的 入职日期</span></span><br><span class="line"><span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;东方白&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b.查询指定入职日期之后入职的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> <span class="string">&#x27;2009-02-12&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> (<span class="keyword">select</span> entrydate <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;东方白&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720100159150.png" alt="image-20230720100159150"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720100734293.png" alt="image-20230720100734293"></p><h2 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h2><p>子查询返回的结果是一列多行，通常来自对表的某个字段查询的返回，这种子查询称为<font color=#9932CD>列子查询</font></p><p>常用操作符：IN、 NOT IN、ANY、SOME、ALL</p><div class="table-container"><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>IN</td><td>在指定集合范围内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定集合范围之内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table></div><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 列子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询“销售部” 和 “市场部”的所有员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询“销售部” 和 “市场部”部门ID</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 根据部门ID,查询员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;销售部&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;市场部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询比 财务部 所有人工资都高的员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询“财务部”部门ID</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 根据部门ID查询财务部的最高工资</span></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- c. 查询比指定工资高的所有员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">all</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;财务部&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 查询比研发部中任意一人工资高的员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询研发部部门ID</span></span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 查询研发部所有人工资</span></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- c.查询比指定工资高的所有员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">any</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>));</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="keyword">some</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720102746919.png" alt="image-20230720102746919"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720104112176.png" alt="image-20230720104112176"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720105302951.png" alt="image-20230720105302951"></p><h2 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h2><p>子查询返回的结果是一行多列</p><p>常用操作符：=、&lt;&gt;、IN、NOT、IN</p><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 行子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询与“张无忌”薪酬及直属领导相同的员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询“张无忌”的薪酬与直属领导</span></span><br><span class="line"><span class="keyword">select</span> salary, managerid <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张无忌&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 查询与“张无忌”薪酬及直属领导相同的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (salary, managerid) <span class="operator">=</span> (<span class="number">12500</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (salary, managerid) <span class="operator">=</span> (<span class="keyword">select</span> salary, managerid <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;张无忌&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720110618741.png" alt="image-20230720110618741"></p><h2 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h2><p>子查询返回的结果是多行多列</p><p>常用的操作符：IN</p><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 表子查询</span></span><br><span class="line"><span class="comment">-- 1. 查询与“鹿杖客”、“宋远桥”职位和薪酬相同的员工信息</span></span><br><span class="line"><span class="comment">-- a. 查询“鹿杖客”、“宋远桥”的职位和薪酬</span></span><br><span class="line"><span class="keyword">select</span> job, salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;鹿杖客&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;宋远桥&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b. 查询与“鹿杖客&quot;、”宋远桥“职位和薪酬相同的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (job, salary) <span class="keyword">in</span> ((<span class="string">&#x27;职位&#x27;</span>, <span class="number">3750</span>), (<span class="string">&#x27;销售&#x27;</span>, <span class="number">4600</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (job, salary) <span class="keyword">in</span> (<span class="keyword">select</span> job, salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;鹿杖客&#x27;</span> <span class="keyword">or</span> name <span class="operator">=</span> <span class="string">&#x27;宋远桥&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (job, salary) <span class="keyword">in</span> (<span class="keyword">select</span> job, salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="keyword">in</span> (<span class="string">&#x27;鹿杖客&#x27;</span>, <span class="string">&#x27;宋远桥&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询入职日期是 &quot;2006-01-01&quot; 之后的员工信息及其部门信息</span></span><br><span class="line"><span class="comment">-- a. 查询入职日期是“2006-01-01”之后的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> <span class="string">&#x27;2006-01-01&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b.查询入职日期是 &quot;2006-01-01&quot; 之后的员工信息及其部门信息</span></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, d.name <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> entrydate <span class="operator">&gt;</span> <span class="string">&#x27;2006-01-01&#x27;</span>) e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720111726193.png" alt="image-20230720111726193"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720112622882.png" alt="image-20230720112622882"></p><h2 id="综合实践"><a href="#综合实践" class="headerlink" title="综合实践"></a>综合实践</h2><blockquote><h3 id="根据需求，完成SQL语句编写"><a href="#根据需求，完成SQL语句编写" class="headerlink" title="根据需求，完成SQL语句编写"></a>根据需求，完成SQL语句编写</h3><ol><li>查询员工姓名、年龄、职位、部门信息</li><li>查询年龄小于30岁的员工姓名、年龄、职位、部门信息</li><li>查询拥有员工的部门ID、部门名称</li><li>查询所有年龄大于40岁的员工及其归属的部门名称；如果员工没有分配部门，也需要展示出来</li><li>查询所有员工的工资等级</li><li>查询“研发部”所有员工的信息及工资等级</li><li>查询“研发部”员工的平均工资</li><li>查询工资比“灭绝”高的员工信息</li><li>查询比平均薪酬高的员工信息</li><li>查询低于本部门平均工资的员工信息</li><li>查询所有部门信息并统计部门员工人数</li><li>查询所有学生的选课情况，展示出学生名称、学号、课程名称</li></ol></blockquote><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 查询员工的姓名、年龄、职位、部门信息（隐式内连接）</span></span><br><span class="line"><span class="keyword">select</span> e.name, e.age, e.job, d.<span class="operator">*</span> <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2. 查询年龄小于30岁的员工姓名、年龄、职位、部门信息（显示内连接）</span></span><br><span class="line"><span class="keyword">select</span> e.name, e.age, e.job, d.name <span class="keyword">from</span> emp e <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 查询拥有员工的部门ID，部门名称 查询去重</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> d.id, d.name <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4. 查询所有年龄大于40岁的员工及其归属的部门名称：如果员工没有分配部门，也需要展示出来</span></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, d.name <span class="keyword">from</span> emp e <span class="keyword">left</span> <span class="keyword">join</span> dept d <span class="keyword">on</span> e.dept_id <span class="operator">=</span> d.id <span class="keyword">where</span> e.age <span class="operator">&gt;</span> <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 查询所有员工的工资等级</span></span><br><span class="line"><span class="comment">-- 表: emp, salgrade</span></span><br><span class="line"><span class="comment">-- 连接条件: emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span></span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, s.grade <span class="keyword">from</span> emp e, salgrade s <span class="keyword">where</span> e.salary <span class="operator">&gt;=</span> s.losal <span class="keyword">and</span> e.salary <span class="operator">&lt;=</span> s.hisal;</span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, s.grade <span class="keyword">from</span> emp e, salgrade s <span class="keyword">where</span> e.salary <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6. 查询“研发部” 所有员工的信息及工资等级</span></span><br><span class="line"><span class="comment">-- 表：emp、dept、salgrade</span></span><br><span class="line"><span class="comment">-- 连接条件：emp.dept_id = dept.id emp.salary &gt;= salgrade.losal and emp.salary &lt;= salgrade.hisal</span></span><br><span class="line"><span class="comment">-- 查询条件：dept.name = &#x27;研发部&#x27;</span></span><br><span class="line"><span class="keyword">select</span> p.<span class="operator">*</span>, s.grade, s.losal, s.hisal <span class="keyword">from</span> (</span><br><span class="line">                    <span class="keyword">select</span> e.<span class="operator">*</span> <span class="keyword">from</span> emp e, (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>) d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id</span><br><span class="line">                    ) p, salgrade s <span class="keyword">where</span> p.salary <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"><span class="keyword">select</span> e.<span class="operator">*</span>, s.grade</span><br><span class="line"><span class="keyword">from</span> emp e,</span><br><span class="line">     dept d,</span><br><span class="line">     salgrade s</span><br><span class="line"><span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id</span><br><span class="line">  <span class="keyword">and</span> (e.salary <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal)</span><br><span class="line">  <span class="keyword">and</span> d.name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7. 查询“研发部”员工的平均工资</span></span><br><span class="line"><span class="comment">-- 表：emp, dept</span></span><br><span class="line"><span class="comment">-- 连接条件：emp.dept_id = dept.id</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(e.salary), d.name <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id <span class="keyword">and</span> d.name <span class="operator">=</span> <span class="string">&#x27;研发部&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8. 查询工资比“灭绝”高的员工信息</span></span><br><span class="line"><span class="comment">-- 表：emp</span></span><br><span class="line"><span class="comment">-- a.查询“灭绝”的薪资</span></span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;灭绝&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b.查询比指定薪资高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;灭绝&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9. 查询比平均薪资高的员工信息</span></span><br><span class="line"><span class="comment">-- 表：emp</span></span><br><span class="line"><span class="comment">-- a.查询平均薪资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b.查询比平均薪资高的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> salary <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10. 查询低于本部门平均工资的员工信息</span></span><br><span class="line"><span class="comment">-- 表: emp</span></span><br><span class="line"><span class="comment">-- a. 查询指定部门平均工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp e <span class="keyword">where</span> e.dept_id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- b.查询低于本部门平均工资的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp e1 <span class="keyword">where</span> e1.salary <span class="operator">&lt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(salary) <span class="keyword">from</span> emp e <span class="keyword">where</span> e.dept_id <span class="operator">=</span> e1.dept_id);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11. 查询所有的部门信息并统计部门的员工人数</span></span><br><span class="line"><span class="comment">-- 表：emp, dept</span></span><br><span class="line"><span class="keyword">select</span> id, name, (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp e <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id) <span class="string">&#x27;人数&#x27;</span> <span class="keyword">from</span> dept d;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp <span class="keyword">where</span> dept_id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> d.<span class="operator">*</span>, <span class="built_in">count</span>(<span class="operator">*</span>) <span class="string">&#x27;人数&#x27;</span> <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e.dept_id <span class="operator">=</span> d.id <span class="keyword">group</span> <span class="keyword">by</span> e.dept_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 12. 查询所有学生的选课情况，展示出学生名称，学号，课程名称</span></span><br><span class="line"><span class="comment">-- 表：student, course, student_course</span></span><br><span class="line"><span class="comment">-- 连接条件：student.id = student_course.studentid, course.id = student_course.courseid</span></span><br><span class="line"><span class="keyword">select</span> s.name, s.no, c.name <span class="keyword">from</span> student s, student_course sc, course c <span class="keyword">where</span> s.id <span class="operator">=</span> sc.studentid <span class="keyword">and</span> c.id <span class="operator">=</span> sc.courseid;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720120107900.png" alt="image-20230720120107900"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720114053450.png" alt="image-20230720114053450"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720114543617.png" alt="image-20230720114543617"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720115326139.png" alt="image-20230720115326139"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720115708088.png" alt="image-20230720115708088"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720144513701.png" alt="image-20230720144513701"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720150027047.png" alt="image-20230720150027047"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720150517486.png" alt="image-20230720150517486"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720150813071.png" alt="image-20230720150813071"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720151129196.png" alt="image-20230720151129196"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720151955676.png" alt="image-20230720151955676"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720154721320.png" alt="image-20230720154721320"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720155713524.png" alt="image-20230720155713524"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230720155749063.png" alt="image-20230720155749063"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;在MySQL中，多表查询是指在一个查询语句中涉及多个表的操作。这种查询可以通过连接（join）操作将多个表关联起来，从而实现在多个表之间进行</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL5.7升为8.0新指南</title>
    <link href="http://example.com/posts/6635.html"/>
    <id>http://example.com/posts/6635.html</id>
    <published>2023-10-13T06:50:00.000Z</published>
    <updated>2023-10-13T06:48:52.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、效果图"><a href="#一、效果图" class="headerlink" title="一、效果图"></a>一、效果图</h2><p>俗话说的好：<u>有图有真相</u></p><p>升级前</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718152235046.png" alt="image-20230718152235046"></p><p>升级后</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718123656618.png" alt="image-20230718123656618"></p><h2 id="二、核心思路"><a href="#二、核心思路" class="headerlink" title="二、核心思路"></a>二、核心思路</h2><p>以官方教程为主，各种博文为辅，实践出真知</p><p>官方教程网址：<a href="https://dev.mysql.com/doc/refman/8.0/en/windows-upgrading.html">https://dev.mysql.com/doc/refman/8.0/en/windows-upgrading.html</a></p><p>重点内容重新解读</p><p>对于5.7升为8.0更建议<font color=#9932CD>使用Windows ZIP 存档分发方式升级</font>，同时在升级前应该做好备份工作</p><h2 id="三、备份"><a href="#三、备份" class="headerlink" title="三、备份"></a>三、备份</h2><p>这里采用mysqldump命令来备份</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/mysql_update.jpg" alt=""></p><h3 id="mysqldum介绍"><a href="#mysqldum介绍" class="headerlink" title="mysqldum介绍"></a>mysqldum介绍</h3><p><u>mysqldump 工具一般会随着 MySQL 数据库的安装而自动安装即安装完 MySQL 服务器后， 您可以直接使用 mysqldump 工具</u>。它能将一个或者多个数据库，或者数据库中的一个或者多个表导出为一个 SQL 文件，包括 DDL 语句和 DML 语句</p><p>第一步 找到mysql数据库安装目录</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717225400814.png" alt="image-20230717225400814"></p><p>第二步 使用<code>--all-databases</code>选项备份所有MySQL数据库，命令示例：<code>mysqldump -u root -p --all-databases &gt; all_databases.sql</code></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717230915711.png" alt="image-20230717230915711"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717231104613.png" alt="image-20230717231104613"></p><p>密码为root用户的登录密码</p><p>备份延伸：备份单个数据库和备份多个数据库，便于分享</p><p><strong>单个数据库备份</strong></p><p>命令示例：<code>mysqldump -u root -p database_name &gt; database_name.sql</code></p><p>解释：通过<code>root</code>用户将名为<code>database_name</code>的数据库进行备份即 将其保存到名为<code>database_name.sql</code>的文件中</p><p><strong>多个数据库备份</strong></p><p>命令示例：<code>mysqldump -u root -p --databases database_name_a database_name_b &gt; databases_a_b.sql</code></p><p>解释：通过<code>root</code>用户将要备份的数据库列表即<font color=#9932CD>用空格分隔的数据库名称</font>创建为一个包含数据库列表的转储文件</p><h2 id="四、卸载MySQL旧版"><a href="#四、卸载MySQL旧版" class="headerlink" title="四、卸载MySQL旧版"></a>四、卸载MySQL旧版</h2><p>卸载四步走</p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>停止MySQL服务并移除MySQL服务</p><p>以管理员身份运行cmd</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718105427105.png" alt="image-20230718105427105"></p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>删除MySQL安装目录，默认是安装在C盘中的Program Files目录下</p><p>我的安装目录在D:\Mysql下，因而来这里删除</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718110237249.png" alt="image-20230718110237249"></p><p>删除后</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718110257511.png" alt="image-20230718110257511"></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>删除相关注册表</p><p>通过吾爱大佬@wszjf提供的注册表编辑器==RegCool==进行删除</p><p>总共有三处需要查看并删除</p><ul><li><code>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\EventLog\Application\MySQL</code></li><li><code>HKEY_LOCAL_MACHINE\SYSTEM\ControlSet002\Services\Eventlog\Application\MySQL</code></li><li><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application\MySQL</code></li></ul><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718111619197.png" alt="image-20230718111619197"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718111731284.png" alt="image-20230718111731284"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718111834964.png" alt="image-20230718111834964"></p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>关机重启再安装</p><h2 id="五、MySQL新版下载"><a href="#五、MySQL新版下载" class="headerlink" title="五、MySQL新版下载"></a>五、MySQL新版下载</h2><p>来到MySQL官方提供的下载页：<a href="https://www.mysql.com/cn/downloads">https://www.mysql.com/cn/downloads</a>，滑至底部找到<a href="https://dev.mysql.com/downloads/mysql">MySQL Community Server</a>，然后进入详情页下载</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718113643389.png" alt="image-20230718113643389"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718114301978.png" alt="image-20230718114301978"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718114415335.png" alt="image-20230718114415335"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718114441313.png" alt="image-20230718114441313"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718114937600.png" alt="image-20230718114937600"></p><h2 id="六、MySQL新版安装"><a href="#六、MySQL新版安装" class="headerlink" title="六、MySQL新版安装"></a>六、MySQL新版安装</h2><p>跟着博文教程傻瓜安装，需要注意部分会重点强调</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718115216666.png" alt="image-20230718115216666"></p><p> <strong>选择自定义安装路径</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718115900587.png" alt="image-20230718115900587"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120530431.png" alt="image-20230718120530431"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120623665.png" alt="image-20230718120623665"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120810077.png" alt="image-20230718120810077"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120903663.png" alt="image-20230718120903663"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120924109.png" alt="image-20230718120924109"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718120957789.png" alt="image-20230718120957789"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718121459582.png" alt="image-20230718121459582"></p><blockquote><p>选项一：使用强密码加密进行身份验证（升级触发的新功能）</p><p>选项二：使用传统身份验证方法（兼容5.x旧版本）</p><p>如果MySQL可以采用强加密进行身份验证，但图形化管理工具并没有采用强密码加密，就会导致图形化管理工具无法连接MySQL</p></blockquote><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718121838558.png" alt="image-20230718121838558"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718121905229.png" alt="image-20230718121905229"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718121958296.png" alt="image-20230718121958296"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122027790.png" alt="image-20230718122027790"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122150715.png" alt="image-20230718122150715"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122211667.png" alt="image-20230718122211667"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122231218.png" alt="image-20230718122231218"></p><p>到此就安装完毕了</p><h2 id="七、MySQL-8-0连接测试"><a href="#七、MySQL-8-0连接测试" class="headerlink" title="七、MySQL 8.0连接测试"></a>七、MySQL 8.0连接测试</h2><p>在开始菜单可以看到8.0所提供的命令行客户端</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122507932.png" alt="image-20230718122507932"></p><p>输入安装时设置的密码进行登录<img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718122719402.png" alt="image-20230718122719402"></p><p>然后输入<code>exit</code>退出即可</p><h2 id="八、配置环境变量"><a href="#八、配置环境变量" class="headerlink" title="八、配置环境变量"></a>八、配置环境变量</h2><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718123336062.png" alt="image-20230718123336062"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718123512456.png" alt="image-20230718123512456"></p><h2 id="九、恢复备份（错误）"><a href="#九、恢复备份（错误）" class="headerlink" title="九、恢复备份（错误）"></a>九、恢复备份（错误）</h2><font color=red>**注意：** 这里是不同版本系列下的数据库迁移，不要迁移 information_schema, mysql,sys and performance_schema 这几个数据库，不然肯定会遇到问题</font><font color=#008c8c>以下恢复备份方式没有问题，问题在于将5.7下内置的数据库覆盖了8.0内置的数据库</font><p>如果熟悉Navicat导入sql文件那就使用Navicat，这里我选择使用DataGrip，正好实践下DataGrip如何导入sql文件的</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718150609795.png" alt="image-20230718150609795"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718150715446.png" alt="image-20230718150715446"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718150803345.png" alt="image-20230718150803345"></p><p>这时候在使用检查约束（8.0.16版之后支持）就执行成功了</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718150933535.png" alt="image-20230718150933535"></p><h2 id="十、报1449错误代码"><a href="#十、报1449错误代码" class="headerlink" title="十、报1449错误代码"></a>十、报1449错误代码</h2><p>在使用<code>show databases;</code>时报错：<code>ERROR 1449 (HY000): The user specified as a definer (&#39;mysql.infoschema&#39;@&#39;localhost&#39;) does not exist</code></p><p>通过几小时搜寻与整理发现应该是与昨天将MySQL5.7的所有数据库导入到MySQL8.0有关，在stack overflow有<a href="https://stackoverflow.com/questions/70287223/mysql-the-user-specified-as-a-definer-mysql-infoschemalocalhost-does-not">相关解答</a></p><blockquote><p>问题可能出在 mysql 进行迁移或备份时的数据库。 不应该对 information_schema, mysql,sys and performance_schema 这几个数据库进行备份和导入覆盖新服务器数据库</p><p>如果用户很重要，您可以插入它。 转储来自旧服务器的数据库mysql下的user表</p></blockquote><p>这时候没有别的办法，对MySQL 8.0进行重装</p><h3 id="MySQL-8-0卸载"><a href="#MySQL-8-0卸载" class="headerlink" title="MySQL 8.0卸载"></a>MySQL 8.0卸载</h3><p>两步走，第一步：停止MySQL 服务；第二步，用geek卸载MySQL相关程序</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719160037112.png" alt="image-20230719160037112"></p><p>重装后可以看到MySQL 8.0中myql数据库下的user表的默认用户</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719161211946.png" alt="image-20230719161211946"></p><h3 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h3><p>因为做的是全库备份，而现在需要恢复除内置数据库以外的数据库，换言之，如何从全库备份中恢复一个或多个数据库呢？</p><p>在搜寻一番无果后，结合自己的情况找到了解决办法</p><p>通过EditPlus打开全库备份文件，然后搜索<code>CREATE DATABASE</code>发现了有11处在创建数据库和表以及插入数据</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719164103381.png" alt="image-20230719164103381"></p><p>然后便是新建一个文件bookstore.sql，在全库备份文件中找到恢复bookstore数据库的代码（通过关键字搜索，找到一个含CREATE DATABASE <code>bookstore</code>和下一个CREATE DATABASE中间的代码），然后复制到bookstore.sql，之后先通过navicat运行下sql文件，发现可行便知道解决了</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719164750771.png" alt="image-20230719164750771"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719164828461.png" alt="image-20230719164828461"></p><font size=5>通过上述手段就可以恢复全部数据库，这一次吃了没经验的亏，还有部分原因是网上教程存在问题</font><h2 id="十一、注册MySQL到服务中"><a href="#十一、注册MySQL到服务中" class="headerlink" title="十一、注册MySQL到服务中"></a>十一、注册MySQL到服务中</h2><p>今天发现使用<code>net stop mysql</code>会提示服务名无效</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719111030804.png" alt="image-20230719111030804"></p><p>也就是没有将MySQL注入到服务中，下面进行注入</p><p>来到MySQL的安装路径下bin目录下，然后打开命令行窗口</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719111405078.png" alt="image-20230719111405078"></p><p>然后运行<code>mysqld --install</code>命令</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719111608474.png" alt="image-20230719111608474"></p><p>如果出现==Install/Remove of the Service Denied!==则表示不成功，需要用管理员身份运行cmd</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719112256268.png" alt="image-20230719112256268"></p><p>然后又有新问题了：MySQL 服务无法启动</p><p>通过<kbd>win</kbd>+<kbd>r</kbd>输入<code>services.msc</code>发现了有MySQL本地系统和MySQL80网络服务</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719114121287.png" alt="image-20230719114121287"></p><blockquote><p>MySQL本地系统和MySQL80网络服务是两种不同的MySQL部署方式。</p><p>MySQL本地系统是指将MySQL数据库安装在本地计算机上，作为本地应用程序使用。这种部署方式适用于个人开发者或小型团队，他们可以在自己的计算机上安装和管理MySQL数据库。本地系统通常用于开发和测试目的，因为它提供了更高的灵活性和控制权。</p><p>MySQL80网络服务是指将MySQL数据库安装在一个专门的服务器上，并通过网络提供服务。这种部署方式适用于需要多个用户访问和共享数据库的情况，例如企业或大型组织。网络服务允许多个客户端通过网络连接到MySQL服务器，并同时访问数据库。这种部署方式通常需要专门的服务器硬件和网络基础设施来支持高并发和可靠性。</p><p>总结来说，MySQL本地系统适用于个人开发和测试，而MySQL80网络服务适用于多用户访问和共享数据库的情况。选择哪种部署方式取决于你的具体需求和资源情况。</p></blockquote><p>所以答案很简单，关闭网络服务，开启本地系统</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719132446141.png" alt="image-20230719132446141"></p><p>这样就欧了</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230719114610558.png" alt="image-20230719114610558"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、效果图&quot;&gt;&lt;a href=&quot;#一、效果图&quot; class=&quot;headerlink&quot; title=&quot;一、效果图&quot;&gt;&lt;/a&gt;一、效果图&lt;/h2&gt;&lt;p&gt;俗话说的好：&lt;u&gt;有图有真相&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;升级前&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://mk</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>约束</title>
    <link href="http://example.com/posts/6634.html"/>
    <id>http://example.com/posts/6634.html</id>
    <published>2023-10-13T06:47:00.000Z</published>
    <updated>2023-10-13T06:48:01.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>约束是<u>用于限制表中数据的规则或条件</u>，确保数据的完整性和统一性</p><p>常见约束类型如下：</p><div class="table-container"><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>确保字段的值不能为null</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>确保字段的值是唯一的，但允许为空值</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>用于唯一标识表中的每一行数据，要求非空且唯一</td><td>PRIMARY KEY</td></tr><tr><td>默认约束</td><td>如果插入数据未提供字段值，则采用默认值</td><td>DEFAULT</td></tr><tr><td>检查约束(8.0.16版之后支持)</td><td>确保插入或更新的数据满足指定条件</td><td>CHECK</td></tr><tr><td>外键约束</td><td>用于建立表之间的关联关系。将一个表的字段与另一个表的主键或唯一约束关联起来</td><td>FOREIGN KEY</td></tr></tbody></table></div><p><strong>注意：</strong> 约束是作用于表中字段上的，可以在创建或修改表时添加约束</p><h2 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h2><blockquote><h3 id="根据需求，完成表结构的创建"><a href="#根据需求，完成表结构的创建" class="headerlink" title="根据需求，完成表结构的创建"></a>根据需求，完成表结构的创建</h3><p>字段名                字段含义                字段类型                约束条件                    约束关键字</p><p>id                        ID唯一标识            int                         主键且自增                  PRIMARY KEY,AUTO_INCREMENT</p><p>name                 姓名                       varchar(10)           不为空且唯一              NOT NULL,UNIQUE</p><p>age                    年龄                       int                         大于0且小于等于120   CHECK</p><p>status                状态                       char(1)                  没有指定值默认为1      DEFAULT    </p><p>sex                     性别                       char(1)                  无                                </p></blockquote><p>检查约束报错 - 其实已有心理准备，因为我使用的mysql版本为5.7</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717202824324.png" alt="image-20230717202824324"></p><p>既然如此，那就卸载5.7版安装8.0版</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718155918768.png" alt="image-20230718155918768"></p><p>又是表的编码格式报错，这里更改表的编码格式为utf8</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718160837230.png" alt="image-20230718160837230"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718161020566.png" alt="image-20230718161020566"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718161756916.png" alt="image-20230718161756916"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718161805957.png" alt="image-20230718161805957"></p><h2 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h2><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718221142880.png" alt="image-20230718221142880"></p><p><strong>添加外键</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段名 数据类型,</span><br><span class="line">    ...</span><br><span class="line">    [CONSTRNINT][外键名称] <span class="keyword">FOREIGN</span> KEY(外键字段名) <span class="keyword">REFERENCES</span> 主表(主表列名)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名);</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718223411844.png" alt="image-20230718223411844"></p><p>添加外键时报错</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718224156342.png" alt="image-20230718224156342"></p><blockquote><p>此处错误是因为子表中关联的字段dept_id的值在父表也就是dept中没有，建立外键约束必须保证关联子表中的字段值在父表中存在，这里是子表的dept_id值为1时父表没有与之对应的id值存在</p></blockquote><p>解决方案：将删除的行给加回来然后在执行外键约束</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718225236211.png" alt="image-20230718225236211"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718225318819.png" alt="image-20230718225318819"></p><p>删除外键</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718225526666.png" alt="image-20230718225526666"></p><h2 id="外键删除更新行为"><a href="#外键删除更新行为" class="headerlink" title="外键删除更新行为"></a>外键删除更新行为</h2><div class="table-container"><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTION</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。（与RESTRICT一致）</td></tr><tr><td>RESTRICT</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。（与NO ACTION一致）</td></tr><tr><td>CASCADE</td><td>当在父表中删除/更新记录时，首先检查该记录是否有对应外键，如果有则也删除/更新外键在子表中的记录</td></tr><tr><td>SET NULL</td><td>当在父表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（这就要求该外键允许为null）</td></tr><tr><td>SET DEFAULT</td><td>父表有变更时，子表将外键列设置成一个默认的值（Innodb不支持）</td></tr></tbody></table></div><p><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFRENCES 主表名(主表字段名) ON UPDATE CASCADE ON DELETE CASCAD;</code></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230718231752477.png" alt="image-20230718231752477"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;约束是&lt;u&gt;用于限制表中数据的规则或条件&lt;/u&gt;，确保数据的完整性和统一性&lt;/p&gt;
&lt;p&gt;常见约束类型如下：&lt;/p&gt;
&lt;div class=</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>函数</title>
    <link href="http://example.com/posts/6633.html"/>
    <id>http://example.com/posts/6633.html</id>
    <published>2023-10-12T02:16:00.000Z</published>
    <updated>2023-10-12T02:15:47.111Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717170923795.png" alt="image-20230717170923795"></p><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><p>MySQL中内置了很多字符串函数，常用的几个如下：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CONCAT(S1,S2,…Sn)</td><td>字符串拼接，将S1，S2,…Sn拼接成一个字符串</td></tr><tr><td>LOWER(str)</td><td>将字符串str全部转为小写</td></tr><tr><td>UPPER(str)</td><td>将字符串str全部转为大写</td></tr><tr><td>LPAD(str,n,pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>RPAD(str,n,pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>TRIM(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>SUBSTRING(str,start,len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table></div><p>更改下DataGrip的外观</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717171730990.png" alt="image-20230717171730990"></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717173319342.png" alt="image-20230717173319342"></p><blockquote><h3 id="根据需求完成如下SQL编写"><a href="#根据需求完成如下SQL编写" class="headerlink" title="根据需求完成如下SQL编写"></a>根据需求完成如下SQL编写</h3><p>由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如：1号员工的工号应该为00001</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717174542404.png" alt="image-20230717174542404"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717174420315.png" alt="image-20230717174420315"></p><h2 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h2><p>常见的数值函数如下：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CEIL(x)</td><td>向上取整</td></tr><tr><td>FLOOR(x)</td><td>向下取整</td></tr><tr><td>MOD(x,y)</td><td>返回x/y的模</td></tr><tr><td>RAND()</td><td>返回0~1内的随机数</td></tr><tr><td>ROUND(x,y)</td><td>求参数x的四舍五入的值，保留y位小数</td></tr></tbody></table></div><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717185509491.png" alt="image-20230717185509491"></p><blockquote><h3 id="根据需求完成如下SQL编写-1"><a href="#根据需求完成如下SQL编写-1" class="headerlink" title="根据需求完成如下SQL编写"></a>根据需求完成如下SQL编写</h3><p>通过数据库的函数，生成一个六位数的随机验证码</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717190316692.png" alt="image-20230717190316692"></p><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><p>常见的日期函数如下：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CURDAT()</td><td>返回当前日期</td></tr><tr><td>CURTIME()</td><td>返回当前时间</td></tr><tr><td>NOW()</td><td>返回当前日期和时间</td></tr><tr><td>YEAR(date)</td><td>获取指定date的年份</td></tr><tr><td>MONTH(date)</td><td>获取指定date的月份</td></tr><tr><td>DAY(date)</td><td>获取指定date的日期</td></tr><tr><td>DATE_ADD(date,INTERVAL expr type)</td><td>返回一个日期/时间值加上一个时间间隔expr后的时间值</td></tr><tr><td>DATEDIFF(date1,date2)</td><td>返回起始时间date1和结束时间date2之间的天数</td></tr></tbody></table></div><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717191507864.png" alt="image-20230717191507864"></p><blockquote><h3 id="根据需求完成如下SQL编写-2"><a href="#根据需求完成如下SQL编写-2" class="headerlink" title="根据需求完成如下SQL编写"></a>根据需求完成如下SQL编写</h3><p>查询所有员工的入职天数，并根据入职天数倒序排序</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717192140469.png" alt="image-20230717192140469"></p><h2 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h2><p>流程函数也是很常用的一类函数，可以在SQL语句中实现条件过滤，从而提供语句的效率</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>IF(value,t,f)</td><td>如果value为true，则返回t，否则返回f</td></tr><tr><td>IFNULL(value1,value2)</td><td>如果value1不为空，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN [val1] THEN [res1] … ELSE [default] END</td><td>如果val1为true，返回res1, … 否则返回default默认值</td></tr><tr><td>CASE [expr] WHEN [val1] THEN [res1] … ELES [default] END</td><td>如果expr的值等于val1，返回res1，… 否则返回default默认值</td></tr></tbody></table></div><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717193544637.png" alt="image-20230717193544637"></p><blockquote><h3 id="统计班级各个学员的成绩"><a href="#统计班级各个学员的成绩" class="headerlink" title="统计班级各个学员的成绩"></a>统计班级各个学员的成绩</h3><p>成绩 大于等于 85为优秀，成绩 大于等于 60为及格，否则为不及格</p></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717194503112.png" alt="image-20230717194503112"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717195128979.png" alt="image-20230717195128979"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;【图解】&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://mk-image-article.oss-cn-hangzhou.aliyunc</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL</title>
    <link href="http://example.com/posts/6632.html"/>
    <id>http://example.com/posts/6632.html</id>
    <published>2023-10-12T02:10:00.000Z</published>
    <updated>2023-10-12T02:09:56.078Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、SQL通用语法"><a href="#一、SQL通用语法" class="headerlink" title="一、SQL通用语法"></a>一、SQL通用语法</h2><ul><li>SQL语句单行或多行书写，以分号结尾</li><li>SQL语句可以使用空格/缩进来增强语句的可读性</li><li>MySQL数据库的SQL语句不区分大小写，关键字建议使用大写</li><li>注释<ul><li>单行注释：— 注释内容 或 # 注释内容（MySQL特有）</li><li>多行注释：/<em> 注释内容 </em>/ </li></ul></li></ul><h2 id="二、SQL分类"><a href="#二、SQL分类" class="headerlink" title="二、SQL分类"></a>二、SQL分类</h2><div class="table-container"><table><thead><tr><th style="text-align:center">分类</th><th style="text-align:center">全称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">DDL</td><td style="text-align:center">Data Definition Language</td><td style="text-align:center">数据定义语言，用来定义数据库对象（数据库、表、字段）。常见语句有CREATE、ALTER和DROP等</td></tr><tr><td style="text-align:center">DML</td><td style="text-align:center">Data Manipulation Language</td><td style="text-align:center">数据操作语言，用于对数据库中表的数据记录进行操作，包括插入、更新和删除数据。常见语句有INSERT、UPDATE和DELETE等</td></tr><tr><td style="text-align:center">DQL</td><td style="text-align:center">Data Query Language</td><td style="text-align:center">数据查询语言，用于查询数据库中的数据。SELECT语句可以根据条件过滤数据、排序数据、分组数据等</td></tr><tr><td style="text-align:center">DCL</td><td style="text-align:center">Data Control Language</td><td style="text-align:center">数据控制语言，用于控制数据库的访问权限和安全性。常见语句有GRANT和REVOKE等</td></tr></tbody></table></div><h2 id="三、DDL"><a href="#三、DDL" class="headerlink" title="三、DDL"></a>三、DDL</h2><p><strong>查询</strong></p><ul><li>查询所有数据库：<code>SHOW DATABASES;</code></li><li>查询当前数据库：<code>SELECT DATABASE();</code></li></ul><p><strong>创建</strong></p><ul><li><code>CREATE DATABASE [IF NOT EXISTS] 数据库名 [DEFAULT CHARSET 字符集] [COLLATE 排序规则];</code></li></ul><p><strong>删除</strong></p><ul><li><code>DROP DATABASE [IF EXSITS] 数据库名;</code></li></ul><p><strong>使用</strong></p><ul><li><code>USE 数据库名;</code></li></ul><p><strong>查询当前数据库所有表</strong></p><ul><li><code>SHOW TABLES;</code></li></ul><p><strong>查询表结构</strong></p><ul><li><code>DESC 表名;</code></li></ul><p><strong>查询指定表的建表语句</strong></p><ul><li><code>SHOW CREATE TABLE 表名;</code></li></ul><p><strong>添加字段</strong></p><p><code>ALTER TABLE 表名 ADD 字段名 类型(长度)[COMMENT注释][约束]</code></p><p><strong>修改数据类型</strong></p><p><code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code></p><p><strong>修改字段名和字段类型</strong></p><p><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度)[COMMENT 注释][约束];</code> </p><p><strong>删除字段</strong></p><p><code>ALTER TABLE 表名 DROP 字段名;</code></p><p><strong>修改表名</strong></p><p><code>ALTER TABLE 表名 RENAME TO 新表名;</code></p><p><strong>删除表</strong></p><p><code>DROP TABLE[IF EXISTS] 表名;</code></p><p><strong>删除指定表并重新创建该表</strong></p><p><code>TRUNCATE TABLE 表名;</code></p><p><strong>创建</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">字段<span class="number">1</span> 字段<span class="number">1</span>类型[COMMENT 字段<span class="number">1</span>注释],</span><br><span class="line">    字段<span class="number">2</span> 字段<span class="number">2</span>类型[COMMENT 字段<span class="number">2</span>注释],</span><br><span class="line">    字段<span class="number">3</span> 字段<span class="number">3</span>类型[COMMENT 字段<span class="number">3</span>注释],</span><br><span class="line">    ...</span><br><span class="line">    字段n 字段n类型[COMMENT 字段n注释]</span><br><span class="line">)[COMMENT 表注释];</span><br></pre></td></tr></table></figure><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230704202442658.png" alt="image-20230704202442658"></p><blockquote><h3 id="根据需求创建表（设计合理的数据类型、长度）"><a href="#根据需求创建表（设计合理的数据类型、长度）" class="headerlink" title="根据需求创建表（设计合理的数据类型、长度）"></a>根据需求创建表（设计合理的数据类型、长度）</h3><p>设计一张员工信息表，要求如下</p><ol><li>编号（纯数字）</li><li>员工工号（字符串类型，长度不超过10位）</li><li>员工姓名（字符串类型，长度不超过10位）</li><li>性别（男/女，存储一个汉字）</li><li>年龄（正常人年龄，不可能存储负数）</li><li>身份证号（二代身份证号均为18位，身份证中有X这样的字符）</li><li>入职时间（取值年月日即可）</li></ol></blockquote><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230712212739573.png" alt="image-20230712212739573"></p><blockquote><h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><ol><li>为emp增加一个新的字段”昵称”即nickname，类型为varchar(20)</li><li>将emp表的nickname字段修改为username,类型为varchar(30)</li><li>将emp表的字段username删除</li><li>将emp表的表名修改为employee</li></ol></blockquote><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230713212941479.png" alt="image-20230713212941479"></p><p>  <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230713213445629.png" alt="image-20230713213445629"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230713213536879.png" alt="image-20230713213536879"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>分为数据库操作和表操作</p><h2 id="四、DML"><a href="#四、DML" class="headerlink" title="四、DML"></a>四、DML</h2><h3 id="添加数据（INSERT）"><a href="#添加数据（INSERT）" class="headerlink" title="添加数据（INSERT）"></a>添加数据（INSERT）</h3><p><strong>给指定字段添加数据</strong></p><p><code>INSERT INTO 表名(字段名1, 字段名2, ...) VALUES(值1,值2,...);</code></p><p><strong>给全部字段添加数据</strong></p><p><code>INSERT INTO 表名 VALUES(值1,值2,...);</code></p><p><strong>批量添加数据</strong></p><p><code>INSERT INTO 表名(字段名1,字段名2,...) VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</code></p><p><code>INSERT INTO 表名 VALUES(值1,值2,...),(值1,值2,...),(值1,值2,...);</code></p><p><strong>注意：</strong></p><ul><li>插入数据时，指定的字段顺序需要与值的顺序是一一对应的</li><li>字符串和日期型数据应该包含在引号中</li><li>插入的数据大小，应该在字段的规定范围内</li></ul><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716120141997.png" alt="image-20230716120141997"></p><p>更改表的编码格式为utf8</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716121320050.png" alt="image-20230716121320050"></p><p>超出字段范围</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716121637293.png" alt="image-20230716121637293"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716122323370.png" alt="image-20230716122323370"></p><h3 id="修改数据（UPDATE）"><a href="#修改数据（UPDATE）" class="headerlink" title="修改数据（UPDATE）"></a>修改数据（UPDATE）</h3><p><code>UPDATE 表名 SET 字段名1=值1,字段名2=值2,...[WHERE 条件];</code></p><p><strong>注意：</strong> 修改语句的条件可以有，也可以没有，如果没有条件，则修改整张表的所有数据</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716151825688.png" alt="image-20230716151825688"></p><h3 id="删除数据（DELETE"><a href="#删除数据（DELETE" class="headerlink" title="删除数据（DELETE)"></a>删除数据（DELETE)</h3><p><code>DELETE FROM 表名[WHERE 条件];</code></p><p><strong>注意：</strong> DELETE语句的条件可以有，也可以没有，如果没有，则会删除整张表的所有数据；DELETE语句不能删除某一个字段的值（可以使用UPDATE）</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716152553280.png" alt="image-20230716152553280"></p><h2 id="五、DQL"><a href="#五、DQL" class="headerlink" title="五、DQL"></a>五、DQL</h2><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716155531060.png" alt="image-20230716155531060"></p><h3 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h3><p><strong>查询多个字段</strong></p><p><code>SELECT 字段1,字段2,字段3... FROM 表名;</code></p><p><code>SELECT * FROM 表名;</code></p><p><strong>设置别名</strong></p><p><code>SELECT 字段1 [AS 别名1],字段2 [AS 别名2]... FROM 表名;</code></p><p><strong>去除重复记录</strong></p><p><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716162627810.png" alt="image-20230716162627810"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716162854515.png" alt="image-20230716162854515"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716163259094.png" alt="image-20230716163259094"></p><p>查询去重</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716163601392.png" alt="image-20230716163601392"></p><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><p><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p><div class="table-container"><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !=</td><td>不等于</td></tr><tr><td>BETWEEN … AND …</td><td>在某个范围之内（含最小、最大值）</td></tr><tr><td>IN(…)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>LIKE 占位符</td><td>模糊匹配（_匹配单个字符，%匹配任意个字符）</td></tr><tr><td>IS NULL</td><td>是NULL</td></tr></tbody></table></div><div class="table-container"><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND 或 &amp;&amp;</td><td>并且（多个条件同时成立）</td></tr><tr><td>OR 或 \</td><td>\</td><td></td><td>或者（多个条件任意一个成立）</td></tr><tr><td>NOT 或 ！</td><td>非，不是</td></tr></tbody></table></div><p>【实践图】</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 条件查询</span></span><br><span class="line"><span class="comment">-- 1. 查询年龄等于 88 的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">88</span>;</span><br><span class="line"><span class="comment">-- 2. 查询年龄小于 20 的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 3. 查询年龄小于等于 20 的员工</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.查询没有身份证号的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 5. 查询有身份证号的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 6.查询年龄不等于88的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">!=</span> <span class="number">88</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&lt;&gt;</span> <span class="number">88</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7. 查询年龄在15岁（包含）到20岁（包含）之间的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">15</span> <span class="operator">&amp;&amp;</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">&gt;=</span> <span class="number">15</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">15</span> <span class="keyword">and</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 8. 查询性别为 女 且 年龄小于 25岁的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> <span class="keyword">and</span> age <span class="operator">&lt;=</span> <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 9. 查询年龄等于18 或 20 或 40 的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="operator">=</span> <span class="number">18</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">20</span> <span class="keyword">or</span> age <span class="operator">=</span> <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> age <span class="keyword">in</span>(<span class="number">18</span>,<span class="number">20</span>,<span class="number">40</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 10. 查询姓名为两个字的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;__&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 11. 查询身份证最后一位是X的员工信息</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> idcard <span class="keyword">like</span> <span class="string">&#x27;%X&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716170419800.png" alt="image-20230716170419800"></p><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><p>聚合函数用于对数据进行计算和汇总</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th><th>举例</th></tr></thead><tbody><tr><td>COUNT</td><td>计算指定列或行的数量</td><td>SELECT COUNT(*) FROM table_name;</td></tr><tr><td>SUM</td><td>计算指定列的总和</td><td>SELECT SUM(column_name) FROM table_name;</td></tr><tr><td>AVG</td><td>计算指定列的平均值</td><td>SELECT AVG(column_name) FROM table_name;</td></tr><tr><td>MAX</td><td>找到指定列的最大值</td><td>SELECT MAX(column_name) FROM table_name;</td></tr><tr><td>MIN</td><td>找到指定列的最小值</td><td>SELECT MIN(column_name) FROM table_name;</td></tr><tr><td>GROUP</td><td>将指定列的值连接成一个字符</td><td>SELECT GROUP_COUNT(column_name) FROM table_name;</td></tr></tbody></table></div><p><code>SELECT 聚会函数(字段列表) FROM 表名;</code></p><p><strong>注意：</strong> null不参与所有聚合函数运算</p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716172019259.png" alt="image-20230716172019259"></p><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p><code>SELECT 字段列表 FROM 表名 [WHERE 条件] GROUP BY 分组字段名 [HAVING 分组后过滤条件];</code></p><blockquote><p>where 与 having 区别</p><ol><li>执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后对结果进行过滤</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以</li></ol></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716173358604.png" alt="image-20230716173358604"></p><p><strong>注意：</strong> 执行顺序：where &gt; 聚合函数 &gt; having，分组之后，查询的字段一般为聚合函数或分组字段，查询其他字段无任何意义</p><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><p><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式, 字段2 排序方式2;</code></p><p><strong>说明：</strong> 默认为升序排序即ASC，也可以降序排序DESC</p><p><strong>注意：</strong> 如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716210231328.png" alt="image-20230716210231328"></p><h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p><code>SELECT 字段列表 FROM 表名 LIMIT 起始索引,查询记录数;</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716210939381.png" alt="image-20230716210939381"></p><p><strong>注意：</strong> </p><ul><li><p>起始索引从0开始，起始索引 = （查询页码 - 1）* 每页显示记录数</p></li><li><p>分页查询是数据库的方言，不同的数据库有不同的实现，MySQL中是LIMIT</p></li><li>如果查询的是第一页数据，起始索引可以省略，直接简写为 limit 10</li></ul><h3 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h3><blockquote><h3 id="按要求完成如下DQL语句编写"><a href="#按要求完成如下DQL语句编写" class="headerlink" title="按要求完成如下DQL语句编写"></a>按要求完成如下DQL语句编写</h3><ol><li>查询年龄为20，21，22，23岁的员工信息</li><li>查询性别为男，且年龄在20-40岁（含）以内的姓名为三个字的员工</li><li>统计员工表中，年龄小于60岁的，男性员工和女性员工的人数</li><li>查询所有年龄小于等于35岁员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按入职时间降序排序</li><li>查询性别为男，且年龄再20-40岁（含）以内的前5个员工信息，对查询的结果按年龄升序排序，年龄相同的按入职时间升序排序</li></ol></blockquote><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716213636876.png" alt="image-20230716213636876"></p><p>【图解 编写顺序 - 执行顺序】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716214505861.png" alt="image-20230716214505861"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716215121693.png" alt="image-20230716215121693"></p><h2 id="六、DCL"><a href="#六、DCL" class="headerlink" title="六、DCL"></a>六、DCL</h2><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p><strong>查询用户</strong></p><p><code>USE mysql;SELECT * FROM user;</code></p><p><strong>创建用户</strong></p><p><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p><p><strong>修改用户密码</strong></p><p><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p><p><strong>删除用户</strong></p><p><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716221401550.png" alt="image-20230716221401550"></p><p><strong>注意：</strong> 主机名可以使用%通配，这类SQL开发人员操作的比较少，主要是DBA（Database Administrator 数据库管理员）使用</p><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>MySQL定义了很多种权限，但常用的就以下几种：</p><div class="table-container"><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL，ALL PRIVILEGES</td><td>所有权限</td></tr><tr><td>SELECT</td><td>查询数据</td></tr><tr><td>INSERT</td><td>插入数据</td></tr><tr><td>UPDATE</td><td>修改数据</td></tr><tr><td>DELETE</td><td>删除数据</td></tr><tr><td>ALTER</td><td>修改表</td></tr><tr><td>DROP</td><td>删除数据库/表/视图</td></tr><tr><td>CREATE</td><td>创建数据库/表</td></tr></tbody></table></div><p>其他权限描述及含义，可直接参考官方文档：<a href="https://dev.mysql.com/doc">https://dev.mysql.com/doc</a>；5.7版官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en">https://dev.mysql.com/doc/refman/5.7/en</a>，8.0版官方文档：<a href="https://dev.mysql.com/doc/refman/8.0/en">https://dev.mysql.com/doc/refman/8.0/en</a></p><p><strong>查询权限</strong></p><p><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p><strong>授予权限</strong></p><p><code>GRANT 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p><strong>撤销权限</strong></p><p><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>【实践图】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717152542625.png" alt="image-20230717152542625"></p><p>授予权限报错</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717154632394.png" alt="image-20230717154632394"></p><p><strong>排错过程</strong></p><p>第一步 将授权的权限打开，然后重新加载并刷新权限表</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717161705785.png" alt="image-20230717161705785"></p><p>第二步 重启mysql服务，以管理员身份打开命令行运行</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717161802317.png" alt="image-20230717161802317"></p><p>第三步 重新执行授权语句</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717161935610.png" alt="image-20230717161935610"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717162132530.png" alt="image-20230717162132530"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717162253361.png" alt="image-20230717162253361"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230717162345655.png" alt="image-20230717162345655"></p><p><strong>注意：</strong> 多个权限之间使用逗号分隔；授权时，数据库名和表名可以使用*进行通配，代表所有</p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>用户管理：主要用来管理哪些用户可以访问mysql数据库</p><p>权限控制：用来控制当前用户连接上mysql之后可以访问哪些数据库哪些表，可以对数据库对象（数据库、表、字段）执行什么样的操作</p><h2 id="七、数据类型"><a href="#七、数据类型" class="headerlink" title="七、数据类型"></a>七、数据类型</h2><ul><li>MySQL中有多种数据类型可用于定义表中的列，主要包括以下五大类：<ul><li>整数类型：TINYINT、INT、BIGINT</li><li>浮点数类型：FLOAT、DOUBLE、DECIMAL</li><li>字符串类型：CHAR、VARCHAR、TEXT</li><li>日期类型：DATE、TIME、DATETIME、TIMESTAMP</li><li>其他类型：BOOLEAN、BLOB</li></ul></li></ul><div class="table-container"><table><thead><tr><th>类型</th><th>大小</th><th>有符合（SIGNED）范围</th><th>无符号（UNSIGNED）范围</th><th>描述</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 byte</td><td>(-128,127)</td><td>(0,255)</td><td>小整数值</td></tr><tr><td>INT</td><td>4 bytes</td><td>(-2^31,2^31-1)</td><td>(0,2^32-1)</td><td>整数值</td></tr><tr><td>BIGINT</td><td>8 bytes</td><td>(-2^63,2^63-1)</td><td>(0,2^64-1)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 bytes</td><td></td><td></td><td>单精度浮点数</td></tr><tr><td>DOUBLE</td><td>8 bytes</td><td></td><td></td><td>双精度浮点数</td></tr><tr><td>DECIMAL</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr><tr><td>CHAR</td><td>0-255 bytes</td><td></td><td></td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td></td><td></td><td>变长字符串</td></tr><tr><td>TEXT</td><td>0-65535 bytes</td><td></td><td></td><td>长文本数据</td></tr></tbody></table></div><p>注：CHAR(1)数据类型表示一个固定长度为1个字符的字符串</p><div class="table-container"><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3 bytes</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3 bytes</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>DATETIME</td><td>8 bytes</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4 bytes</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr><tr><td>BLOB</td><td>0-65535 bytes</td><td></td><td></td><td>二进制字符串，可以用于存储图像、音频、视频等任意二进制数据</td></tr></tbody></table></div><blockquote><p>在MySQL中并没有布尔数据类型，即不支持boolean类型，因而采用TINYINT(1)或ENUM(‘0’, ‘1’)来表示布尔值，其中1对应true，0则对应false</p></blockquote><h2 id="八、MySQL图形化界面工具"><a href="#八、MySQL图形化界面工具" class="headerlink" title="八、MySQL图形化界面工具"></a>八、MySQL图形化界面工具</h2><p>之前一直使用Navicat作为MySQL的图形化界面工具，而黑马课程主要以DataGrip作为MySQL图形化界面工具作为演示，<u>正好借这次机会熟悉下DataGrip的使用，毕竟技多不压身</u></p><h3 id="DataGrip简介"><a href="#DataGrip简介" class="headerlink" title="DataGrip简介"></a>DataGrip简介</h3><blockquote><p>DataGrip是一种功能强大的数据库集成开发环境（IDE），由JetBrains公司开发。旨在提供一个统一的界面，用于管理和开发各种类型的数据库，包括关系型数据库（如MySQL、PostgreSQL、Oracle、SQL Server等）和NoSQL数据库（如MongoDB、Cassandra等）。</p><p>DataGrip具有许多强大的功能，使得数据库开发变得更加高效和方便。以下是一些主要特点：</p><ol><li><p>多数据库支持：DataGrip支持多种类型的数据库，使得开发人员可以在一个工具中管理和查询不同类型的数据库。</p></li><li><p>数据库导航：DataGrip提供了一个直观的界面，用于浏览和导航数据库对象，如表、视图、存储过程等。开发人员可以快速找到并编辑所需的数据库对象。</p></li><li><p>SQL编辑器：DataGrip内置了一个强大的SQL编辑器，具有语法高亮、代码补全、代码导航等功能。开发人员可以轻松地编写和调试复杂的SQL查询。</p></li><li><p>数据库管理：DataGrip提供了一套全面的数据库管理工具，包括表格和索引的创建和修改、数据导入和导出、数据库备份和恢复等。</p></li><li><p>数据查询和可视化：DataGrip支持高级的数据查询和可视化功能，可以轻松地执行复杂的查询操作，并将结果以表格、图表等形式展示。</p></li><li><p>版本控制集成：DataGrip集成了常用的版本控制系统，如Git，使得开发人员可以方便地管理和跟踪数据库脚本的变更。</p></li></ol><p>总的来说，DataGrip是一个功能强大的数据库开发工具，可以帮助开发人员更高效地管理和开发各种类型的数据库。无论是初学者还是经验丰富的数据库开发人员，都可以从DataGrip的各种功能和工具中受益。</p></blockquote><h3 id="DataGrip安装及激活"><a href="#DataGrip安装及激活" class="headerlink" title="DataGrip安装及激活"></a>DataGrip安装及激活</h3><p>官方最新版本: <a href="https://www.jetbrains.com/datagrip/download/#section=windows">https://www.jetbrains.com/datagrip/download/#section=windows</a></p><p>官方其他版本：<a href="https://www.jetbrains.com/datagrip/download/other.html">https://www.jetbrains.com/datagrip/download/other.html</a></p><p><strong>第一步  安装</strong></p><p>这里选择2022.2.1版本进行安装使用</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714220423682.png" alt="image-20230714220423682"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714212000179.png" alt="image-20230714212000179"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714220906265.png" alt="image-20230714220906265"></p><p><strong>第二步 激活</strong></p><p>双击运行脚本install-all-users.vbs</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714222615375.png" alt="image-20230714222615375"></p><p>会提示安装补丁需要等待数秒。点击【确定】按钮后，过程大概 10 - 30 秒，如看到弹框提示 <code>Done</code> 时，表示激活破解成功</p><p>  <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714221601567.png" alt="image-20230714221601567"></p><p>启动JetBrains产品，许可证激活选择激活码方式(Activate code)，获取激活码<a href="https://3.jetbra.in">https://3.jetbra.in</a> ，可用站点需要具备使用Google搜索引擎的网络</p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714222927954.png" alt="image-20230714222927954"></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714223138876.png" alt="image-20230714223138876"></p><h3 id="DataGrip初使用"><a href="#DataGrip初使用" class="headerlink" title="DataGrip初使用"></a>DataGrip初使用</h3><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714223417991.png" alt="image-20230714223417991"></p><p>默认新建项目放在C盘，所以这里设置文件路径<code>D:\DataGrip\DataGripProjects\mysql-base</code></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714224059661.png" alt="image-20230714224059661"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714224139485.png" alt="image-20230714224139485"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714224237640.png" alt="image-20230714224237640"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714231011781.png" alt="image-20230714231011781"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230714231036560.png" alt="image-20230714231036560"></p><p>删除无用数据库，然后创建数据库创建表并修改表，部分效果图如下</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716113942561.png" alt="image-20230716113942561"></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230716114050425.png" alt="image-20230716114050425"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、SQL通用语法&quot;&gt;&lt;a href=&quot;#一、SQL通用语法&quot; class=&quot;headerlink&quot; title=&quot;一、SQL通用语法&quot;&gt;&lt;/a&gt;一、SQL通用语法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;SQL语句单行或多行书写，以分号结尾&lt;/li&gt;
&lt;li&gt;SQL语句可以使</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL基础篇</title>
    <link href="http://example.com/posts/6631.html"/>
    <id>http://example.com/posts/6631.html</id>
    <published>2023-10-11T13:28:00.000Z</published>
    <updated>2023-10-11T13:35:05.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL概述"><a href="#MySQL概述" class="headerlink" title="MySQL概述"></a>MySQL概述</h2><h3 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h3><ul><li><p>数据库是用来存储数据的仓库，通常分为<font color=#008c8c>关系型数据库</font>和<font color=#008c8c>非关系型数据库</font></p></li><li><p>数据库管理系统使用户能够有效建立、使用和维护数据库，<font color=#9932CD>是一种操纵和管理数据库的大型软件</font></p></li><li><p>MySQL是一个开源的小型关系型数据库管理系统，其体积小、速度快、成本低等特性使得它成为世界上最受欢迎的开发源代码数据库</p></li><li>SQL(Structured Query Language)是用于访问和操作数据库中的数据的<font color=#008c8c>标准数据库编程语言</font></li></ul><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230703224602730.png" alt="image-20230703224602730"></p><ul><li><p>主流关系型数据库管理系统</p><ul><li><p><a href="https://db-engines.com/en/ranking">DB-Engines Ranking</a> 会根据受欢迎程度对数据库管理系统进行排名，排名每月更新一次</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230703225643021.png" alt="数据库排名"></p></li><li><p>虽然关系型数据库有很多，但大多数都遵循 SQL（结构化查询语言，Structured Query Language）标准即<font color=#9932CD>可通过SQL进行操作</font></p></li></ul></li></ul><h3 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h3><ul><li>MySQL 数据库有社区版和企业版之分</li><li>社区版：开源免费，但不提供官方技术支持</li><li>企业版：收费，可试用30天，官方提供技术支持</li><li><p>MySQL下载</p><ul><li>来到官网所提供的<a href="https://dev.mysql.com/downloads">下载页</a>，找到对应操作系统的版本<br><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230704104103424.png" alt="MySQL下载"></li><li>如果操作系统为Windows，则下载地址为<a href="https://dev.mysql.com/downloads/installer">https://dev.mysql.com/downloads/installer</a></li></ul></li><li><p>客户端连接</p><ul><li>方式一：使用MySQL提供的命令行客户端来连接</li><li>方式二：使用系统自带的命令行终端来连接<ul><li><strong>注意：</strong> 使用这种方式需要配置PATH环境变量</li><li>输入命令<code>mysql [-h 127.0.0.1] [-P 3306] -u用户名 -p密码</code><br><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230704113509442.png" alt="image-20230704113509442"></li></ul></li></ul></li><li><p>关系型数据库是一种基于<font color=#008c8c>关系模型</font>的数据库。它以<font color=#008c8c>表格的形式</font>组织和存储数据，并使用<font color=#008c8c>关系</font>（即表之间的连接）来表示不同表之间的关联关系</p></li></ul><p><strong>数据模型</strong></p><p>【图解】</p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230704161824807.png" alt="数据模型图解"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MySQL概述&quot;&gt;&lt;a href=&quot;#MySQL概述&quot; class=&quot;headerlink&quot; title=&quot;MySQL概述&quot;&gt;&lt;/a&gt;MySQL概述&lt;/h2&gt;&lt;h3 id=&quot;数据库相关概念&quot;&gt;&lt;a href=&quot;#数据库相关概念&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL导学</title>
    <link href="http://example.com/posts/6630.html"/>
    <id>http://example.com/posts/6630.html</id>
    <published>2023-10-11T13:25:00.000Z</published>
    <updated>2023-10-11T13:34:58.355Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h2><ul><li><p>事务及事务四大特性</p></li><li><p>事务隔离级别</p></li><li><p>内连接与左外连接区别</p></li><li><p>常用的存储引擎InnoDB与MyISAM的区别</p></li><li><p>如何查看MySQL的执行计划</p><p>……</p></li></ul><h2 id="学习大纲"><a href="#学习大纲" class="headerlink" title="学习大纲"></a>学习大纲</h2><p><strong>基础篇</strong></p><ul><li>MySQL概述</li><li>SQL</li><li>函数</li><li>约束</li><li>多表查询</li><li>事务</li></ul><p><strong>进阶篇</strong></p><ul><li>存储引擎</li><li>索引</li><li>SQL优化</li><li>视图、存储过程、触发器</li><li>锁</li><li>InnoDB核心</li><li>MySQL管理</li></ul><p><strong>运维篇</strong></p><ul><li>日志</li><li>主从复制</li><li>分库分表</li><li>读写分离</li></ul><h2 id="课程资源"><a href="#课程资源" class="headerlink" title="课程资源"></a>课程资源</h2><p><strong>在线观看：</strong> <a href="https://www.bilibili.com/video/BV1Kr4y1i7ru">https://www.bilibili.com/video/BV1Kr4y1i7ru</a></p><p><strong>配套资源：</strong> <a href="https://pan.baidu.com/s/1B_m-1tY6Ai7U9I2ZIvcWQg?pwd=9988">https://pan.baidu.com/s/1B_m-1tY6Ai7U9I2ZIvcWQg?pwd=9988</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面试题&quot;&gt;&lt;a href=&quot;#面试题&quot; class=&quot;headerlink&quot; title=&quot;面试题&quot;&gt;&lt;/a&gt;面试题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;事务及事务四大特性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事务隔离级别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;内连接与左外</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>从键入网址到页面显示，期间发生了什么？</title>
    <link href="http://example.com/posts/6531.html"/>
    <id>http://example.com/posts/6531.html</id>
    <published>2023-10-11T10:33:00.000Z</published>
    <updated>2023-10-11T10:56:17.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对<a href="https://xiaolincoding.com/network/1_base/what_happen_url.html">小林coding</a>的这篇文章进行了自己整理，大佬文章非常棒，效率效果俱佳，我是一遍看完，真学习到了</p><h2 id="简单的网络拓扑图"><a href="#简单的网络拓扑图" class="headerlink" title="简单的网络拓扑图"></a>简单的网络拓扑图</h2><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011111003439.png" alt="image-20231011111003439"></p><h2 id="第一步-请求消息"><a href="#第一步-请求消息" class="headerlink" title="第一步 - 请求消息"></a>第一步 - 请求消息</h2><p><strong>解析URL</strong>，浏览器首先要对URL进行解析，从而生成发送给Web服务器的请求信息</p><p>URL组成部分如下</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/URL%E7%BB%84%E6%88%90.png" alt="URL组成"></p><p><u>图中长长的 URL 实际上是在请求服务器中指定的文件资源</u></p><p>当没有路径名时，就表示访问根目录下事先设置的<strong>默认文件</strong>，也就是 <code>/index.html</code> 或者 <code>/default.html</code> 这些文件，这样就不会发生混乱了</p><p>对 <code>URL</code> 进行解析之后，浏览器确定了 Web 服务器和文件资源路径，接下来就是<strong>根据这些信息来生成 HTTP 请求消息</strong>了</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/request-and-response.png" alt="request-and-response"></p><p>就这样请求消息有了，它该如何踏上浩瀚的网络，又如何到达目的地呢？</p><h2 id="第二步-DNS"><a href="#第二步-DNS" class="headerlink" title="第二步 - DNS"></a>第二步 - DNS</h2><p>在有了请求消息，就需要委托操作系统将消息发送给Web服务器</p><p>在发送前，需要完成<strong>通过查询服务器域名找到对应的IP地址</strong>，这是因为委托操作系统发送消息时（不同设备上的进程进行通信），需要知道通信对象的IP地址</p><p>IP地址和服务器域名存在映射关系，即一一对应关系，而对于这种关系，就会有专门服务器对这种信息进行保存，它就是<code>DNS</code>服务器</p><p><u>域名是有层级关系的，用点来分隔</u>，比如 <code>www.server.com</code></p><blockquote><p>因为域名是老外发明的，其思维和中国人相反，比如说一个城市地点的时候，外国喜欢按从小到大的顺序说起（如 XX 街道 XX 区 XX 市 XX 省），而中国则喜欢从大到小的顺序（如 XX 省 XX 市 XX 区 XX 街道）</p></blockquote><p>实际上域名最后还有一个点，比如 <code>www.server.com.</code>，这个最后一个点代表根域名。<code>.</code> 根域是在最顶层，它的下一层就是 <code>.com</code> 顶级域，再下面是 <code>server.com</code></p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011113419653.png" alt="image-20231011113419653"></p><p>根域的 DNS 服务器信息保存在互联网中所有的 DNS 服务器中，这样一来，任何 DNS 服务器就都可以找到并访问根域 DNS 服务器了</p><p>域名解析流程如下：</p><ol><li>客户端发出了DNS请求（询问<code>www.server.com</code>的IP），这个请求会发给本地DNS服务器（也就是客户端的TCP/IP设置中填写的DNS服务器地址）</li><li>本地DNS服务器收到请求后，会从缓存里找<code>www.server.com</code>，如果有直接返回IP地址，没有则会去问根域名服务器，<u>根域名服务器是最高层次的，不直接用于域名解析，但会指明一条道路</u></li><li>根域名服务器可以指向顶级域名服务器，所以在发现是.com后就把.com<strong>顶级域名服务器地址发给你</strong></li><li>本地DNS服务器知道地址后，就问顶级域名服务器：<code>www.server.com</code>的IP地址</li><li>顶级域名服务器说，我给你负责<code>www.server.com</code>区域的权威DNS服务器地址，你找它就知道了</li><li>本地DNS服务器就转向问权威DNS服务器，<code>www.server.com</code>的IP是啥？因为是专门负责本区域域名解析，所以知道域名对应的IP</li><li>权威DNS服务器查询后将对应IP地址告诉了本地DNS服务器</li><li>本地DNS服务器在将IP地址返回给客户端，客户端和目标建立连接</li></ol><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/DNS%E8%A7%A3%E6%9E%90.png" alt="DNS解析"></p><p>DNS 域名解析的过程蛮有意思的，整个过程就和日常生活中找人问路类似，<strong>只指路不带路</strong></p><p>是不是每次都要这么麻烦了，非也，有缓存嘛</p><blockquote><p>浏览器会先看自身有没有对这个域名的缓存，如果有，就直接返回，如果没有，就去问操作系统，操作系统也会去看自己的缓存，如果有，就直接返回，如果没有，再去 hosts 文件看，也没有，才会去问「本地 DNS 服务器」</p></blockquote><p>有了请求消息，有了目的地，那接下来该如何走，是全凭直觉还是请专人帮忙？</p><h2 id="第三步-协议栈"><a href="#第三步-协议栈" class="headerlink" title="第三步 - 协议栈"></a>第三步 - 协议栈</h2><p>通过 DNS 获取到 IP 后，就可以<u>把 请求消息 的传输工作</u>交给操作系统中的<strong>协议栈</strong></p><blockquote><p>应用程序（浏览器）通过调用 Socket 库，来委托协议栈工作</p></blockquote><p>协议栈的内部分为几个部分，分别承担不同的工作。上下关系是有一定的规则的，上面的部分会向下面的部分委托工作，下面的部分收到委托的工作并执行</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/%E5%8D%8F%E8%AE%AE%E6%A0%88.png" alt="协议栈"></p><p>协议栈的上半部分有两块，分别是负责收发数据的 TCP 和 UDP 协议，<u>这两个传输协议会接受应用层的委托执行收发数据的操作</u></p><p>协议栈的下面一半是用 IP 协议控制网络包收发操作，在互联网上传数据时，数据会被切分成一块块的网络包，而将网络包发送给对方的操作就是由 IP 负责的</p><p>此外 IP协议 中还包括 <code>ICMP</code> 协议和 <code>ARP</code> 协议</p><ul><li><code>ICMP</code> 用于告知网络包传送过程中产生的错误以及各种控制信息</li><li><code>ARP</code> 用于根据 IP 地址查询相应的以太网 MAC 地址</li></ul><p>协议栈下面的网卡驱动程序负责<strong>控制网卡硬件</strong>，而最下面的<u>网卡则负责完成实际的收发操作</u>，也就是对网线中的信号执行发送和接收操作</p><p>在看完这份指南后，请求消息知道了要先去找传输层大佬了</p><h2 id="第四步-TCP"><a href="#第四步-TCP" class="headerlink" title="第四步 - TCP"></a>第四步 - TCP</h2><p>先看看 TCP 报文头部的格式</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/TCP%E5%A4%B4%E9%83%A8.png" alt="TCP头部"></p><p>首先，<strong>源端口号</strong>和<strong>目标端口</strong>号是不可少的，如果没有这两个端口号，数据就不知道从哪个应用发给哪个应用了</p><p>接下来有包的<strong>序</strong>号，这个是为了解决包乱序的问题</p><p>还有应该有的是<strong>确认号</strong>，目的是确认发出去对方是否有收到。如果没有收到就应该重新发送，直到送达，这个是为了解决丢包的问题</p><p>接下来还有一些<strong>状态位</strong>。例如 <code>SYN</code> 是发起一个连接，<code>ACK</code> 是回复，<code>RST</code> 是重新连接，<code>FIN</code> 是结束连接等。TCP 是面向连接的，因而双方要维护连接的状态，这些带状态位的包的发送，会引起双方的状态变更</p><p>还有一个重要的就是<strong>窗口大小</strong>。TCP 要做<strong>流量控制</strong>，通信双方各声明一个窗口（缓存大小），标识自己当前能够的处理能力，别发送的太快，撑死我，也别发的太慢，饿死我</p><p>除了做流量控制以外，TCP还会做<strong>拥塞控制</strong>，对于真正的通路堵车不堵车，它无能为力，唯一能做的就是控制自己，也即控制发送的速度。不能改变世界，就改变自己嘛</p><p><strong>TCP 传输数据之前，要先三次握手建立连接</strong></p><p>在传输数据之前，首先需要 TCP 建立连接，TCP 连接的建立，通常称为<strong>三次握手</strong></p><p>这个所谓的「连接」，只是双方计算机里维护一个状态机</p><p>在连接建立的过程中，<strong>双方的状态变化</strong>时序图就像这样</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011144318786.png" alt="image-20231011144318786"></p><p>一开始，客户端和服务端都处于 <code>CLOSED</code> 状态。先是服务端主动监听某个端口，处于 <code>LISTEN</code> 状态</p><p>然后客户端主动发起连接 <code>SYN</code>，之后处于 <code>SYN-SENT</code> 状态</p><p>服务端收到发起的连接，返回 <code>SYN</code>和 <code>ACK</code> 之后服务端就处于 <code>SYN-RCVD</code> 状态</p><p>客户端收到服务端发送的 <code>SYN</code> 和 <code>ACK</code> 之后，发送对 <code>SYN</code> 确认的 <code>ACK</code>，之后处于 <code>ESTABLISHED</code> 状态，因为它一发一收成功了</p><p>服务端收到 <code>ACK</code> 的 <code>ACK</code> 之后，处于 <code>ESTABLISHED</code> 状态，因为它也一发一收了</p><p>所以三次握手目的是<strong>保证双方都有发送和接收的能力</strong></p><p>请回答TCP是如何保证可靠传输的？</p><blockquote><p>可通过以下几部分进行保证：</p><ol><li>确认和重传</li><li>数据校验</li><li>数据合理分片和排序</li><li>流量控制</li><li>拥塞控制</li></ol></blockquote><p>TCP 的连接状态查看，在 Linux 可以通过 <code>netstat -napt</code> 命令查看</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011150731752.png" alt="image-20231011150731752"></p><h3 id="TCP-分割数据"><a href="#TCP-分割数据" class="headerlink" title="TCP 分割数据"></a>TCP 分割数据</h3><blockquote><p>如果 HTTP 请求消息比较长，超过了 <code>MSS</code> 的长度，这时 TCP 就需要把 HTTP 的数据拆解成一块块的数据发送，而不是一次性发送所有数据</p></blockquote><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011150840151.png" alt="image-20231011150840151"></p><p>数据会被以 <code>MSS</code> 的长度为单位进行拆分，拆分出来的每一块数据都会被放进单独的网络包中。也就是在每个被拆分的数据加上 TCP 头信息，然后交给 IP 模块来发送数据</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011151026218.png" alt="image-20231011151026218"></p><h3 id="TCP-报文生成"><a href="#TCP-报文生成" class="headerlink" title="TCP 报文生成"></a>TCP 报文生成</h3><p>TCP 协议里面会有两个端口，一个是浏览器监听的端口（通常是随机生成的），一个是 Web 服务器监听的端口（HTTP 默认端口号是 <code>80</code>， HTTPS 默认端口号是 <code>443</code>）</p><p>在双方建立了连接后，TCP 报文中的数据部分就是存放 HTTP 头部 + 数据，组装好 TCP 报文之后，就需交给下面的网络层处理</p><p>至此，网络包的报文如下图</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/%E7%BD%91%E7%BB%9C%E5%8C%85.png" alt="网络包"></p><p>此时请求消息在有了可靠的TCP传输保驾护航（给请求消息加上TCP头部），那下一步又该何去何从呢？</p><h2 id="第五步-IP"><a href="#第五步-IP" class="headerlink" title="第五步 - IP"></a>第五步 - IP</h2><p>TCP 模块在执行连接、收发、断开等各阶段操作时，都需要<u>委托 IP 模块</u>将数据封装成<strong>网络包</strong>发送给通信对象</p><p> IP 报文头部的格式</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/IP%E6%8A%A5%E6%96%87%E5%A4%B4%E9%83%A8.png" alt="IP报文头部"></p><p>在 IP 协议里面需要有<strong>源地址 IP</strong> 和 <strong>目标地址 IP</strong></p><p>因为 HTTP 是经过 TCP 传输的，所以在 IP 包头的<strong>协议号</strong>，要填写为 <code>06</code>（十六进制），表示协议为 TCP</p><p>假设客户端有<strong>多个网卡</strong>，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？</p><blockquote><p>当存在多个网卡时，在填写源地址 IP 时，就需要判断到底应该填写哪个地址。这个判断相当于在多块网卡中判断应该使用哪个一块网卡来发送包</p><p>这个时候就需要根据<strong>路由表</strong>规则，来判断哪一个网卡作为源地址 IP</p></blockquote><p>在 Linux 操作系统，我们可以使用 <code>route -n</code> 命令查看当前系统的路由表</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011152212434.png" alt="image-20231011152212434"></p><p>根据上面的路由表，我们假设 Web 服务器的目标地址是 <code>192.168.10.200</code></p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/%E8%B7%AF%E7%94%B1%E8%A1%A8_IP%E5%8C%B9%E9%85%8D.png" alt="路由表_IP匹配"></p><ol><li>首先先和第一条目的子网掩码（<code>Genmask</code>）进行 <strong>与运算</strong>，得到结果为 <code>192.168.10.0</code>，但是第一个条目的 <code>Destination</code> 是 <code>192.168.3.0</code>，两者不一致所以匹配失败</li><li>再与第二条目的子网掩码进行 <strong>与运算</strong>，得到的结果为 <code>192.168.10.0</code>，与第二条目的 <code>Destination 192.168.10.0</code> 匹配成功，所以将使用 <code>eth1</code> 网卡的 IP 地址作为 IP 包头的源地址</li></ol><p>也就是先匹配网络号来确保在同一子网下</p><p>假设 Web 服务器的目标地址是 <code>10.100.20.100</code>，那么依然依照上面的路由表规则判断，判断后的结果是和第三条目匹配</p><p>第三条目比较特殊，它目标地址和子网掩码都是 <code>0.0.0.0</code>，这表示<strong>默认网关</strong>，如果其他所有条目都无法匹配，就会自动匹配这一行。并且后续就把包发给路由器，<code>Gateway</code> 即是路由器的 IP 地址</p><h3 id="IP-报文生成"><a href="#IP-报文生成" class="headerlink" title="IP 报文生成"></a>IP 报文生成</h3><p>网络包的报文如下图</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/IP%E2%80%94TCP%E7%BD%91%E7%BB%9C%E5%8C%85.png" alt="IP—TCP网络包"></p><p>此时请求消息加上了TCP保证了传输的可靠，又加上了IP头部，有了远程定位的能力，那么下一站会是哪里呢？</p><h2 id="第六步-MAC"><a href="#第六步-MAC" class="headerlink" title="第六步 - MAC"></a>第六步 - MAC</h2><p>接下来网络包还需要在 IP 头部的前面加上 <strong>MAC 头部</strong></p><p><em>*MAC 包头格式</em></p><p>MAC 头部是以太网使用的头部，它包含了接收方和发送方的 MAC 地址等信息</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011155111943.png" alt="image-20231011155111943"></p><p>在 MAC 包头里需要<strong>发送方 MAC 地址</strong>和<strong>接收方目标 MAC 地址</strong>，用于<strong>两点之间的传输</strong></p><p>一般在 TCP/IP 通信里，MAC 包头的<strong>协议类型</strong>只使用</p><ul><li><code>0800</code> ： IP 协议</li><li><code>0806</code> ： ARP 协议</li></ul><p>🔥MAC 发送方和接收方如何确认?</p><p><strong>发送方</strong>的 MAC 地址获取就比较简单了，MAC 地址是在网卡生产时写入到 ROM 里的，只要将这个值读取出来写入到 MAC 头部就可以了</p><p><strong>接收方</strong>的 MAC 地址就有点复杂了，只要告诉以太网对方的 MAC 的地址，以太网就会帮我们把包发送过去，那么很显然这里应该填写对方的 MAC 地址</p><p>所以先得搞清楚应该把包发给谁，这个只要查一下<strong>路由表</strong>就知道了。在路由表中找到相匹配的条目，然后把包发给 <code>Gateway</code> 列中的 IP 地址就可以了</p><p>🔥既然知道要发给谁，如何获取对方的 MAC 地址呢？</p><p>不知道对方 MAC 地址？不知道就喊呗，此时就需要 <code>ARP</code> 协议帮我们找到路由器的 MAC 地址</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011155734847.png" alt="image-20231011155734847"></p><p>ARP （Address Resolution Protocol）协议会在以太网中以<strong>广播</strong>的形式，对以太网所有的设备喊出：“这个 IP 地址是谁的？请把你的 MAC 地址告诉我”</p><p>然后就会有人回答：“这个 IP 地址是我的，我的 MAC 地址是 XXXX”</p><p>如果对方和自己处于同一个子网中，那么通过上面的操作就可以得到对方的 MAC 地址。然后，我们将这个 MAC 地址写入 MAC 头部，MAC 头部就完成了</p><p>🔥好像每次都要广播获取，这不是很麻烦吗？</p><p>放心，在后续操作系统会把本次查询结果放到一块叫做 <strong>ARP 缓存</strong>的内存空间留着以后用，不过缓存的时间就几分钟</p><p>也就是说，在发包时：</p><ul><li><p>先查询 ARP 缓存，如果其中已经保存了对方的 MAC 地址，就不需要发送 ARP 查询，直接使用 ARP 缓存中的地址</p></li><li><p>而当 ARP 缓存中不存在对方 MAC 地址时，则发送 ARP 广播查询</p></li></ul><p>在 Linux 系统中，我们可以使用 <code>arp -a</code> 命令来查看 ARP 缓存的内容</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011160151935.png" alt="image-20231011160151935"></p><h3 id="MAC-报文生成"><a href="#MAC-报文生成" class="headerlink" title="MAC 报文生成"></a>MAC 报文生成</h3><p>网络包的报文如下图</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/mac%E6%8A%A5%E6%96%87.png" alt="mac报文"></p><p>此时请求消息有了TCP头部、IP头部和MAC头部，已经做足了准备，下一步就要动身前往了</p><h2 id="第七步-网卡"><a href="#第七步-网卡" class="headerlink" title="第七步 - 网卡"></a>第七步 - 网卡</h2><p>网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给对方。因此，我们需要将<strong>数字信息转换为电信号</strong>，才能在网线上传输，也就是说，这才是<strong>真正的数据发送过程</strong></p><p>负责执行这一操作的是<strong>网卡</strong>，要控制网卡还需要靠<strong>网卡驱动程序</strong></p><p>网卡驱动获取网络包之后，会将其<strong>复制</strong>到网卡内的缓存区中，接着会在其<strong>开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列</strong></p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011160700217.png" alt="image-20231011160700217"></p><ul><li>起始帧分界符是一个用来表示包起始位置的标记</li><li>末尾的 <code>FCS</code>（帧校验序列）用来检查包传输过程是否有损坏</li></ul><p>最后网卡会将包转为电信号，通过网线发送出去</p><p>至此，包才可以踏上寻找目的地的征途了</p><h2 id="第八步-交换机"><a href="#第八步-交换机" class="headerlink" title="第八步 - 交换机"></a>第八步 - 交换机</h2><p>交换机的设计是将网络包<strong>原样</strong>转发到目的地。交换机工作在 MAC 层，也称为<strong>二层网络设备</strong>。</p><p><strong>交换机的包接收操作</strong></p><p>首先，电信号到达网线接口，交换机里的模块进行接收，接下来交换机里的模块将电信号转换为数字信号</p><p>然后通过包末尾的 <code>FCS</code> 校验错误，如果没问题则放到缓冲区。这部分操作基本和计算机的网卡相同，但交换机的工作方式和网卡不同</p><blockquote><p>计算机的网卡本身具有 MAC 地址，并通过核对收到的包的接收方 MAC 地址判断是不是发给自己的，如果不是发给自己的则丢弃；相对地，交换机的端口<strong>不核对</strong>接收方 MAC 地址，而是直接接收所有的包并存放到缓冲区中。因此，和网卡不同，<strong>交换机的端口不具有 MAC 地址</strong></p></blockquote><p>将包存入缓冲区后，接下来需要查询一下这个包的接收方 MAC 地址是否已经在 <strong>MAC 地址表</strong>中有记录了</p><p>交换机的 MAC 地址表主要包含两个信息：</p><ul><li>一个是设备的 MAC 地址</li><li>另一个是该设备连接在交换机的哪个端口上</li></ul><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/mac%E5%9C%B0%E5%9D%80%E8%A1%A8.png" alt="mac地址表"></p><p>举个例子，如果收到的包的接收方 MAC 地址为 <code>00-02-B3-1C-9C-F9</code>，则与图中表中的第 3 行匹配，根据端口列的信息，可知这个地址位于 <code>3</code> 号端口上，然后就可以通过交换电路将包发送到相应的端口了</p><p>所以，<strong>交换机根据 MAC 地址表查找 MAC 地址，然后将信号发送到相应的端口</strong></p><p>🔥当 MAC 地址表找不到指定的 MAC 地址会怎么样？</p><p>地址表中找不到指定的 MAC 地址。这可能是因为具有该地址的设备还没有向交换机发送过包，或者这个设备一段时间没有工作导致地址被从地址表中删除了</p><p>这种情况下，交换机无法判断应该把包转发到哪个端口，只能将包转发到除了源端口之外的所有端口上，无论该设备连接在哪个端口上都能收到这个包</p><blockquote><p>这样做不会产生什么问题，因为以太网的设计本来就是将包发送到整个网络的，然后<strong>只有相应的接收者才接收包，而其他设备则会忽略这个包</strong></p></blockquote><p>🔥有人会说：“这样做会发送多余的包，会不会造成网络拥塞呢？”</p><p>其实完全不用过于担心，因为发送了包之后目标设备会作出响应，只要返回了响应包，交换机就可以将它的地址写入 MAC 地址表，下次也就不需要把包发到所有端口了</p><p>局域网中每秒可以传输上千个包，多出一两个包并无大碍</p><p>此外，如果接收方 MAC 地址是一个<strong>广播地址</strong>，那么交换机会将包发送到除源端口之外的所有端口</p><p>以下两个属于广播地址:</p><ul><li>MAC 地址中的 <code>FF:FF:FF:FF:FF:FF</code></li><li>IP 地址中的 <code>255.255.255.255</code></li></ul><p>交换机的主要功能是根据目标MAC地址将数据帧从一个端口转发到另一个端口</p><p>此时数据包经过交换机转发抵达了路由器，准备要离开土生土长的子网了</p><h2 id="第九步-路由器"><a href="#第九步-路由器" class="headerlink" title="第九步 - 路由器"></a>第九步 - 路由器</h2><p>网络包经过交换机之后，现在到达了<strong>路由器</strong>，并在此被转发到下一个路由器或目标设备</p><p>这一步转发的工作原理和交换机类似，也是通过查表判断包转发的目标。这一步转发的工作原理和交换机类似，也是通过查表判断包转发的目标</p><p>不过在具体的操作过程上，路由器和交换机是有区别的</p><blockquote><p>因为<strong>路由器</strong>是基于 IP 设计的，俗称<strong>三层</strong>网络设备，路由器的各个端口都具有 MAC 地址和 IP 地址</p><p>交换机是基于以太网设计的，俗称二层网络设备，交换机的端口不具有 IP 地址</p></blockquote><p><strong>路由器基本原理</strong></p><p>路由器的端口具有 MAC 地址，因此它就能够成为以太网的发送方和接收方；同时还具有 IP 地址，从这个意义上来说，它和计算机的网卡是一样的</p><p>当转发包时，首先路由器端口会接收发给自己的以太网包，然后<strong>路由表</strong>查询转发目标，再由相应的端口作为发送方将以太网包发送出去</p><p><strong>路由器的包接收操作</strong></p><p>首先，电信号到达网线接口部分，路由器中的模块会将电信号转成数字信号，然后通过包末尾的 <code>FCS</code> 进行错误校验</p><p>如果没问题则检查 MAC 头部中的<strong>接收方 MAC 地址</strong>，看看是不是发给自己的包，如果是就放到接收缓冲区中，否则就丢弃这个包</p><p>总的来说，路由器的端口都具有 MAC 地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃</p><p><strong>查询路由表确定输出端口</strong></p><p>完成包接收操作之后，路由器就会<strong>去掉</strong>包开头的 MAC 头部</p><p><strong>MAC 头部的作用就是将包送达路由器</strong>，其中的接收方 MAC 地址就是路由器端口的 MAC 地址。因此，当包到达路由器之后，MAC 头部的任务就完成了，于是 MAC 头部就会<strong>被丢弃</strong></p><p>路由器会根据 MAC 头部后方的 <code>IP</code> 头部中的内容进行包的转发操作</p><p>转发操作分为几个阶段，首先是查询<strong>路由表</strong>判断转发目标</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/%E8%B7%AF%E7%94%B1%E8%BD%AC%E5%8F%91%E7%9B%AE%E6%A0%87.png" alt="路由转发目标"></p><p>假设地址为 <code>10.10.1.101</code> 的计算机要向地址为 <code>192.168.1.100</code> 的服务器发送一个包，这个包先到达图中的路由器</p><p>判断转发目标的第一步，就是根据包的接收方 IP 地址查询路由表中的目标地址栏，以找到相匹配的记录</p><p>路由匹配和前面讲的一样，每个条目的子网掩码和 <code>192.168.1.100</code> IP 做 <strong>&amp; 与运算</strong>后，得到的结果与对应条目的目标地址进行匹配，如果匹配就会作为候选转发目标，如果不匹配就继续与下个条目进行路由匹配</p><p>如第二条目的子网掩码 <code>255.255.255.0</code> 与 <code>192.168.1.100</code> IP 做 <strong>&amp; 与运算</strong>后，得到结果是 <code>192.168.1.0</code> ，这与第二条目的目标地址 <code>192.168.1.0</code> 匹配，该第二条目记录就会被作为转发目标</p><p>实在找不到匹配路由时，就会选择<strong>默认路由</strong>，路由表中子网掩码为 <code>0.0.0.0</code> 的记录表示「默认路由」</p><h3 id="路由器发送"><a href="#路由器发送" class="headerlink" title="路由器发送"></a>路由器发送</h3><p>首先，根据<strong>路由表的网关列</strong>判断对方的地址</p><ul><li>如果网关是一个 IP 地址，则这个IP 地址就是我们要转发到的目标地址，<strong>还未抵达终点</strong>，还需继续需要路由器转发</li><li>如果网关为空，则 IP 头部中的接收方 IP 地址就是要转发到的目标地址，也是就终于找到 IP 包头里的目标地址了，说明<strong>已抵达终点</strong></li></ul><p>知道对方的 IP 地址之后，接下来需要通过 <code>ARP</code> 协议根据 IP 地址查询 MAC 地址，并将查询的结果作为接收方 MAC 地址</p><p>路由器也有 ARP 缓存，因此首先会在 ARP 缓存中查询，如果找不到则发送 ARP 查询请求</p><p>接下来是发送方 MAC 地址字段，这里填写输出端口的 MAC 地址。还有一个以太类型字段，填写 <code>0800</code> （十六进制）表示 IP 协议</p><p>网络包完成后，接下来会将其转换成电信号并通过端口发送出去。这一步的工作过程和交换机相同</p><p>发送出去的网络包会通过<strong>交换机</strong>到达下一个路由器。由于接收方 MAC 地址就是下一个路由器的地址，所以交换机会根据这一地址将包传输到下一个路由器</p><p>接下来，下一个路由器会将包转发给再下一个路由器，经过层层转发之后，网络包就到达了最终的目的地</p><p>在网络包传输的过程中，<strong>源 IP 和目标 IP 始终是不会变的，一直变化的是 MAC 地址</strong>，因为需要 MAC 地址在以太网内进行<strong>两个设备</strong>之间的包传输</p><p>包通过多个路由器的帮助，在网络世界途径了很多很多，最终抵达了目的地</p><h2 id="第十步-服务器"><a href="#第十步-服务器" class="headerlink" title="第十步 - 服务器"></a>第十步 - 服务器</h2><p>数据包抵达了服务器，服务器肯定高兴呀，正所谓有朋自远方来，不亦乐乎？</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%89%92%E5%8C%85.png" alt="服务器扒包"></p><p>数据包抵达服务器后，服务器会先扒开数据包的 MAC 头部，查看是否和服务器自己的 MAC 地址符合，符合就将包收起来</p><p>接着继续扒开数据包的 IP 头，发现 IP 地址符合，根据 IP 头中协议项，知道自己上层是 TCP 协议</p><p>于是，扒开 TCP 的头，里面有序列号，需要看一看这个序列包是不是我想要的，如果是就放入缓存中然后返回一个 ACK，如果不是就丢弃。TCP 头部里面还有端口号， HTTP 的服务器正在监听这个端口号</p><p>于是，服务器自然就知道是哪个 HTTP 进程想要这个包，于是就将包发这个 HTTP 进程。</p><p>服务器的 HTTP 进程看到，原来这个请求是要访问一个页面，于是就把这个网页封装在 HTTP 响应报文里</p><p>HTTP 响应报文也需要穿上 TCP、IP、MAC 头部，不过这次是源地址是服务器 IP 地址，目的地址是客户端 IP 地址</p><p>穿好头部衣服后，从网卡出去，交由交换机转发到出城的路由器，路由器就把响应数据包发到了下一个路由器，就这样跳啊跳</p><p>最后跳到了客户端的城门把守的路由器，路由器扒开 IP 头部发现是要找城内的人，于是又把包发给了城内的交换机，再由交换机转发到客户端</p><p>客户端收到了服务器的响应数据包后，同样也非常的高兴，客户能拆快递了</p><p>于是，客户端开始扒皮，把收到的数据包的皮扒剩 HTTP 响应报文后，交给浏览器去渲染页面，一份特别的数据包快递，就这样显示出来了</p><p>最后，<u>客户端要离开了，向服务器发起了 TCP 四次挥手，至此双方的连接就断开了</u></p><p>看到这里，我的理解就是交换机作用范围是在省内，而路由器是在省与省之间</p><h2 id="读者问答-同款疑问"><a href="#读者问答-同款疑问" class="headerlink" title="读者问答 - 同款疑问"></a>读者问答 - 同款疑问</h2><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231011172313286.png" alt="image-20231011172313286"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;对&lt;a href=&quot;https://xiaolincoding.com/network/1_base/what_happen_url.htm</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>TCP/IP网络模型</title>
    <link href="http://example.com/posts/6530.html"/>
    <id>http://example.com/posts/6530.html</id>
    <published>2023-10-10T13:25:00.000Z</published>
    <updated>2023-10-11T02:42:39.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对<a href="https://xiaolincoding.com/network/1_base/tcp_ip_model.html">小林coding</a>的这篇文章进行了自己整理，大佬文章非常棒，效率效果俱佳，我是一遍看完，真学习到了</p><h2 id="理解TCP-IP网络模型"><a href="#理解TCP-IP网络模型" class="headerlink" title="理解TCP/IP网络模型"></a>理解TCP/IP网络模型</h2><p>问题：同一台设备上的进程如何进行通信呢？</p><blockquote><p>答：通过管道、消息队列、共享内存、信号等方式</p></blockquote><p>问题：不同设备上的进程是如何通信呢？</p><blockquote><p>答：通过网络，而设备是多样的，因而为了兼容绝大多数设备，就协商出了一套通用的网络通信协议</p></blockquote><p>问题：TCP/IP具体指什么？</p><blockquote><p>答：TCP指传输控制协议，IP指Internet协议。TCP/IP是互联网通信的基础，它也用来指代常用协议（HTTP、TCP、IP等）的集合</p></blockquote><p><strong>需知：</strong> 网络协议是分层的，每一层都有各自的作用和职责</p><p>常见的网络模型</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010204857536.png" alt="image-20231010204857536"></p><h3 id="应用层和传输层"><a href="#应用层和传输层" class="headerlink" title="应用层和传输层"></a>应用层和传输层</h3><p>最上层的就是应用层（Application Layer）了，应用层只需专注为用户提供应用功能，应用层不需要关心数据是如何传输的</p><p>应用层的数据包会传给传输层（Transport Layer），传输层为应用层提供网络支持</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010173431964.png" alt=""></p><p>在传输层会有两个传输协议，分别是TCP和UDP</p><p>TCP（Transmission Control Protocol）名为传输控制协议，大部分应用传输层协议采用的就是TCP</p><blockquote><p>TCP相比UDP多了很多特性，比如<strong>流量控制</strong>、<strong>超时重传</strong>、<strong>拥塞控制</strong>等，这些特性可以<strong>很好保证</strong>数据包能<strong>可靠传输</strong>给接收方</p></blockquote><p>UDP（User Datagram Protocol）名为用户数据报协议，相较于TCP就简单许多了，只负责<font color=#9932CD>发送数据包</font>，<strong>不保证</strong>数据包是否送达，但它实时性更好，传输效率也更高（也就效果够呛）。当然UDP也可以实现可靠传输，把TCP特性加在应用层就可以，不过实现起来并不简单</p><p><u>采用不同协议就好比选择了哪个机构进行押货，保证了传输途中的可靠性</u></p><p>在传输数据时，如果数据包大小超过<font color=#9932CD>TCP最大报文段长度</font>，就需要将数据包分块，这样即使传输途中有分块丢失或损坏，只需重传这一分块，而不需要重新发送整个数据包，在TCP协议中，这个分块称为TCP段（TCP Segment）</p><p><u>进行分块同样是为了保证传输途中的可靠性</u></p><p>如果保证了以上操作，是不是就可以实现应用层通信了，非也，上述只保证了传输途中的可靠性，还有一点需要考虑：到达接收地接收实现，在影片中常用接头暗号来检验交易可靠性</p><div class='checkbox red'><input type="radio" />            <p>继续回到传输层把数据传给接收方的应用层还需要完成什么？</p>            </div>          <p>首先得明白一台设备上可能会有很多进程（应用）在接收或传输数据，因此需要<font color=#9932CD>使用端口号进行应用区分</font>，我们知道80端口通常是Web服务器在使用，22端口通常用于远程登录服务器的。而<font color=#9932CD>在浏览器中，每个标签栏都是一个独立的进程</font>，操作系统会为这些进程分配临时端口号</p><p>所以<strong>在传输层报文中会携带端口号</strong>来指定接收方用来接收数据的应用</p><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>传输层刚接触时可能会认为它负责将数据从一个设备传输到另一个设备，实际上真正负责的并不是它</p><p>在实际场景中的网络环节是错综复杂的，中间有各种各样的线路和分叉路口，而要完成数据传输，就需要在各种路径和节点进行选择，而这并非传输层负责</p><div class="note orange icon-padding simple"><i class="note-icon fas fa-badge-check"></i><p>这里就可以这么理解，用户（应用层）将包裹交给知名机构（传输层），知名机构找到适合的镖局（网络层）进行包裹押送，而在途中镖局选择行进路线和住宿客栈</p></div><p>也就是说，传输层是做服务的，网络层是干实事的，数据真正的传输是在网络层实现的</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010174555163.png" alt="image-20231010174555163"></p><p>网络层（Internet Layer）最常使用的便是IP协议，IP协议会将传输层的报文作为数据部分，再<strong>加上IP头部</strong>组成IP报文，如果IP报文大小超过MTU就会<strong>进行分片</strong>，这样就得到了一个即将发送到网络的IP报文</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010175045542.png" alt="image-20231010175045542"></p><p>🔥网络层负责将数据从一个设备传输到另一个设备，<font color=#9932CD>使用IP地址对设备进行编号从而区分设备</font></p><p>对于IPv4协议，IP地址分为四段，共32位，这样做到了区分设备，但寻址起来特别麻烦，于是将IP地址分成有意义的两部分：<strong>网络号</strong>（负责标识该IP地址属于哪个「子网」的）和 <strong>主机号</strong>（负责标识同一「子网」下不同主机）</p><p>要算出IP地址的网络号和主机号需要配合<strong>子网掩码</strong>，举个例子</p><blockquote><p>10.100.122.0/24，后面的<code>/24</code>表示的就是为 <code>255.255.255.0</code>的子网掩码，255.255.255.0 二进制是「11111111-11111111-11111111-00000000」，总共有24 个1，为了简化子网掩码的表示，用/24代替255.255.255.0 </p></blockquote><p>知道了子网掩码，该怎么计算出网络地址和主机地址呢？</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010201409473.png" alt="image-20231010201409473"></p><p>将 255.255.255.0 取反后与IP地址进行进行<strong>按位与运算</strong>，就可以得到主机号</p><p>在寻址的过程中，会先匹配到相同的网络号（表示要找到同一个子网），才会去找对应的主机</p><p>除了寻址能力， IP 协议还有另一个重要的能力就是<strong>路由</strong></p><blockquote><p>实际场景中，两台设备并不是用一条网线连接起来的，而是通过很多网关、路由器、交换机等众多网络设备连接起来的，那么就会形成很多条网络的路径，因此当数据包到达一个网络节点，就需要通过路由算法决定下一步走哪条路径</p></blockquote><p>路由器寻址工作中，就是要找到目标地址的子网，找到后进而把数据包转发给对应的网络内</p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010202320435.png" alt="image-20231010202320435"></p><p>所以，<u>IP协议的寻址作用是告诉我们<strong>下一个目的地的地址</strong>，路由则是根据目标地址进行<strong>路径选择</strong>。这就好比去旅游，要去泰山，首先寻址定位到山东省泰安市，然后规划是飞机高铁还是动车等（路由）</u></p><h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>生成了IP头部之后，接下来要交给<strong>网络接口层</strong>（Link Layer），在这一层会在IP头部前面加上MAC头部，并封装成数据帧发送到网络上</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010200048488.png" alt="image-20231010200048488"></p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010203316463.png" alt="image-20231010203316463"></p><p>IP头部中包含接收方IP地址，通过这个地址可以判断网络包要发送的目的地，但在以太网世界，这个思路无法行通</p><p>以太网在判断网络包目的地时所采用方式与IP地址不同，因此必须采用相匹方式才能在以太网中将包发往目的地，而MAC头部就是干这个用的，所以<font color=#9932CD>在以太网中通讯需要用MAC地址</font>，MAC头部是以太网使用的头部，包含了接收方和发送方的MAC地址等信息</p><p>可以通过ARP协议获取对方MAC地址</p><p>网络接口层主要为网络层提供「链路级别」传输服务，负责在以太网、WIFI这样底层网络上发送原始数据包，工作在网卡这个层次，使用MAC地址来标识网络上的设备</p><p><u>网络接口层就好比人知道了目的地是山东泰安，而你打算乘飞机去，当然得采用乘飞机流程，买票坐飞机，而不是告诉飞机目的地山东泰安</u></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>TCP/IP 网络模型是由上到下分成 4 层，分别是<strong>应用层，传输层，网络层和网络接口层</strong></p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/TCP_IP.png" alt="TCP_IP"></p><p> 每一层的封装格式</p><p><img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20231010205237282.png" alt="image-20231010205237282"></p><p>网络接口层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;对&lt;a href=&quot;https://xiaolincoding.com/network/1_base/tcp_ip_model.html&quot;&gt;</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="网络模型" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法3</title>
    <link href="http://example.com/posts/6521.html"/>
    <id>http://example.com/posts/6521.html</id>
    <published>2023-10-10T11:52:00.000Z</published>
    <updated>2023-10-10T11:51:46.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阶段三"><a href="#阶段三" class="headerlink" title="阶段三"></a>阶段三</h2><p>这一阶段是对markdown所能实现功能的又一次拓展，算是扩展语法的一部分，其实现与否和markdown编辑器对该语法的支持有关</p><h3 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h3><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710163554019.png" alt="image-20230710163554019"></p><p><strong>折叠效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710163614493.png" alt="image-20230710163614493"></p><p><strong>说明：</strong> 这里使用了HTML中的<code>details</code>和<code>summary</code>标签</p><h3 id="按键、总结、警告和标注"><a href="#按键、总结、警告和标注" class="headerlink" title="按键、总结、警告和标注"></a>按键、总结、警告和标注</h3><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710165147979.png" alt="image-20230710165147979"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710165206114.png" alt="image-20230710165206114"></p><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><p>语法格式：<code>-</code>+<code>空格</code>+<code>[空格]</code>+<code>[空格]</code>表示待完成，<code>-</code>+<code>空格</code>+<code>[x]</code>+<code>[空格]</code>表示已完成</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710170324006.png" alt="image-20230710170324006"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710170351985.png" alt="image-20230710170351985"></p><h3 id="时间轴和公式"><a href="#时间轴和公式" class="headerlink" title="时间轴和公式"></a>时间轴和公式</h3><p><strong>书写效果</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div alt=&quot;timenode&quot;&gt;</span><br><span class="line">        &lt;div alt=&quot;meta&quot;&gt;2019.9 ~ 2022.6 &lt;a href=&quot;#&quot; style=&quot;color: #045591; text-decoration: none; border-bottom: 0.05em solid; border-color: var(--url-underline-color); transition: .3s;&quot;&gt;谈发展&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div alt=&quot;body&quot;&gt;</span><br><span class="line">            人言落日是天涯，望极天涯不见家。&lt;br/&gt;</span><br><span class="line">            已恨碧山相阻隔，碧山还被暮云遮。</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div alt=&quot;timenode&quot;&gt;</span><br><span class="line">        &lt;div alt=&quot;meta&quot;&gt;2015.9 ~ 2019.6 &lt;a href=&quot;#&quot; style=&quot;color: #045591; text-decoration: none; border-bottom: 0.05em solid; border-color: var(--url-underline-color); transition: .3s;&quot;&gt;谈政治&lt;/a&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div alt=&quot;body&quot;&gt;</span><br><span class="line">            看花开花落，谈笑风生...</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710171809140.png" alt="image-20230710171809140"></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710171838998.png" alt="image-20230710171838998"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710171848835.png" alt="image-20230710171848835"></p><h3 id="流程图、时序图、甘特图"><a href="#流程图、时序图、甘特图" class="headerlink" title="流程图、时序图、甘特图"></a>流程图、时序图、甘特图</h3><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710171930955.png" alt="image-20230710171930955"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710171943773.png" alt="image-20230710171943773"></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710172037567.png" alt="image-20230710172037567"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710172002799.png" alt="image-20230710172002799"></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710172050135.png" alt="image-20230710172050135"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710172103861.png" alt="image-20230710172103861"></p><h3 id="熟练掌握HTML和CSS"><a href="#熟练掌握HTML和CSS" class="headerlink" title="熟练掌握HTML和CSS"></a>熟练掌握HTML和CSS</h3><p>markdown支持部分HTML和CSS，熟练掌握HTML和CSS可以个性化设置效果</p><h3 id="熟练掌握GFM等扩展语法"><a href="#熟练掌握GFM等扩展语法" class="headerlink" title="熟练掌握GFM等扩展语法"></a>熟练掌握GFM等扩展语法</h3><p>有些平台会引入一些额外的markdown语法和功能，了解并熟练掌握有助于在该平台发展</p><h3 id="开发通用强大的开源组件"><a href="#开发通用强大的开源组件" class="headerlink" title="开发通用强大的开源组件"></a>开发通用强大的开源组件</h3><p>有能力反馈社会时更应该记得来路开源共享所给予的温暖与帮助，这时候可以反馈一二</p><p>……</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>markdown第四阶段肯定是有的，那是每个人心里的伊甸园，想要到达却无法到达</p><p>如果能有幸看到最后且本套教程对你认识学习markdown有所帮助，那也算不枉其神</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;阶段三&quot;&gt;&lt;a href=&quot;#阶段三&quot; class=&quot;headerlink&quot; title=&quot;阶段三&quot;&gt;&lt;/a&gt;阶段三&lt;/h2&gt;&lt;p&gt;这一阶段是对markdown所能实现功能的又一次拓展，算是扩展语法的一部分，其实现与否和markdown编辑器对该语法的支持有关&lt;/</summary>
      
    
    
    
    <category term="写作" scheme="http://example.com/categories/%E5%86%99%E4%BD%9C/"/>
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法2</title>
    <link href="http://example.com/posts/6520.html"/>
    <id>http://example.com/posts/6520.html</id>
    <published>2023-10-09T10:48:00.000Z</published>
    <updated>2023-10-09T10:48:32.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阶段二"><a href="#阶段二" class="headerlink" title="阶段二"></a>阶段二</h2><p>这一阶段主要掌握常见内容插入和内容样式美化</p><h3 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h3><h4 id="粗体、斜体、粗斜体"><a href="#粗体、斜体、粗斜体" class="headerlink" title="粗体、斜体、粗斜体"></a>粗体、斜体、粗斜体</h4><p>语法格式：通过星号或下划线包裹内容来创建粗体、斜体、粗斜体</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708210713804.png" alt="image-20230708210713804"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708210752312.png" alt="image-20230708210752312"></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708211131216.png" alt="image-20230708211131216"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708211158985.png" alt="image-20230708211158985">   </p><p><strong>说明：</strong> 首先得明白中文输入法符号是全角符号，占两个字节，而英文输入法符号是半角符号，占一个字节；然后标准的markdown粗体语法后接空格，不然编辑器渲染无效，当然现在多数编辑器适应国人习惯，后面不接空格依旧可以渲染出来</p><h4 id="删除线与下划线"><a href="#删除线与下划线" class="headerlink" title="删除线与下划线"></a>删除线与下划线</h4><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708211612436.png" alt="image-20230708211612436"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708211622064.png" alt="image-20230708211622064"></p><p><strong>说明：</strong>这里的下划线用的是HTML的u标签(元素)来实现的</p><h4 id="字体、字体大小及颜色"><a href="#字体、字体大小及颜色" class="headerlink" title="字体、字体大小及颜色"></a>字体、字体大小及颜色</h4><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708211931176.png" alt="image-20230708211931176"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708212003111.png" alt="image-20230708212003111"></p><p><strong>说明：</strong> 属性值用==英文双引号==括起来，在本地使用markdown其所设置的字体必须为本地所持有的，否则显示默认字体即微软雅黑（特指Windows）</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708212343583.png" alt="image-20230708212343583"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708212355035.png" alt="image-20230708212355035"></p><p><strong>说明：</strong> 字体大小可以修改，但最大和最小是有临界效果的</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708212655007.png" alt="image-20230708212655007"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708212703508.png" alt="image-20230708212703508"></p><p><strong>说明：</strong> 首先得明白红、绿、蓝(光的三原色，RGB)这三种色光以不同比列的混合几乎可以得出自然界所有的颜色；然后得知道颜色表示方法通常有三种:</p><ul><li>第一种 颜色名称 如 red表示红色</li><li>第二种  rgb表示法 参数值是介于0与255之间的整数 如rgb(255,0,0) 表示红色</li><li>第三种 十六进制(hex)表示法 如：<code>#ff0000</code>表示红色</li></ul><p>关于色值的rgb与十六进制表示可查：<a href="https://mycolor.space">https://mycolor.space</a></p><h4 id="排列"><a href="#排列" class="headerlink" title="排列"></a>排列</h4><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708213630649.png" alt="image-20230708213630649"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708213654472.png" alt="image-20230708213654472"></p><h3 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h3><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709212042472.png" alt="image-20230709212042472"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709212120725.png" alt="image-20230709212120725"></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><h4 id="网址链接"><a href="#网址链接" class="headerlink" title="网址链接"></a>网址链接</h4><p>语法格式：使用尖括号将URL或Email地址括起来</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709212802391.png" alt="image-20230709212802391"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709212817690.png" alt="image-20230709212817690"></p><h4 id="文字链接"><a href="#文字链接" class="headerlink" title="文字链接"></a>文字链接</h4><p>语法格式：<code>[链接文字](链接地址)</code></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709213310312.png" alt="image-20230709213310312"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709213323784.png" alt="image-20230709213323784"><br><strong>注意：</strong> 链接地址最好是完整的URL，不然可能会遇到水土不服的情况</p><p><strong>说明：</strong> 在文字链接的基础上现在又支持了鼠标悬浮链接有提示信息的效果</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710174117669.png" alt="image-20230710174117669"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230710174636510.png" alt="image-20230710174636510"></p><h4 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h4><p>语法格式：<code>[链接标记](链接标记)</code> + <code>[链接标记]:链接地址</code> 其中链接标记建议放到文末</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709214502351.png" alt="image-20230709214502351"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709214657597.png" alt="image-20230709214657597"></p><p><strong>说明：</strong> 链接标记后的冒号现在变为了<u>英文输入法</u>的冒号，链接标记都支持数字有效，部分编辑器不支持链接标记是字母、标点符号</p><h3 id="行内代码与代码块"><a href="#行内代码与代码块" class="headerlink" title="行内代码与代码块"></a>行内代码与代码块</h3><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708220011721.png" alt="image-20230708220011721"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708220301587.png" alt="image-20230708220301587"></p><p><strong>书写效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708220511200.png" alt="image-20230708220511200"> </p><p><strong>展示效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708221107040.png" alt=""> </p><p><strong>说明：</strong> 代码块所使用的编程语言决定了与之对应的语法高亮</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>无序列表语法格式：<code>*</code>或<code>+</code>或<code>-</code>+<code>空格</code>+<code>内容</code></p><p>有序列表语法格式：<code>数字</code>+<code>.</code>+<code>空格</code>+<code>内容</code></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708214347600.png" alt="image-20230708214347600"> </p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708214656320.png" alt="image-20230708214656320"></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708214831499.png" alt="image-20230708214831499"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708215145566.png" alt="image-20230708215145566"></p><p><strong>说明：</strong> 列表分为有序列表和无序列表，两种列表可以嵌套使用</p><h3 id="图片与emoji"><a href="#图片与emoji" class="headerlink" title="图片与emoji"></a>图片与emoji</h3><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>插入图片语法：<code>![图片名称](图片地址)</code>，其中图片名称也可以用来图片失效后用文字描述情况，图片地址可以是本地图片地址也可以是网络图片地址，目前使用网络地址居多</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709221518588.png" alt="image-20230709221518588"></p><p><strong>展示效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709221527424.png" alt="image-20230709221527424"> </p><p><strong>书写效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709221546472.png" alt="image-20230709221546472"> </p><p><strong>展示效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709221552021.png" alt="image-20230709221552021"> </p><p><strong>说明：</strong> 若是使用本地图片地址，建议使用相对路径，要插入网络图片必须要获取图片网络链接，而图片都是存储在服务器(云端)上的，有一类专门用来存放图片的服务器通常称为图床，通常来讲，在markdown编辑器上插入图片，首先要解决的便是图床问题</p><p><strong>图床网站推荐</strong></p><ul><li><a href="https://imgtg.com">TG图床</a> 响应快、免费</li><li><a href="https://www.superbed.cn">聚合图床</a> 响应快、免费</li></ul><blockquote><p>都需要注册才可以使用，这两家图床网站真的很好用，如果你用过响应慢的、要实名的、有限制的等，你就知道它的好</p></blockquote><p><strong>个人建议：</strong> 如果可以还是建议搭建个人图床，毕竟图床网站是部署在他人服务器上的，而搭建个人图床，就不得不提Picgo：<a href="https://molunerfinn.com/PicGo，关于搭建流程建议PicGo+阿里云，可参考这两篇文章：https://zhuanlan.zhihu.com/p/104152479和https://zhuanlan.zhihu.com/p/636646400">https://molunerfinn.com/PicGo，关于搭建流程建议PicGo+阿里云，可参考这两篇文章：https://zhuanlan.zhihu.com/p/104152479和https://zhuanlan.zhihu.com/p/636646400</a></p><p><strong>补充：</strong> 手机图床推荐flutter-picgo，开源地址： <a href="https://github.com/PicGo/flutter-picgo">https://github.com/PicGo/flutter-picgo</a></p><h4 id="emoji"><a href="#emoji" class="headerlink" title="emoji"></a>emoji</h4><p>插入emoji语法：到收集emoji的网站复制粘贴到编辑器即可</p><p>emoji网站</p><ul><li><a href="https://www.emojiall.com/zh-hans">https://www.emojiall.com/zh-hans</a></li><li><a href="https://sunhwee.com/posts/a927e90e.html">https://sunhwee.com/posts/a927e90e.html</a></li><li><a href="https://github.com/guodongxiaren/README/blob/master/emoji.md">https://github.com/guodongxiaren/README/blob/master/emoji.md</a></li></ul><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709223302864.png" alt="image-20230709223302864"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709223310747.png" alt="image-20230709223310747"></p><h3 id="脚注、上下标、转义"><a href="#脚注、上下标、转义" class="headerlink" title="脚注、上下标、转义"></a>脚注、上下标、转义</h3><h4 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h4><p>具体语法：<code>[^要注明的文本]</code>+<code>[^要注明的文本]:</code>，其中冒号为英文输入法下的冒号</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220716346.png" alt="image-20230709220716346"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220724205.png" alt="image-20230709220724205"></p><p><strong>说明：</strong> 脚注是对文本的补充说明</p><h4 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h4><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220811869.png" alt="image-20230709220811869"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220821602.png" alt="image-20230709220821602"></p><h4 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h4><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220832171.png" alt="image-20230709220832171">   </p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220857218.png" alt="image-20230709220857218"></p><p><strong>说明：</strong> markdown使用了很多特殊符号来表示特定意义，如果需要显示特定符号则需要使用转义字符，markdown使用反斜杠转义特殊字符</p><p>脚注语法：<code>[^要注明的文本]</code>+<code>[^要注明的文本]:</code>，其中冒号为英文输入法的冒号</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220250815.png" alt="image-20230709220250815"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709220304188.png" alt="image-20230709220304188"></p><p><strong>说明：</strong> 脚注是对文本的补充说明</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>表格对齐语法：<code>-:</code>设置内容和标题栏右对齐，<code>:-</code>设置内容和标题栏左对齐，<code>:-:</code>设置内容和标题栏居中对齐</p><p><strong>书写效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708232855750.png" alt="image-20230708232855750"> </p><p><strong>展示效果</strong></p><p><img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708232925360.png" alt="image-20230708232925360"> </p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709215450571.png" alt="image-20230709215450571"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230709215520422.png" alt="image-20230709215520422"></p><p><strong>说明：</strong> 使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行；不同编辑器表格的默认对齐方式可能不一</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;阶段二&quot;&gt;&lt;a href=&quot;#阶段二&quot; class=&quot;headerlink&quot; title=&quot;阶段二&quot;&gt;&lt;/a&gt;阶段二&lt;/h2&gt;&lt;p&gt;这一阶段主要掌握常见内容插入和内容样式美化&lt;/p&gt;
&lt;h3 id=&quot;文字样式&quot;&gt;&lt;a href=&quot;#文字样式&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="写作" scheme="http://example.com/categories/%E5%86%99%E4%BD%9C/"/>
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法1</title>
    <link href="http://example.com/posts/6519.html"/>
    <id>http://example.com/posts/6519.html</id>
    <published>2023-10-09T02:50:00.000Z</published>
    <updated>2023-10-09T03:07:48.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之后所呈现的markdown语法效果都是在<strong>VSCode</strong>上演示的</p><p>不同markdown编辑器对同一markdown语法渲染，其效果大多是不一样的，<font color=#9932CD>所呈现效果不止取决于所采用的语法，同时和也所用的编辑器有关</font></p><p>之后的演示中有部分内容会浅浅涉及HTML和CSS内容，知道更好，不知道也没关系</p><h2 id="阶段一"><a href="#阶段一" class="headerlink" title="阶段一"></a>阶段一</h2><p>这一阶段主要掌握关乎于页面内容和结构的语法，样式语法之后在考虑</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>语法格式：<code>#</code>+<code>空格</code>+<code>标题名称</code></p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708201048296.png" alt="image-20230708201048296"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708194545367.png" alt="image-20230708194545367"></p><p><strong>说明：</strong><code>#</code>的个数代表标题的级别</p><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>语法格式：通过三个及以上减号、星号或下划线来创建分隔线</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708201909404.png" alt="image-20230708201909404"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708201926146.png" alt="image-20230708201926146"></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>语法格式：段落前添加一个 <code>&gt;</code> 符号</p><p><strong>书写效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708202819313.png" alt="image-20230708202819313"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-image-article.oss-cn-hangzhou.aliyuncs.com/img/image-20230708203022671.png" alt="image-20230708203022671"></p><p><strong>说明：</strong> 引用通常包括多段落引用、嵌套引用和带其他元素引用</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>语法格式：具体看markdown编辑器所支持的目录语法</p><p>Typora和VSCode目录语法：<code>[toc]</code></p><p><strong>书写效果</strong></p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20230708210048511.png" alt="image-20230708210048511"></p><p><strong>展示效果</strong></p><p> <img src="https://mk-gzh.oss-cn-guangzhou.aliyuncs.com/images/image-20230708210023359.png" alt="image-20230708210023359"></p><p><strong>说明：</strong> 现在VSCode目录语法展示效果变丑了，就只展示之前所呈现的效果</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之后所呈现的markdown语法效果都是在&lt;strong&gt;VSCode&lt;/strong&gt;上演示的&lt;/p&gt;
&lt;p&gt;不同markdown编辑器对</summary>
      
    
    
    
    <category term="写作" scheme="http://example.com/categories/%E5%86%99%E4%BD%9C/"/>
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown学习路线</title>
    <link href="http://example.com/posts/6518.html"/>
    <id>http://example.com/posts/6518.html</id>
    <published>2023-10-09T02:45:00.000Z</published>
    <updated>2023-10-09T02:52:27.464Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自己所采纳的学习路线"><a href="#自己所采纳的学习路线" class="headerlink" title="自己所采纳的学习路线"></a>自己所采纳的学习路线</h2><p>我是在<u>接触了解后才明白markdown对记录笔记和写作的意义</u>，它成功吸引了我的注意，于是便动手学了起来。在这期间，发现效果挺不错，于是越发卖力的学习使用</p><h3 id="markdown漂流记"><a href="#markdown漂流记" class="headerlink" title="markdown漂流记"></a>markdown漂流记</h3><p>看菜鸟教程了解学习markdown语法：<a href="https://www.runoob.com/markdown/md-tutorial.html，在VSCode上进行实践了解各种语法所显示的效果">https://www.runoob.com/markdown/md-tutorial.html，在VSCode上进行实践了解各种语法所显示的效果</a></p><p>之后就结合网上各式各样的markdown教程进行补充理解，经过一周左右，觉得有必要系统学习下（天真~)，便花了==6块大洋==在腾讯课堂买了<font color=#9932CD>快速入手markdown的课程</font>，只能说学了个寂寞，但也不能说的这么绝对，算是帮我开了开眼界，不是所有的课都是用来传道受业解惑滴</p><p>再往后就选择阅读《了不起的markdown》这本书进行理解实践markdown语法了</p><p>后来偶然发现原来是有markdown官方教程的：<a href="https://markdown.com.cn，除此思源官方也提供了markdown语法教程：https://ld246.com/tag/markdown，但">https://markdown.com.cn，除此思源官方也提供了markdown语法教程：https://ld246.com/tag/markdown，但</a>……</p><p>就这样几经波折算是对markdown语法及使用有了清晰的认识，为什么会这样子，有两方面原因：一是没找对地方，二是网上教程参考居多，细致系统整理较少，因而学后总觉得缺棱少角</p><p>之后基于两方面考虑：一是不能光学不练，二是朋友对markdown也有学习需求，便自己整理了份markdown细腻教程</p><h2 id="你可以采纳的学习路线"><a href="#你可以采纳的学习路线" class="headerlink" title="你可以采纳的学习路线"></a>你可以采纳的学习路线</h2><p>在有了我的铺垫后，你可以安全上路，<u>不必踩我踩过的坑儿，虽说走的人多了，也便成了路</u></p><p>按照我设置的进程进行分级了解markdown语法，然后<font color=#9932CD>结合语法进行实践演示来明白其具体显示效果</font></p><p>简言之：结合我所整理的教程与官方教程熟悉markdown语法，等可以熟练使用markdown语法可以进阶使用扩展语法看看不一样的效果，总之系统学习戒骄戒躁，肯定会有见效</p><h2 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a>markdown编辑器</h2><p>工欲善其事，必先利其器</p><h3 id="移动端编辑器"><a href="#移动端编辑器" class="headerlink" title="移动端编辑器"></a>移动端编辑器</h3><p>排名不分先后</p><ul><li>neatify</li><li>榴莲日记</li><li>纯纯写作</li><li>有道云</li></ul><h3 id="PC端编辑器"><a href="#PC端编辑器" class="headerlink" title="PC端编辑器"></a>PC端编辑器</h3><ul><li>typora</li><li>思源笔记</li><li>vnote</li><li>VSCode</li><li>小书匠</li><li>neatify</li></ul><h3 id="网页端编辑器"><a href="#网页端编辑器" class="headerlink" title="网页端编辑器"></a>网页端编辑器</h3><ul><li><p>小书匠：<a href="http://markdown.xiaoshujiang.com">http://markdown.xiaoshujiang.com</a></p></li><li><p>LetsMarkdown：<a href="https://letsmarkdown.com">https://letsmarkdown.com</a></p></li><li><p>Cmd markdown：<a href="https://www.zybuluo.com/mdeditor">https://www.zybuluo.com/mdeditor</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;自己所采纳的学习路线&quot;&gt;&lt;a href=&quot;#自己所采纳的学习路线&quot; class=&quot;headerlink&quot; title=&quot;自己所采纳的学习路线&quot;&gt;&lt;/a&gt;自己所采纳的学习路线&lt;/h2&gt;&lt;p&gt;我是在&lt;u&gt;接触了解后才明白markdown对记录笔记和写作的意义&lt;/u&gt;，</summary>
      
    
    
    
    <category term="写作" scheme="http://example.com/categories/%E5%86%99%E4%BD%9C/"/>
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
</feed>
